Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    ENDCLASS
    GETRECORD
    INHERITS
    LEFT_BRACE
    NEW
    NEWLINE
    PUTRECORD
    RIGHT_BRACE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DELETE ID
Rule 4     statement -> DECLARE ID COLON ID
Rule 5     statement -> CONSTANT ID EQUAL expression
Rule 6     statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 7     dimensions -> dimensions COMMA dimension
Rule 8     dimensions -> dimension
Rule 9     dimension -> expression COLON expression
Rule 10    statement -> ID ASSIGN expression
Rule 11    statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
Rule 12    statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
Rule 13    statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
Rule 14    array_items -> array_items COMMA expression
Rule 15    array_items -> expression
Rule 16    indexes -> indexes COMMA expression
Rule 17    indexes -> expression
Rule 18    statement -> INPUT ID
Rule 19    statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 20    statement -> OUTPUT output_expression
Rule 21    output_expression -> output_expression COMMA expression
Rule 22    output_expression -> expression
Rule 23    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 24    statement -> IF expression THEN statements ENDIF
Rule 25    statement -> CASE OF ID cases ENDCASE
Rule 26    statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
Rule 27    cases -> cases case
Rule 28    cases -> case
Rule 29    case -> case_expression COLON statements SEMICOLON
Rule 30    case -> otherwise_statement SEMICOLON
Rule 31    case_expression -> expression TO expression
Rule 32    case_expression -> expression
Rule 33    otherwise_statement -> OTHERWISE COLON statements
Rule 34    statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
Rule 35    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 36    statement -> REPEAT statements UNTIL expression
Rule 37    statement -> WHILE expression DO statements ENDWHILE
Rule 38    statement -> WHILE expression statements ENDWHILE
Rule 39    statement -> expression
Rule 40    expression -> ID
Rule 41    expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 42    expression -> expression OR expression
Rule 43    expression -> expression AND expression
Rule 44    expression -> NOT expression
Rule 45    expression -> expression EQUAL expression
Rule 46    expression -> expression NOT_EQUAL expression
Rule 47    expression -> expression LESS expression
Rule 48    expression -> expression GREATER expression
Rule 49    expression -> expression LESS_EQUAL expression
Rule 50    expression -> expression GREATER_EQUAL expression
Rule 51    expression -> expression MOD expression
Rule 52    expression -> expression DIV expression
Rule 53    expression -> expression MUL expression
Rule 54    expression -> expression N_DIV expression
Rule 55    expression -> MINUS expression
Rule 56    expression -> PLUS expression
Rule 57    expression -> expression PLUS expression
Rule 58    expression -> expression MINUS expression
Rule 59    expression -> expression CONNECT expression
Rule 60    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 61    expression -> DATE
Rule 62    expression -> BOOLEAN
Rule 63    expression -> CHAR
Rule 64    expression -> STRING
Rule 65    expression -> REAL
Rule 66    expression -> INTEGER
Rule 67    declare_parameters -> declare_parameters COMMA declare_parameter
Rule 68    declare_parameters -> declare_parameter
Rule 69    declare_parameter -> ID COLON ID
Rule 70    declare_parameter -> ID COLON ARRAY
Rule 71    declare_parameter -> BYREF ID COLON ID
Rule 72    declare_parameter -> BYREF ID COLON ARRAY
Rule 73    declare_parameter -> BYVAL ID COLON ID
Rule 74    declare_parameter -> BYVAL ID COLON ARRAY
Rule 75    parameters -> parameters COMMA expression
Rule 76    parameters -> expression
Rule 77    statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 78    statement -> PROCEDURE ID statements ENDPROCEDURE
Rule 79    statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN
Rule 80    statement -> CALL ID
Rule 81    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 82    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 83    statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION
Rule 84    statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
Rule 85    expression -> ID LEFT_PAREN parameters RIGHT_PAREN
Rule 86    expression -> ID LEFT_PAREN RIGHT_PAREN
Rule 87    statement -> RETURN expression
Rule 88    statement -> OPENFILE expression FOR READ
Rule 89    statement -> OPENFILE expression FOR WRITE
Rule 90    statement -> OPENFILE expression FOR APPEND
Rule 91    statement -> OPENFILE expression FOR RANDOM
Rule 92    statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 93    statement -> READFILE expression COMMA ID
Rule 94    statement -> WRITEFILE expression COMMA expression
Rule 95    statement -> CLOSEFILE expression
Rule 96    statement -> SEEK expression COMMA expression
Rule 97    statement -> TYPE ID statements ENDTYPE
Rule 98    expression -> expression DOT expression
Rule 99    statement -> expression DOT statement
Rule 100   statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
Rule 101   enumerate_items -> enumerate_items COMMA ID
Rule 102   enumerate_items -> ID
Rule 103   statement -> TYPE ID EQUAL POINTER ID
Rule 104   statement -> PASS
Rule 105   statement -> IMPORT expression
Rule 106   statement -> PRIVATE statement
Rule 107   statement -> PUBLIC statement

Terminals, with rules where they appear

AND                  : 43
APPEND               : 90
ARRAY                : 6 70 72 74 82 84
ASSIGN               : 10 11 12 13 34 35
BOOLEAN              : 62
BYREF                : 71 72
BYVAL                : 73 74
CALL                 : 79 80
CASE                 : 25 26
CHAR                 : 63
CLASS                : 
CLOSEFILE            : 95
COLON                : 4 6 9 29 33 69 70 71 72 73 74
COMMA                : 7 14 16 21 67 75 92 93 94 96 101
CONNECT              : 59
CONSTANT             : 5
DATE                 : 61
DECLARE              : 4 6
DELETE               : 3
DIV                  : 52
DO                   : 37
DOT                  : 98 99
ELSE                 : 23
ENDCASE              : 25 26
ENDCLASS             : 
ENDFUNCTION          : 81 82 83 84
ENDIF                : 23 24
ENDPROCEDURE         : 77 78
ENDTYPE              : 97
ENDWHILE             : 37 38
EQUAL                : 5 45 100 103
FOR                  : 34 35 88 89 90 91
FUNCTION             : 81 82 83 84
GETRECORD            : 
GREATER              : 48
GREATER_EQUAL        : 50
ID                   : 3 4 4 5 6 6 10 11 12 13 18 19 25 26 34 34 35 35 40 41 69 69 70 71 71 72 73 73 74 77 78 79 80 81 81 82 83 83 84 85 86 92 93 97 100 101 102 103 103
IF                   : 23 24
IMPORT               : 105
INHERITS             : 
INPUT                : 18 19
INTEGER              : 66
LEFT_BRACE           : 
LEFT_PAREN           : 60 77 79 81 82 85 86 100
LEFT_SQUARE          : 6 11 12 13 13 19 26 41 92
LESS                 : 47
LESS_EQUAL           : 49
MINUS                : 55 58
MOD                  : 51
MUL                  : 53
NEW                  : 
NEWLINE              : 
NEXT                 : 34 35
NOT                  : 44
NOT_EQUAL            : 46
N_DIV                : 54
OF                   : 6 25 26
OPENFILE             : 88 89 90 91
OR                   : 42
OTHERWISE            : 33
OUTPUT               : 20
PASS                 : 104
PLUS                 : 56 57
POINTER              : 103
PRIVATE              : 106
PROCEDURE            : 77 78
PUBLIC               : 107
PUTRECORD            : 
RANDOM               : 91
READ                 : 88
READFILE             : 92 93
REAL                 : 65
REPEAT               : 36
RETURN               : 87
RETURNS              : 81 82 83 84
RIGHT_BRACE          : 
RIGHT_PAREN          : 60 77 79 81 82 85 86 100
RIGHT_SQUARE         : 6 11 12 13 13 19 26 41 92
SEEK                 : 96
SEMICOLON            : 29 30
STEP                 : 34
STRING               : 64
THEN                 : 23 24
TO                   : 31 34 35
TYPE                 : 97 100 103
UNTIL                : 36
WHILE                : 37 38
WRITE                : 89
WRITEFILE            : 94
error                : 

Nonterminals, with rules where they appear

array_items          : 12 13 14
case                 : 27 28
case_expression      : 29
cases                : 25 26 27
declare_parameter    : 67 68
declare_parameters   : 67 77 81 82
dimension            : 7 8
dimensions           : 6 7
enumerate_items      : 100 101
expression           : 5 9 9 10 11 14 15 16 17 21 22 23 24 31 31 32 34 34 34 35 35 36 37 38 39 42 42 43 43 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 56 57 57 58 58 59 59 60 75 76 87 88 89 90 91 92 93 94 94 95 96 96 98 98 99 105
indexes              : 11 13 16 19 26 41 92
otherwise_statement  : 30
output_expression    : 20 21
parameters           : 75 79 85
statement            : 1 2 99 106 107
statements           : 1 23 23 24 29 33 34 35 36 37 38 77 78 81 82 83 84 97 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 2

    (2) statements -> statement .

    DELETE          reduce using rule 2 (statements -> statement .)
    DECLARE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    PROCEDURE       reduce using rule 2 (statements -> statement .)
    CALL            reduce using rule 2 (statements -> statement .)
    FUNCTION        reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    OPENFILE        reduce using rule 2 (statements -> statement .)
    READFILE        reduce using rule 2 (statements -> statement .)
    WRITEFILE       reduce using rule 2 (statements -> statement .)
    CLOSEFILE       reduce using rule 2 (statements -> statement .)
    SEEK            reduce using rule 2 (statements -> statement .)
    TYPE            reduce using rule 2 (statements -> statement .)
    PASS            reduce using rule 2 (statements -> statement .)
    IMPORT          reduce using rule 2 (statements -> statement .)
    PRIVATE         reduce using rule 2 (statements -> statement .)
    PUBLIC          reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    MINUS           reduce using rule 2 (statements -> statement .)
    PLUS            reduce using rule 2 (statements -> statement .)
    LEFT_PAREN      reduce using rule 2 (statements -> statement .)
    DATE            reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ENDPROCEDURE    reduce using rule 2 (statements -> statement .)
    ENDTYPE         reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ENDFUNCTION     reduce using rule 2 (statements -> statement .)
    SEMICOLON       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DELETE . ID

    ID              shift and go to state 40


state 4

    (10) statement -> ID . ASSIGN expression
    (11) statement -> ID . LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> ID . ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> ID . LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (40) expression -> ID .
    (41) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (85) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          shift and go to state 41
    LEFT_SQUARE     shift and go to state 42
    DOT             reduce using rule 40 (expression -> ID .)
    OR              reduce using rule 40 (expression -> ID .)
    AND             reduce using rule 40 (expression -> ID .)
    EQUAL           reduce using rule 40 (expression -> ID .)
    NOT_EQUAL       reduce using rule 40 (expression -> ID .)
    LESS            reduce using rule 40 (expression -> ID .)
    GREATER         reduce using rule 40 (expression -> ID .)
    LESS_EQUAL      reduce using rule 40 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 40 (expression -> ID .)
    MOD             reduce using rule 40 (expression -> ID .)
    DIV             reduce using rule 40 (expression -> ID .)
    MUL             reduce using rule 40 (expression -> ID .)
    N_DIV           reduce using rule 40 (expression -> ID .)
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    CONNECT         reduce using rule 40 (expression -> ID .)
    DELETE          reduce using rule 40 (expression -> ID .)
    DECLARE         reduce using rule 40 (expression -> ID .)
    CONSTANT        reduce using rule 40 (expression -> ID .)
    ID              reduce using rule 40 (expression -> ID .)
    INPUT           reduce using rule 40 (expression -> ID .)
    OUTPUT          reduce using rule 40 (expression -> ID .)
    IF              reduce using rule 40 (expression -> ID .)
    CASE            reduce using rule 40 (expression -> ID .)
    FOR             reduce using rule 40 (expression -> ID .)
    REPEAT          reduce using rule 40 (expression -> ID .)
    WHILE           reduce using rule 40 (expression -> ID .)
    PROCEDURE       reduce using rule 40 (expression -> ID .)
    CALL            reduce using rule 40 (expression -> ID .)
    FUNCTION        reduce using rule 40 (expression -> ID .)
    RETURN          reduce using rule 40 (expression -> ID .)
    OPENFILE        reduce using rule 40 (expression -> ID .)
    READFILE        reduce using rule 40 (expression -> ID .)
    WRITEFILE       reduce using rule 40 (expression -> ID .)
    CLOSEFILE       reduce using rule 40 (expression -> ID .)
    SEEK            reduce using rule 40 (expression -> ID .)
    TYPE            reduce using rule 40 (expression -> ID .)
    PASS            reduce using rule 40 (expression -> ID .)
    IMPORT          reduce using rule 40 (expression -> ID .)
    PRIVATE         reduce using rule 40 (expression -> ID .)
    PUBLIC          reduce using rule 40 (expression -> ID .)
    NOT             reduce using rule 40 (expression -> ID .)
    DATE            reduce using rule 40 (expression -> ID .)
    BOOLEAN         reduce using rule 40 (expression -> ID .)
    CHAR            reduce using rule 40 (expression -> ID .)
    STRING          reduce using rule 40 (expression -> ID .)
    REAL            reduce using rule 40 (expression -> ID .)
    INTEGER         reduce using rule 40 (expression -> ID .)
    $end            reduce using rule 40 (expression -> ID .)
    UNTIL           reduce using rule 40 (expression -> ID .)
    ENDWHILE        reduce using rule 40 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 40 (expression -> ID .)
    ENDTYPE         reduce using rule 40 (expression -> ID .)
    ELSE            reduce using rule 40 (expression -> ID .)
    ENDIF           reduce using rule 40 (expression -> ID .)
    ENDFUNCTION     reduce using rule 40 (expression -> ID .)
    SEMICOLON       reduce using rule 40 (expression -> ID .)
    NEXT            reduce using rule 40 (expression -> ID .)
    LEFT_PAREN      shift and go to state 43

  ! LEFT_PAREN      [ reduce using rule 40 (expression -> ID .) ]


state 5

    (4) statement -> DECLARE . ID COLON ID
    (6) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 44


state 6

    (5) statement -> CONSTANT . ID EQUAL expression

    ID              shift and go to state 45


state 7

    (39) statement -> expression .
    (99) statement -> expression . DOT statement
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 39 (statement -> expression .)
    DECLARE         reduce using rule 39 (statement -> expression .)
    CONSTANT        reduce using rule 39 (statement -> expression .)
    ID              reduce using rule 39 (statement -> expression .)
    INPUT           reduce using rule 39 (statement -> expression .)
    OUTPUT          reduce using rule 39 (statement -> expression .)
    IF              reduce using rule 39 (statement -> expression .)
    CASE            reduce using rule 39 (statement -> expression .)
    FOR             reduce using rule 39 (statement -> expression .)
    REPEAT          reduce using rule 39 (statement -> expression .)
    WHILE           reduce using rule 39 (statement -> expression .)
    PROCEDURE       reduce using rule 39 (statement -> expression .)
    CALL            reduce using rule 39 (statement -> expression .)
    FUNCTION        reduce using rule 39 (statement -> expression .)
    RETURN          reduce using rule 39 (statement -> expression .)
    OPENFILE        reduce using rule 39 (statement -> expression .)
    READFILE        reduce using rule 39 (statement -> expression .)
    WRITEFILE       reduce using rule 39 (statement -> expression .)
    CLOSEFILE       reduce using rule 39 (statement -> expression .)
    SEEK            reduce using rule 39 (statement -> expression .)
    TYPE            reduce using rule 39 (statement -> expression .)
    PASS            reduce using rule 39 (statement -> expression .)
    IMPORT          reduce using rule 39 (statement -> expression .)
    PRIVATE         reduce using rule 39 (statement -> expression .)
    PUBLIC          reduce using rule 39 (statement -> expression .)
    NOT             reduce using rule 39 (statement -> expression .)
    LEFT_PAREN      reduce using rule 39 (statement -> expression .)
    DATE            reduce using rule 39 (statement -> expression .)
    BOOLEAN         reduce using rule 39 (statement -> expression .)
    CHAR            reduce using rule 39 (statement -> expression .)
    STRING          reduce using rule 39 (statement -> expression .)
    REAL            reduce using rule 39 (statement -> expression .)
    INTEGER         reduce using rule 39 (statement -> expression .)
    $end            reduce using rule 39 (statement -> expression .)
    UNTIL           reduce using rule 39 (statement -> expression .)
    ENDWHILE        reduce using rule 39 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 39 (statement -> expression .)
    ENDTYPE         reduce using rule 39 (statement -> expression .)
    ELSE            reduce using rule 39 (statement -> expression .)
    ENDIF           reduce using rule 39 (statement -> expression .)
    ENDFUNCTION     reduce using rule 39 (statement -> expression .)
    SEMICOLON       reduce using rule 39 (statement -> expression .)
    NEXT            reduce using rule 39 (statement -> expression .)
    DOT             shift and go to state 46
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61

  ! MINUS           [ reduce using rule 39 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 39 (statement -> expression .) ]


state 8

    (18) statement -> INPUT . ID
    (19) statement -> INPUT . ID LEFT_SQUARE indexes RIGHT_SQUARE

    ID              shift and go to state 62


state 9

    (20) statement -> OUTPUT . output_expression
    (21) output_expression -> . output_expression COMMA expression
    (22) output_expression -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    output_expression              shift and go to state 63
    expression                     shift and go to state 64

state 10

    (23) statement -> IF . expression THEN statements ELSE statements ENDIF
    (24) statement -> IF . expression THEN statements ENDIF
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 66

state 11

    (25) statement -> CASE . OF ID cases ENDCASE
    (26) statement -> CASE . OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE

    OF              shift and go to state 67


state 12

    (34) statement -> FOR . ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 68


state 13

    (36) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 69
    expression                     shift and go to state 7
    statement                      shift and go to state 2

state 14

    (37) statement -> WHILE . expression DO statements ENDWHILE
    (38) statement -> WHILE . expression statements ENDWHILE
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 70

state 15

    (77) statement -> PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> PROCEDURE . ID statements ENDPROCEDURE

    ID              shift and go to state 71


state 16

    (60) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 72

state 17

    (79) statement -> CALL . ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> CALL . ID

    ID              shift and go to state 73


state 18

    (81) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> FUNCTION . ID RETURNS ID statements ENDFUNCTION
    (84) statement -> FUNCTION . ID RETURNS ARRAY statements ENDFUNCTION

    ID              shift and go to state 74


state 19

    (87) statement -> RETURN . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 75

state 20

    (88) statement -> OPENFILE . expression FOR READ
    (89) statement -> OPENFILE . expression FOR WRITE
    (90) statement -> OPENFILE . expression FOR APPEND
    (91) statement -> OPENFILE . expression FOR RANDOM
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 76

state 21

    (92) statement -> READFILE . expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> READFILE . expression COMMA ID
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 77

state 22

    (94) statement -> WRITEFILE . expression COMMA expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 78

state 23

    (95) statement -> CLOSEFILE . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 79

state 24

    (96) statement -> SEEK . expression COMMA expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 80

state 25

    (97) statement -> TYPE . ID statements ENDTYPE
    (100) statement -> TYPE . ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> TYPE . ID EQUAL POINTER ID

    ID              shift and go to state 81


state 26

    (104) statement -> PASS .

    DELETE          reduce using rule 104 (statement -> PASS .)
    DECLARE         reduce using rule 104 (statement -> PASS .)
    CONSTANT        reduce using rule 104 (statement -> PASS .)
    ID              reduce using rule 104 (statement -> PASS .)
    INPUT           reduce using rule 104 (statement -> PASS .)
    OUTPUT          reduce using rule 104 (statement -> PASS .)
    IF              reduce using rule 104 (statement -> PASS .)
    CASE            reduce using rule 104 (statement -> PASS .)
    FOR             reduce using rule 104 (statement -> PASS .)
    REPEAT          reduce using rule 104 (statement -> PASS .)
    WHILE           reduce using rule 104 (statement -> PASS .)
    PROCEDURE       reduce using rule 104 (statement -> PASS .)
    CALL            reduce using rule 104 (statement -> PASS .)
    FUNCTION        reduce using rule 104 (statement -> PASS .)
    RETURN          reduce using rule 104 (statement -> PASS .)
    OPENFILE        reduce using rule 104 (statement -> PASS .)
    READFILE        reduce using rule 104 (statement -> PASS .)
    WRITEFILE       reduce using rule 104 (statement -> PASS .)
    CLOSEFILE       reduce using rule 104 (statement -> PASS .)
    SEEK            reduce using rule 104 (statement -> PASS .)
    TYPE            reduce using rule 104 (statement -> PASS .)
    PASS            reduce using rule 104 (statement -> PASS .)
    IMPORT          reduce using rule 104 (statement -> PASS .)
    PRIVATE         reduce using rule 104 (statement -> PASS .)
    PUBLIC          reduce using rule 104 (statement -> PASS .)
    NOT             reduce using rule 104 (statement -> PASS .)
    MINUS           reduce using rule 104 (statement -> PASS .)
    PLUS            reduce using rule 104 (statement -> PASS .)
    LEFT_PAREN      reduce using rule 104 (statement -> PASS .)
    DATE            reduce using rule 104 (statement -> PASS .)
    BOOLEAN         reduce using rule 104 (statement -> PASS .)
    CHAR            reduce using rule 104 (statement -> PASS .)
    STRING          reduce using rule 104 (statement -> PASS .)
    REAL            reduce using rule 104 (statement -> PASS .)
    INTEGER         reduce using rule 104 (statement -> PASS .)
    $end            reduce using rule 104 (statement -> PASS .)
    UNTIL           reduce using rule 104 (statement -> PASS .)
    ENDWHILE        reduce using rule 104 (statement -> PASS .)
    ENDPROCEDURE    reduce using rule 104 (statement -> PASS .)
    ENDTYPE         reduce using rule 104 (statement -> PASS .)
    ELSE            reduce using rule 104 (statement -> PASS .)
    ENDIF           reduce using rule 104 (statement -> PASS .)
    ENDFUNCTION     reduce using rule 104 (statement -> PASS .)
    SEMICOLON       reduce using rule 104 (statement -> PASS .)
    NEXT            reduce using rule 104 (statement -> PASS .)


state 27

    (105) statement -> IMPORT . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 82

state 28

    (106) statement -> PRIVATE . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 83
    expression                     shift and go to state 7

state 29

    (107) statement -> PUBLIC . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 84
    expression                     shift and go to state 7

state 30

    (44) expression -> NOT . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 85

state 31

    (55) expression -> MINUS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 86

state 32

    (56) expression -> PLUS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 87

state 33

    (61) expression -> DATE .

    DOT             reduce using rule 61 (expression -> DATE .)
    OR              reduce using rule 61 (expression -> DATE .)
    AND             reduce using rule 61 (expression -> DATE .)
    EQUAL           reduce using rule 61 (expression -> DATE .)
    NOT_EQUAL       reduce using rule 61 (expression -> DATE .)
    LESS            reduce using rule 61 (expression -> DATE .)
    GREATER         reduce using rule 61 (expression -> DATE .)
    LESS_EQUAL      reduce using rule 61 (expression -> DATE .)
    GREATER_EQUAL   reduce using rule 61 (expression -> DATE .)
    MOD             reduce using rule 61 (expression -> DATE .)
    DIV             reduce using rule 61 (expression -> DATE .)
    MUL             reduce using rule 61 (expression -> DATE .)
    N_DIV           reduce using rule 61 (expression -> DATE .)
    PLUS            reduce using rule 61 (expression -> DATE .)
    MINUS           reduce using rule 61 (expression -> DATE .)
    CONNECT         reduce using rule 61 (expression -> DATE .)
    DELETE          reduce using rule 61 (expression -> DATE .)
    DECLARE         reduce using rule 61 (expression -> DATE .)
    CONSTANT        reduce using rule 61 (expression -> DATE .)
    ID              reduce using rule 61 (expression -> DATE .)
    INPUT           reduce using rule 61 (expression -> DATE .)
    OUTPUT          reduce using rule 61 (expression -> DATE .)
    IF              reduce using rule 61 (expression -> DATE .)
    CASE            reduce using rule 61 (expression -> DATE .)
    FOR             reduce using rule 61 (expression -> DATE .)
    REPEAT          reduce using rule 61 (expression -> DATE .)
    WHILE           reduce using rule 61 (expression -> DATE .)
    PROCEDURE       reduce using rule 61 (expression -> DATE .)
    CALL            reduce using rule 61 (expression -> DATE .)
    FUNCTION        reduce using rule 61 (expression -> DATE .)
    RETURN          reduce using rule 61 (expression -> DATE .)
    OPENFILE        reduce using rule 61 (expression -> DATE .)
    READFILE        reduce using rule 61 (expression -> DATE .)
    WRITEFILE       reduce using rule 61 (expression -> DATE .)
    CLOSEFILE       reduce using rule 61 (expression -> DATE .)
    SEEK            reduce using rule 61 (expression -> DATE .)
    TYPE            reduce using rule 61 (expression -> DATE .)
    PASS            reduce using rule 61 (expression -> DATE .)
    IMPORT          reduce using rule 61 (expression -> DATE .)
    PRIVATE         reduce using rule 61 (expression -> DATE .)
    PUBLIC          reduce using rule 61 (expression -> DATE .)
    NOT             reduce using rule 61 (expression -> DATE .)
    LEFT_PAREN      reduce using rule 61 (expression -> DATE .)
    DATE            reduce using rule 61 (expression -> DATE .)
    BOOLEAN         reduce using rule 61 (expression -> DATE .)
    CHAR            reduce using rule 61 (expression -> DATE .)
    STRING          reduce using rule 61 (expression -> DATE .)
    REAL            reduce using rule 61 (expression -> DATE .)
    INTEGER         reduce using rule 61 (expression -> DATE .)
    $end            reduce using rule 61 (expression -> DATE .)
    COMMA           reduce using rule 61 (expression -> DATE .)
    UNTIL           reduce using rule 61 (expression -> DATE .)
    ENDWHILE        reduce using rule 61 (expression -> DATE .)
    ENDPROCEDURE    reduce using rule 61 (expression -> DATE .)
    ENDTYPE         reduce using rule 61 (expression -> DATE .)
    ELSE            reduce using rule 61 (expression -> DATE .)
    ENDIF           reduce using rule 61 (expression -> DATE .)
    ENDFUNCTION     reduce using rule 61 (expression -> DATE .)
    SEMICOLON       reduce using rule 61 (expression -> DATE .)
    NEXT            reduce using rule 61 (expression -> DATE .)
    THEN            reduce using rule 61 (expression -> DATE .)
    DO              reduce using rule 61 (expression -> DATE .)
    RIGHT_PAREN     reduce using rule 61 (expression -> DATE .)
    RIGHT_SQUARE    reduce using rule 61 (expression -> DATE .)
    TO              reduce using rule 61 (expression -> DATE .)
    COLON           reduce using rule 61 (expression -> DATE .)
    STEP            reduce using rule 61 (expression -> DATE .)


state 34

    (62) expression -> BOOLEAN .

    DOT             reduce using rule 62 (expression -> BOOLEAN .)
    OR              reduce using rule 62 (expression -> BOOLEAN .)
    AND             reduce using rule 62 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 62 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 62 (expression -> BOOLEAN .)
    LESS            reduce using rule 62 (expression -> BOOLEAN .)
    GREATER         reduce using rule 62 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 62 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 62 (expression -> BOOLEAN .)
    MOD             reduce using rule 62 (expression -> BOOLEAN .)
    DIV             reduce using rule 62 (expression -> BOOLEAN .)
    MUL             reduce using rule 62 (expression -> BOOLEAN .)
    N_DIV           reduce using rule 62 (expression -> BOOLEAN .)
    PLUS            reduce using rule 62 (expression -> BOOLEAN .)
    MINUS           reduce using rule 62 (expression -> BOOLEAN .)
    CONNECT         reduce using rule 62 (expression -> BOOLEAN .)
    DELETE          reduce using rule 62 (expression -> BOOLEAN .)
    DECLARE         reduce using rule 62 (expression -> BOOLEAN .)
    CONSTANT        reduce using rule 62 (expression -> BOOLEAN .)
    ID              reduce using rule 62 (expression -> BOOLEAN .)
    INPUT           reduce using rule 62 (expression -> BOOLEAN .)
    OUTPUT          reduce using rule 62 (expression -> BOOLEAN .)
    IF              reduce using rule 62 (expression -> BOOLEAN .)
    CASE            reduce using rule 62 (expression -> BOOLEAN .)
    FOR             reduce using rule 62 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 62 (expression -> BOOLEAN .)
    WHILE           reduce using rule 62 (expression -> BOOLEAN .)
    PROCEDURE       reduce using rule 62 (expression -> BOOLEAN .)
    CALL            reduce using rule 62 (expression -> BOOLEAN .)
    FUNCTION        reduce using rule 62 (expression -> BOOLEAN .)
    RETURN          reduce using rule 62 (expression -> BOOLEAN .)
    OPENFILE        reduce using rule 62 (expression -> BOOLEAN .)
    READFILE        reduce using rule 62 (expression -> BOOLEAN .)
    WRITEFILE       reduce using rule 62 (expression -> BOOLEAN .)
    CLOSEFILE       reduce using rule 62 (expression -> BOOLEAN .)
    SEEK            reduce using rule 62 (expression -> BOOLEAN .)
    TYPE            reduce using rule 62 (expression -> BOOLEAN .)
    PASS            reduce using rule 62 (expression -> BOOLEAN .)
    IMPORT          reduce using rule 62 (expression -> BOOLEAN .)
    PRIVATE         reduce using rule 62 (expression -> BOOLEAN .)
    PUBLIC          reduce using rule 62 (expression -> BOOLEAN .)
    NOT             reduce using rule 62 (expression -> BOOLEAN .)
    LEFT_PAREN      reduce using rule 62 (expression -> BOOLEAN .)
    DATE            reduce using rule 62 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 62 (expression -> BOOLEAN .)
    CHAR            reduce using rule 62 (expression -> BOOLEAN .)
    STRING          reduce using rule 62 (expression -> BOOLEAN .)
    REAL            reduce using rule 62 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 62 (expression -> BOOLEAN .)
    $end            reduce using rule 62 (expression -> BOOLEAN .)
    COMMA           reduce using rule 62 (expression -> BOOLEAN .)
    UNTIL           reduce using rule 62 (expression -> BOOLEAN .)
    ENDWHILE        reduce using rule 62 (expression -> BOOLEAN .)
    ENDPROCEDURE    reduce using rule 62 (expression -> BOOLEAN .)
    ENDTYPE         reduce using rule 62 (expression -> BOOLEAN .)
    ELSE            reduce using rule 62 (expression -> BOOLEAN .)
    ENDIF           reduce using rule 62 (expression -> BOOLEAN .)
    ENDFUNCTION     reduce using rule 62 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 62 (expression -> BOOLEAN .)
    NEXT            reduce using rule 62 (expression -> BOOLEAN .)
    THEN            reduce using rule 62 (expression -> BOOLEAN .)
    DO              reduce using rule 62 (expression -> BOOLEAN .)
    RIGHT_PAREN     reduce using rule 62 (expression -> BOOLEAN .)
    RIGHT_SQUARE    reduce using rule 62 (expression -> BOOLEAN .)
    TO              reduce using rule 62 (expression -> BOOLEAN .)
    COLON           reduce using rule 62 (expression -> BOOLEAN .)
    STEP            reduce using rule 62 (expression -> BOOLEAN .)


state 35

    (63) expression -> CHAR .

    DOT             reduce using rule 63 (expression -> CHAR .)
    OR              reduce using rule 63 (expression -> CHAR .)
    AND             reduce using rule 63 (expression -> CHAR .)
    EQUAL           reduce using rule 63 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 63 (expression -> CHAR .)
    LESS            reduce using rule 63 (expression -> CHAR .)
    GREATER         reduce using rule 63 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 63 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 63 (expression -> CHAR .)
    MOD             reduce using rule 63 (expression -> CHAR .)
    DIV             reduce using rule 63 (expression -> CHAR .)
    MUL             reduce using rule 63 (expression -> CHAR .)
    N_DIV           reduce using rule 63 (expression -> CHAR .)
    PLUS            reduce using rule 63 (expression -> CHAR .)
    MINUS           reduce using rule 63 (expression -> CHAR .)
    CONNECT         reduce using rule 63 (expression -> CHAR .)
    DELETE          reduce using rule 63 (expression -> CHAR .)
    DECLARE         reduce using rule 63 (expression -> CHAR .)
    CONSTANT        reduce using rule 63 (expression -> CHAR .)
    ID              reduce using rule 63 (expression -> CHAR .)
    INPUT           reduce using rule 63 (expression -> CHAR .)
    OUTPUT          reduce using rule 63 (expression -> CHAR .)
    IF              reduce using rule 63 (expression -> CHAR .)
    CASE            reduce using rule 63 (expression -> CHAR .)
    FOR             reduce using rule 63 (expression -> CHAR .)
    REPEAT          reduce using rule 63 (expression -> CHAR .)
    WHILE           reduce using rule 63 (expression -> CHAR .)
    PROCEDURE       reduce using rule 63 (expression -> CHAR .)
    CALL            reduce using rule 63 (expression -> CHAR .)
    FUNCTION        reduce using rule 63 (expression -> CHAR .)
    RETURN          reduce using rule 63 (expression -> CHAR .)
    OPENFILE        reduce using rule 63 (expression -> CHAR .)
    READFILE        reduce using rule 63 (expression -> CHAR .)
    WRITEFILE       reduce using rule 63 (expression -> CHAR .)
    CLOSEFILE       reduce using rule 63 (expression -> CHAR .)
    SEEK            reduce using rule 63 (expression -> CHAR .)
    TYPE            reduce using rule 63 (expression -> CHAR .)
    PASS            reduce using rule 63 (expression -> CHAR .)
    IMPORT          reduce using rule 63 (expression -> CHAR .)
    PRIVATE         reduce using rule 63 (expression -> CHAR .)
    PUBLIC          reduce using rule 63 (expression -> CHAR .)
    NOT             reduce using rule 63 (expression -> CHAR .)
    LEFT_PAREN      reduce using rule 63 (expression -> CHAR .)
    DATE            reduce using rule 63 (expression -> CHAR .)
    BOOLEAN         reduce using rule 63 (expression -> CHAR .)
    CHAR            reduce using rule 63 (expression -> CHAR .)
    STRING          reduce using rule 63 (expression -> CHAR .)
    REAL            reduce using rule 63 (expression -> CHAR .)
    INTEGER         reduce using rule 63 (expression -> CHAR .)
    $end            reduce using rule 63 (expression -> CHAR .)
    COMMA           reduce using rule 63 (expression -> CHAR .)
    UNTIL           reduce using rule 63 (expression -> CHAR .)
    ENDWHILE        reduce using rule 63 (expression -> CHAR .)
    ENDPROCEDURE    reduce using rule 63 (expression -> CHAR .)
    ENDTYPE         reduce using rule 63 (expression -> CHAR .)
    ELSE            reduce using rule 63 (expression -> CHAR .)
    ENDIF           reduce using rule 63 (expression -> CHAR .)
    ENDFUNCTION     reduce using rule 63 (expression -> CHAR .)
    SEMICOLON       reduce using rule 63 (expression -> CHAR .)
    NEXT            reduce using rule 63 (expression -> CHAR .)
    THEN            reduce using rule 63 (expression -> CHAR .)
    DO              reduce using rule 63 (expression -> CHAR .)
    RIGHT_PAREN     reduce using rule 63 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 63 (expression -> CHAR .)
    TO              reduce using rule 63 (expression -> CHAR .)
    COLON           reduce using rule 63 (expression -> CHAR .)
    STEP            reduce using rule 63 (expression -> CHAR .)


state 36

    (64) expression -> STRING .

    DOT             reduce using rule 64 (expression -> STRING .)
    OR              reduce using rule 64 (expression -> STRING .)
    AND             reduce using rule 64 (expression -> STRING .)
    EQUAL           reduce using rule 64 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 64 (expression -> STRING .)
    LESS            reduce using rule 64 (expression -> STRING .)
    GREATER         reduce using rule 64 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 64 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 64 (expression -> STRING .)
    MOD             reduce using rule 64 (expression -> STRING .)
    DIV             reduce using rule 64 (expression -> STRING .)
    MUL             reduce using rule 64 (expression -> STRING .)
    N_DIV           reduce using rule 64 (expression -> STRING .)
    PLUS            reduce using rule 64 (expression -> STRING .)
    MINUS           reduce using rule 64 (expression -> STRING .)
    CONNECT         reduce using rule 64 (expression -> STRING .)
    DELETE          reduce using rule 64 (expression -> STRING .)
    DECLARE         reduce using rule 64 (expression -> STRING .)
    CONSTANT        reduce using rule 64 (expression -> STRING .)
    ID              reduce using rule 64 (expression -> STRING .)
    INPUT           reduce using rule 64 (expression -> STRING .)
    OUTPUT          reduce using rule 64 (expression -> STRING .)
    IF              reduce using rule 64 (expression -> STRING .)
    CASE            reduce using rule 64 (expression -> STRING .)
    FOR             reduce using rule 64 (expression -> STRING .)
    REPEAT          reduce using rule 64 (expression -> STRING .)
    WHILE           reduce using rule 64 (expression -> STRING .)
    PROCEDURE       reduce using rule 64 (expression -> STRING .)
    CALL            reduce using rule 64 (expression -> STRING .)
    FUNCTION        reduce using rule 64 (expression -> STRING .)
    RETURN          reduce using rule 64 (expression -> STRING .)
    OPENFILE        reduce using rule 64 (expression -> STRING .)
    READFILE        reduce using rule 64 (expression -> STRING .)
    WRITEFILE       reduce using rule 64 (expression -> STRING .)
    CLOSEFILE       reduce using rule 64 (expression -> STRING .)
    SEEK            reduce using rule 64 (expression -> STRING .)
    TYPE            reduce using rule 64 (expression -> STRING .)
    PASS            reduce using rule 64 (expression -> STRING .)
    IMPORT          reduce using rule 64 (expression -> STRING .)
    PRIVATE         reduce using rule 64 (expression -> STRING .)
    PUBLIC          reduce using rule 64 (expression -> STRING .)
    NOT             reduce using rule 64 (expression -> STRING .)
    LEFT_PAREN      reduce using rule 64 (expression -> STRING .)
    DATE            reduce using rule 64 (expression -> STRING .)
    BOOLEAN         reduce using rule 64 (expression -> STRING .)
    CHAR            reduce using rule 64 (expression -> STRING .)
    STRING          reduce using rule 64 (expression -> STRING .)
    REAL            reduce using rule 64 (expression -> STRING .)
    INTEGER         reduce using rule 64 (expression -> STRING .)
    $end            reduce using rule 64 (expression -> STRING .)
    COMMA           reduce using rule 64 (expression -> STRING .)
    UNTIL           reduce using rule 64 (expression -> STRING .)
    ENDWHILE        reduce using rule 64 (expression -> STRING .)
    ENDPROCEDURE    reduce using rule 64 (expression -> STRING .)
    ENDTYPE         reduce using rule 64 (expression -> STRING .)
    ELSE            reduce using rule 64 (expression -> STRING .)
    ENDIF           reduce using rule 64 (expression -> STRING .)
    ENDFUNCTION     reduce using rule 64 (expression -> STRING .)
    SEMICOLON       reduce using rule 64 (expression -> STRING .)
    NEXT            reduce using rule 64 (expression -> STRING .)
    THEN            reduce using rule 64 (expression -> STRING .)
    DO              reduce using rule 64 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 64 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 64 (expression -> STRING .)
    TO              reduce using rule 64 (expression -> STRING .)
    COLON           reduce using rule 64 (expression -> STRING .)
    STEP            reduce using rule 64 (expression -> STRING .)


state 37

    (65) expression -> REAL .

    DOT             reduce using rule 65 (expression -> REAL .)
    OR              reduce using rule 65 (expression -> REAL .)
    AND             reduce using rule 65 (expression -> REAL .)
    EQUAL           reduce using rule 65 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 65 (expression -> REAL .)
    LESS            reduce using rule 65 (expression -> REAL .)
    GREATER         reduce using rule 65 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 65 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 65 (expression -> REAL .)
    MOD             reduce using rule 65 (expression -> REAL .)
    DIV             reduce using rule 65 (expression -> REAL .)
    MUL             reduce using rule 65 (expression -> REAL .)
    N_DIV           reduce using rule 65 (expression -> REAL .)
    PLUS            reduce using rule 65 (expression -> REAL .)
    MINUS           reduce using rule 65 (expression -> REAL .)
    CONNECT         reduce using rule 65 (expression -> REAL .)
    DELETE          reduce using rule 65 (expression -> REAL .)
    DECLARE         reduce using rule 65 (expression -> REAL .)
    CONSTANT        reduce using rule 65 (expression -> REAL .)
    ID              reduce using rule 65 (expression -> REAL .)
    INPUT           reduce using rule 65 (expression -> REAL .)
    OUTPUT          reduce using rule 65 (expression -> REAL .)
    IF              reduce using rule 65 (expression -> REAL .)
    CASE            reduce using rule 65 (expression -> REAL .)
    FOR             reduce using rule 65 (expression -> REAL .)
    REPEAT          reduce using rule 65 (expression -> REAL .)
    WHILE           reduce using rule 65 (expression -> REAL .)
    PROCEDURE       reduce using rule 65 (expression -> REAL .)
    CALL            reduce using rule 65 (expression -> REAL .)
    FUNCTION        reduce using rule 65 (expression -> REAL .)
    RETURN          reduce using rule 65 (expression -> REAL .)
    OPENFILE        reduce using rule 65 (expression -> REAL .)
    READFILE        reduce using rule 65 (expression -> REAL .)
    WRITEFILE       reduce using rule 65 (expression -> REAL .)
    CLOSEFILE       reduce using rule 65 (expression -> REAL .)
    SEEK            reduce using rule 65 (expression -> REAL .)
    TYPE            reduce using rule 65 (expression -> REAL .)
    PASS            reduce using rule 65 (expression -> REAL .)
    IMPORT          reduce using rule 65 (expression -> REAL .)
    PRIVATE         reduce using rule 65 (expression -> REAL .)
    PUBLIC          reduce using rule 65 (expression -> REAL .)
    NOT             reduce using rule 65 (expression -> REAL .)
    LEFT_PAREN      reduce using rule 65 (expression -> REAL .)
    DATE            reduce using rule 65 (expression -> REAL .)
    BOOLEAN         reduce using rule 65 (expression -> REAL .)
    CHAR            reduce using rule 65 (expression -> REAL .)
    STRING          reduce using rule 65 (expression -> REAL .)
    REAL            reduce using rule 65 (expression -> REAL .)
    INTEGER         reduce using rule 65 (expression -> REAL .)
    $end            reduce using rule 65 (expression -> REAL .)
    COMMA           reduce using rule 65 (expression -> REAL .)
    UNTIL           reduce using rule 65 (expression -> REAL .)
    ENDWHILE        reduce using rule 65 (expression -> REAL .)
    ENDPROCEDURE    reduce using rule 65 (expression -> REAL .)
    ENDTYPE         reduce using rule 65 (expression -> REAL .)
    ELSE            reduce using rule 65 (expression -> REAL .)
    ENDIF           reduce using rule 65 (expression -> REAL .)
    ENDFUNCTION     reduce using rule 65 (expression -> REAL .)
    SEMICOLON       reduce using rule 65 (expression -> REAL .)
    NEXT            reduce using rule 65 (expression -> REAL .)
    THEN            reduce using rule 65 (expression -> REAL .)
    DO              reduce using rule 65 (expression -> REAL .)
    RIGHT_PAREN     reduce using rule 65 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 65 (expression -> REAL .)
    TO              reduce using rule 65 (expression -> REAL .)
    COLON           reduce using rule 65 (expression -> REAL .)
    STEP            reduce using rule 65 (expression -> REAL .)


state 38

    (66) expression -> INTEGER .

    DOT             reduce using rule 66 (expression -> INTEGER .)
    OR              reduce using rule 66 (expression -> INTEGER .)
    AND             reduce using rule 66 (expression -> INTEGER .)
    EQUAL           reduce using rule 66 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 66 (expression -> INTEGER .)
    LESS            reduce using rule 66 (expression -> INTEGER .)
    GREATER         reduce using rule 66 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 66 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 66 (expression -> INTEGER .)
    MOD             reduce using rule 66 (expression -> INTEGER .)
    DIV             reduce using rule 66 (expression -> INTEGER .)
    MUL             reduce using rule 66 (expression -> INTEGER .)
    N_DIV           reduce using rule 66 (expression -> INTEGER .)
    PLUS            reduce using rule 66 (expression -> INTEGER .)
    MINUS           reduce using rule 66 (expression -> INTEGER .)
    CONNECT         reduce using rule 66 (expression -> INTEGER .)
    DELETE          reduce using rule 66 (expression -> INTEGER .)
    DECLARE         reduce using rule 66 (expression -> INTEGER .)
    CONSTANT        reduce using rule 66 (expression -> INTEGER .)
    ID              reduce using rule 66 (expression -> INTEGER .)
    INPUT           reduce using rule 66 (expression -> INTEGER .)
    OUTPUT          reduce using rule 66 (expression -> INTEGER .)
    IF              reduce using rule 66 (expression -> INTEGER .)
    CASE            reduce using rule 66 (expression -> INTEGER .)
    FOR             reduce using rule 66 (expression -> INTEGER .)
    REPEAT          reduce using rule 66 (expression -> INTEGER .)
    WHILE           reduce using rule 66 (expression -> INTEGER .)
    PROCEDURE       reduce using rule 66 (expression -> INTEGER .)
    CALL            reduce using rule 66 (expression -> INTEGER .)
    FUNCTION        reduce using rule 66 (expression -> INTEGER .)
    RETURN          reduce using rule 66 (expression -> INTEGER .)
    OPENFILE        reduce using rule 66 (expression -> INTEGER .)
    READFILE        reduce using rule 66 (expression -> INTEGER .)
    WRITEFILE       reduce using rule 66 (expression -> INTEGER .)
    CLOSEFILE       reduce using rule 66 (expression -> INTEGER .)
    SEEK            reduce using rule 66 (expression -> INTEGER .)
    TYPE            reduce using rule 66 (expression -> INTEGER .)
    PASS            reduce using rule 66 (expression -> INTEGER .)
    IMPORT          reduce using rule 66 (expression -> INTEGER .)
    PRIVATE         reduce using rule 66 (expression -> INTEGER .)
    PUBLIC          reduce using rule 66 (expression -> INTEGER .)
    NOT             reduce using rule 66 (expression -> INTEGER .)
    LEFT_PAREN      reduce using rule 66 (expression -> INTEGER .)
    DATE            reduce using rule 66 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 66 (expression -> INTEGER .)
    CHAR            reduce using rule 66 (expression -> INTEGER .)
    STRING          reduce using rule 66 (expression -> INTEGER .)
    REAL            reduce using rule 66 (expression -> INTEGER .)
    INTEGER         reduce using rule 66 (expression -> INTEGER .)
    $end            reduce using rule 66 (expression -> INTEGER .)
    COMMA           reduce using rule 66 (expression -> INTEGER .)
    UNTIL           reduce using rule 66 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 66 (expression -> INTEGER .)
    ENDPROCEDURE    reduce using rule 66 (expression -> INTEGER .)
    ENDTYPE         reduce using rule 66 (expression -> INTEGER .)
    ELSE            reduce using rule 66 (expression -> INTEGER .)
    ENDIF           reduce using rule 66 (expression -> INTEGER .)
    ENDFUNCTION     reduce using rule 66 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 66 (expression -> INTEGER .)
    NEXT            reduce using rule 66 (expression -> INTEGER .)
    THEN            reduce using rule 66 (expression -> INTEGER .)
    DO              reduce using rule 66 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 66 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 66 (expression -> INTEGER .)
    TO              reduce using rule 66 (expression -> INTEGER .)
    COLON           reduce using rule 66 (expression -> INTEGER .)
    STEP            reduce using rule 66 (expression -> INTEGER .)


state 39

    (1) statements -> statements statement .

    DELETE          reduce using rule 1 (statements -> statements statement .)
    DECLARE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    PROCEDURE       reduce using rule 1 (statements -> statements statement .)
    CALL            reduce using rule 1 (statements -> statements statement .)
    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    OPENFILE        reduce using rule 1 (statements -> statements statement .)
    READFILE        reduce using rule 1 (statements -> statements statement .)
    WRITEFILE       reduce using rule 1 (statements -> statements statement .)
    CLOSEFILE       reduce using rule 1 (statements -> statements statement .)
    SEEK            reduce using rule 1 (statements -> statements statement .)
    TYPE            reduce using rule 1 (statements -> statements statement .)
    PASS            reduce using rule 1 (statements -> statements statement .)
    IMPORT          reduce using rule 1 (statements -> statements statement .)
    PRIVATE         reduce using rule 1 (statements -> statements statement .)
    PUBLIC          reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    MINUS           reduce using rule 1 (statements -> statements statement .)
    PLUS            reduce using rule 1 (statements -> statements statement .)
    LEFT_PAREN      reduce using rule 1 (statements -> statements statement .)
    DATE            reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ENDPROCEDURE    reduce using rule 1 (statements -> statements statement .)
    ENDTYPE         reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ENDFUNCTION     reduce using rule 1 (statements -> statements statement .)
    SEMICOLON       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)


state 40

    (3) statement -> DELETE ID .

    DELETE          reduce using rule 3 (statement -> DELETE ID .)
    DECLARE         reduce using rule 3 (statement -> DELETE ID .)
    CONSTANT        reduce using rule 3 (statement -> DELETE ID .)
    ID              reduce using rule 3 (statement -> DELETE ID .)
    INPUT           reduce using rule 3 (statement -> DELETE ID .)
    OUTPUT          reduce using rule 3 (statement -> DELETE ID .)
    IF              reduce using rule 3 (statement -> DELETE ID .)
    CASE            reduce using rule 3 (statement -> DELETE ID .)
    FOR             reduce using rule 3 (statement -> DELETE ID .)
    REPEAT          reduce using rule 3 (statement -> DELETE ID .)
    WHILE           reduce using rule 3 (statement -> DELETE ID .)
    PROCEDURE       reduce using rule 3 (statement -> DELETE ID .)
    CALL            reduce using rule 3 (statement -> DELETE ID .)
    FUNCTION        reduce using rule 3 (statement -> DELETE ID .)
    RETURN          reduce using rule 3 (statement -> DELETE ID .)
    OPENFILE        reduce using rule 3 (statement -> DELETE ID .)
    READFILE        reduce using rule 3 (statement -> DELETE ID .)
    WRITEFILE       reduce using rule 3 (statement -> DELETE ID .)
    CLOSEFILE       reduce using rule 3 (statement -> DELETE ID .)
    SEEK            reduce using rule 3 (statement -> DELETE ID .)
    TYPE            reduce using rule 3 (statement -> DELETE ID .)
    PASS            reduce using rule 3 (statement -> DELETE ID .)
    IMPORT          reduce using rule 3 (statement -> DELETE ID .)
    PRIVATE         reduce using rule 3 (statement -> DELETE ID .)
    PUBLIC          reduce using rule 3 (statement -> DELETE ID .)
    NOT             reduce using rule 3 (statement -> DELETE ID .)
    MINUS           reduce using rule 3 (statement -> DELETE ID .)
    PLUS            reduce using rule 3 (statement -> DELETE ID .)
    LEFT_PAREN      reduce using rule 3 (statement -> DELETE ID .)
    DATE            reduce using rule 3 (statement -> DELETE ID .)
    BOOLEAN         reduce using rule 3 (statement -> DELETE ID .)
    CHAR            reduce using rule 3 (statement -> DELETE ID .)
    STRING          reduce using rule 3 (statement -> DELETE ID .)
    REAL            reduce using rule 3 (statement -> DELETE ID .)
    INTEGER         reduce using rule 3 (statement -> DELETE ID .)
    $end            reduce using rule 3 (statement -> DELETE ID .)
    UNTIL           reduce using rule 3 (statement -> DELETE ID .)
    ENDWHILE        reduce using rule 3 (statement -> DELETE ID .)
    ENDPROCEDURE    reduce using rule 3 (statement -> DELETE ID .)
    ENDTYPE         reduce using rule 3 (statement -> DELETE ID .)
    ELSE            reduce using rule 3 (statement -> DELETE ID .)
    ENDIF           reduce using rule 3 (statement -> DELETE ID .)
    ENDFUNCTION     reduce using rule 3 (statement -> DELETE ID .)
    SEMICOLON       reduce using rule 3 (statement -> DELETE ID .)
    NEXT            reduce using rule 3 (statement -> DELETE ID .)


state 41

    (10) statement -> ID ASSIGN . expression
    (12) statement -> ID ASSIGN . LEFT_SQUARE array_items RIGHT_SQUARE
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    LEFT_SQUARE     shift and go to state 89
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 88

state 42

    (11) statement -> ID LEFT_SQUARE . indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> ID LEFT_SQUARE . indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (41) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (16) indexes -> . indexes COMMA expression
    (17) indexes -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    indexes                        shift and go to state 90
    expression                     shift and go to state 91

state 43

    (85) expression -> ID LEFT_PAREN . parameters RIGHT_PAREN
    (86) expression -> ID LEFT_PAREN . RIGHT_PAREN
    (75) parameters -> . parameters COMMA expression
    (76) parameters -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    RIGHT_PAREN     shift and go to state 93
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    parameters                     shift and go to state 92
    expression                     shift and go to state 94

state 44

    (4) statement -> DECLARE ID . COLON ID
    (6) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    COLON           shift and go to state 95


state 45

    (5) statement -> CONSTANT ID . EQUAL expression

    EQUAL           shift and go to state 96


state 46

    (99) statement -> expression DOT . statement
    (98) expression -> expression DOT . expression
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 97
    statement                      shift and go to state 98

state 47

    (42) expression -> expression OR . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 99

state 48

    (43) expression -> expression AND . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 100

state 49

    (45) expression -> expression EQUAL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 101

state 50

    (46) expression -> expression NOT_EQUAL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 102

state 51

    (47) expression -> expression LESS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 103

state 52

    (48) expression -> expression GREATER . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 104

state 53

    (49) expression -> expression LESS_EQUAL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 105

state 54

    (50) expression -> expression GREATER_EQUAL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 106

state 55

    (51) expression -> expression MOD . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 107

state 56

    (52) expression -> expression DIV . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 108

state 57

    (53) expression -> expression MUL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 109

state 58

    (54) expression -> expression N_DIV . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 110

state 59

    (57) expression -> expression PLUS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 111

state 60

    (58) expression -> expression MINUS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 112

state 61

    (59) expression -> expression CONNECT . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 113

state 62

    (18) statement -> INPUT ID .
    (19) statement -> INPUT ID . LEFT_SQUARE indexes RIGHT_SQUARE

    DELETE          reduce using rule 18 (statement -> INPUT ID .)
    DECLARE         reduce using rule 18 (statement -> INPUT ID .)
    CONSTANT        reduce using rule 18 (statement -> INPUT ID .)
    ID              reduce using rule 18 (statement -> INPUT ID .)
    INPUT           reduce using rule 18 (statement -> INPUT ID .)
    OUTPUT          reduce using rule 18 (statement -> INPUT ID .)
    IF              reduce using rule 18 (statement -> INPUT ID .)
    CASE            reduce using rule 18 (statement -> INPUT ID .)
    FOR             reduce using rule 18 (statement -> INPUT ID .)
    REPEAT          reduce using rule 18 (statement -> INPUT ID .)
    WHILE           reduce using rule 18 (statement -> INPUT ID .)
    PROCEDURE       reduce using rule 18 (statement -> INPUT ID .)
    CALL            reduce using rule 18 (statement -> INPUT ID .)
    FUNCTION        reduce using rule 18 (statement -> INPUT ID .)
    RETURN          reduce using rule 18 (statement -> INPUT ID .)
    OPENFILE        reduce using rule 18 (statement -> INPUT ID .)
    READFILE        reduce using rule 18 (statement -> INPUT ID .)
    WRITEFILE       reduce using rule 18 (statement -> INPUT ID .)
    CLOSEFILE       reduce using rule 18 (statement -> INPUT ID .)
    SEEK            reduce using rule 18 (statement -> INPUT ID .)
    TYPE            reduce using rule 18 (statement -> INPUT ID .)
    PASS            reduce using rule 18 (statement -> INPUT ID .)
    IMPORT          reduce using rule 18 (statement -> INPUT ID .)
    PRIVATE         reduce using rule 18 (statement -> INPUT ID .)
    PUBLIC          reduce using rule 18 (statement -> INPUT ID .)
    NOT             reduce using rule 18 (statement -> INPUT ID .)
    MINUS           reduce using rule 18 (statement -> INPUT ID .)
    PLUS            reduce using rule 18 (statement -> INPUT ID .)
    LEFT_PAREN      reduce using rule 18 (statement -> INPUT ID .)
    DATE            reduce using rule 18 (statement -> INPUT ID .)
    BOOLEAN         reduce using rule 18 (statement -> INPUT ID .)
    CHAR            reduce using rule 18 (statement -> INPUT ID .)
    STRING          reduce using rule 18 (statement -> INPUT ID .)
    REAL            reduce using rule 18 (statement -> INPUT ID .)
    INTEGER         reduce using rule 18 (statement -> INPUT ID .)
    $end            reduce using rule 18 (statement -> INPUT ID .)
    UNTIL           reduce using rule 18 (statement -> INPUT ID .)
    ENDWHILE        reduce using rule 18 (statement -> INPUT ID .)
    ENDPROCEDURE    reduce using rule 18 (statement -> INPUT ID .)
    ENDTYPE         reduce using rule 18 (statement -> INPUT ID .)
    ELSE            reduce using rule 18 (statement -> INPUT ID .)
    ENDIF           reduce using rule 18 (statement -> INPUT ID .)
    ENDFUNCTION     reduce using rule 18 (statement -> INPUT ID .)
    SEMICOLON       reduce using rule 18 (statement -> INPUT ID .)
    NEXT            reduce using rule 18 (statement -> INPUT ID .)
    LEFT_SQUARE     shift and go to state 114


state 63

    (20) statement -> OUTPUT output_expression .
    (21) output_expression -> output_expression . COMMA expression

    DELETE          reduce using rule 20 (statement -> OUTPUT output_expression .)
    DECLARE         reduce using rule 20 (statement -> OUTPUT output_expression .)
    CONSTANT        reduce using rule 20 (statement -> OUTPUT output_expression .)
    ID              reduce using rule 20 (statement -> OUTPUT output_expression .)
    INPUT           reduce using rule 20 (statement -> OUTPUT output_expression .)
    OUTPUT          reduce using rule 20 (statement -> OUTPUT output_expression .)
    IF              reduce using rule 20 (statement -> OUTPUT output_expression .)
    CASE            reduce using rule 20 (statement -> OUTPUT output_expression .)
    FOR             reduce using rule 20 (statement -> OUTPUT output_expression .)
    REPEAT          reduce using rule 20 (statement -> OUTPUT output_expression .)
    WHILE           reduce using rule 20 (statement -> OUTPUT output_expression .)
    PROCEDURE       reduce using rule 20 (statement -> OUTPUT output_expression .)
    CALL            reduce using rule 20 (statement -> OUTPUT output_expression .)
    FUNCTION        reduce using rule 20 (statement -> OUTPUT output_expression .)
    RETURN          reduce using rule 20 (statement -> OUTPUT output_expression .)
    OPENFILE        reduce using rule 20 (statement -> OUTPUT output_expression .)
    READFILE        reduce using rule 20 (statement -> OUTPUT output_expression .)
    WRITEFILE       reduce using rule 20 (statement -> OUTPUT output_expression .)
    CLOSEFILE       reduce using rule 20 (statement -> OUTPUT output_expression .)
    SEEK            reduce using rule 20 (statement -> OUTPUT output_expression .)
    TYPE            reduce using rule 20 (statement -> OUTPUT output_expression .)
    PASS            reduce using rule 20 (statement -> OUTPUT output_expression .)
    IMPORT          reduce using rule 20 (statement -> OUTPUT output_expression .)
    PRIVATE         reduce using rule 20 (statement -> OUTPUT output_expression .)
    PUBLIC          reduce using rule 20 (statement -> OUTPUT output_expression .)
    NOT             reduce using rule 20 (statement -> OUTPUT output_expression .)
    MINUS           reduce using rule 20 (statement -> OUTPUT output_expression .)
    PLUS            reduce using rule 20 (statement -> OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 20 (statement -> OUTPUT output_expression .)
    DATE            reduce using rule 20 (statement -> OUTPUT output_expression .)
    BOOLEAN         reduce using rule 20 (statement -> OUTPUT output_expression .)
    CHAR            reduce using rule 20 (statement -> OUTPUT output_expression .)
    STRING          reduce using rule 20 (statement -> OUTPUT output_expression .)
    REAL            reduce using rule 20 (statement -> OUTPUT output_expression .)
    INTEGER         reduce using rule 20 (statement -> OUTPUT output_expression .)
    $end            reduce using rule 20 (statement -> OUTPUT output_expression .)
    UNTIL           reduce using rule 20 (statement -> OUTPUT output_expression .)
    ENDWHILE        reduce using rule 20 (statement -> OUTPUT output_expression .)
    ENDPROCEDURE    reduce using rule 20 (statement -> OUTPUT output_expression .)
    ENDTYPE         reduce using rule 20 (statement -> OUTPUT output_expression .)
    ELSE            reduce using rule 20 (statement -> OUTPUT output_expression .)
    ENDIF           reduce using rule 20 (statement -> OUTPUT output_expression .)
    ENDFUNCTION     reduce using rule 20 (statement -> OUTPUT output_expression .)
    SEMICOLON       reduce using rule 20 (statement -> OUTPUT output_expression .)
    NEXT            reduce using rule 20 (statement -> OUTPUT output_expression .)
    COMMA           shift and go to state 115


state 64

    (22) output_expression -> expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 22 (output_expression -> expression .)
    DELETE          reduce using rule 22 (output_expression -> expression .)
    DECLARE         reduce using rule 22 (output_expression -> expression .)
    CONSTANT        reduce using rule 22 (output_expression -> expression .)
    ID              reduce using rule 22 (output_expression -> expression .)
    INPUT           reduce using rule 22 (output_expression -> expression .)
    OUTPUT          reduce using rule 22 (output_expression -> expression .)
    IF              reduce using rule 22 (output_expression -> expression .)
    CASE            reduce using rule 22 (output_expression -> expression .)
    FOR             reduce using rule 22 (output_expression -> expression .)
    REPEAT          reduce using rule 22 (output_expression -> expression .)
    WHILE           reduce using rule 22 (output_expression -> expression .)
    PROCEDURE       reduce using rule 22 (output_expression -> expression .)
    CALL            reduce using rule 22 (output_expression -> expression .)
    FUNCTION        reduce using rule 22 (output_expression -> expression .)
    RETURN          reduce using rule 22 (output_expression -> expression .)
    OPENFILE        reduce using rule 22 (output_expression -> expression .)
    READFILE        reduce using rule 22 (output_expression -> expression .)
    WRITEFILE       reduce using rule 22 (output_expression -> expression .)
    CLOSEFILE       reduce using rule 22 (output_expression -> expression .)
    SEEK            reduce using rule 22 (output_expression -> expression .)
    TYPE            reduce using rule 22 (output_expression -> expression .)
    PASS            reduce using rule 22 (output_expression -> expression .)
    IMPORT          reduce using rule 22 (output_expression -> expression .)
    PRIVATE         reduce using rule 22 (output_expression -> expression .)
    PUBLIC          reduce using rule 22 (output_expression -> expression .)
    NOT             reduce using rule 22 (output_expression -> expression .)
    LEFT_PAREN      reduce using rule 22 (output_expression -> expression .)
    DATE            reduce using rule 22 (output_expression -> expression .)
    BOOLEAN         reduce using rule 22 (output_expression -> expression .)
    CHAR            reduce using rule 22 (output_expression -> expression .)
    STRING          reduce using rule 22 (output_expression -> expression .)
    REAL            reduce using rule 22 (output_expression -> expression .)
    INTEGER         reduce using rule 22 (output_expression -> expression .)
    $end            reduce using rule 22 (output_expression -> expression .)
    UNTIL           reduce using rule 22 (output_expression -> expression .)
    ENDWHILE        reduce using rule 22 (output_expression -> expression .)
    ENDPROCEDURE    reduce using rule 22 (output_expression -> expression .)
    ENDTYPE         reduce using rule 22 (output_expression -> expression .)
    ELSE            reduce using rule 22 (output_expression -> expression .)
    ENDIF           reduce using rule 22 (output_expression -> expression .)
    ENDFUNCTION     reduce using rule 22 (output_expression -> expression .)
    SEMICOLON       reduce using rule 22 (output_expression -> expression .)
    NEXT            reduce using rule 22 (output_expression -> expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 22 (output_expression -> expression .) ]
  ! PLUS            [ reduce using rule 22 (output_expression -> expression .) ]


state 65

    (40) expression -> ID .
    (41) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (85) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    OR              reduce using rule 40 (expression -> ID .)
    AND             reduce using rule 40 (expression -> ID .)
    EQUAL           reduce using rule 40 (expression -> ID .)
    NOT_EQUAL       reduce using rule 40 (expression -> ID .)
    LESS            reduce using rule 40 (expression -> ID .)
    GREATER         reduce using rule 40 (expression -> ID .)
    LESS_EQUAL      reduce using rule 40 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 40 (expression -> ID .)
    MOD             reduce using rule 40 (expression -> ID .)
    DIV             reduce using rule 40 (expression -> ID .)
    MUL             reduce using rule 40 (expression -> ID .)
    N_DIV           reduce using rule 40 (expression -> ID .)
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    CONNECT         reduce using rule 40 (expression -> ID .)
    DOT             reduce using rule 40 (expression -> ID .)
    COMMA           reduce using rule 40 (expression -> ID .)
    DELETE          reduce using rule 40 (expression -> ID .)
    DECLARE         reduce using rule 40 (expression -> ID .)
    CONSTANT        reduce using rule 40 (expression -> ID .)
    ID              reduce using rule 40 (expression -> ID .)
    INPUT           reduce using rule 40 (expression -> ID .)
    OUTPUT          reduce using rule 40 (expression -> ID .)
    IF              reduce using rule 40 (expression -> ID .)
    CASE            reduce using rule 40 (expression -> ID .)
    FOR             reduce using rule 40 (expression -> ID .)
    REPEAT          reduce using rule 40 (expression -> ID .)
    WHILE           reduce using rule 40 (expression -> ID .)
    PROCEDURE       reduce using rule 40 (expression -> ID .)
    CALL            reduce using rule 40 (expression -> ID .)
    FUNCTION        reduce using rule 40 (expression -> ID .)
    RETURN          reduce using rule 40 (expression -> ID .)
    OPENFILE        reduce using rule 40 (expression -> ID .)
    READFILE        reduce using rule 40 (expression -> ID .)
    WRITEFILE       reduce using rule 40 (expression -> ID .)
    CLOSEFILE       reduce using rule 40 (expression -> ID .)
    SEEK            reduce using rule 40 (expression -> ID .)
    TYPE            reduce using rule 40 (expression -> ID .)
    PASS            reduce using rule 40 (expression -> ID .)
    IMPORT          reduce using rule 40 (expression -> ID .)
    PRIVATE         reduce using rule 40 (expression -> ID .)
    PUBLIC          reduce using rule 40 (expression -> ID .)
    NOT             reduce using rule 40 (expression -> ID .)
    DATE            reduce using rule 40 (expression -> ID .)
    BOOLEAN         reduce using rule 40 (expression -> ID .)
    CHAR            reduce using rule 40 (expression -> ID .)
    STRING          reduce using rule 40 (expression -> ID .)
    REAL            reduce using rule 40 (expression -> ID .)
    INTEGER         reduce using rule 40 (expression -> ID .)
    $end            reduce using rule 40 (expression -> ID .)
    UNTIL           reduce using rule 40 (expression -> ID .)
    ENDWHILE        reduce using rule 40 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 40 (expression -> ID .)
    ENDTYPE         reduce using rule 40 (expression -> ID .)
    ELSE            reduce using rule 40 (expression -> ID .)
    ENDIF           reduce using rule 40 (expression -> ID .)
    ENDFUNCTION     reduce using rule 40 (expression -> ID .)
    SEMICOLON       reduce using rule 40 (expression -> ID .)
    NEXT            reduce using rule 40 (expression -> ID .)
    THEN            reduce using rule 40 (expression -> ID .)
    DO              reduce using rule 40 (expression -> ID .)
    RIGHT_PAREN     reduce using rule 40 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 40 (expression -> ID .)
    TO              reduce using rule 40 (expression -> ID .)
    COLON           reduce using rule 40 (expression -> ID .)
    STEP            reduce using rule 40 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 117
    LEFT_PAREN      shift and go to state 43

  ! LEFT_PAREN      [ reduce using rule 40 (expression -> ID .) ]


state 66

    (23) statement -> IF expression . THEN statements ELSE statements ENDIF
    (24) statement -> IF expression . THEN statements ENDIF
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    THEN            shift and go to state 118
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 67

    (25) statement -> CASE OF . ID cases ENDCASE
    (26) statement -> CASE OF . ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE

    ID              shift and go to state 119


state 68

    (34) statement -> FOR ID . ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 120


state 69

    (36) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    UNTIL           shift and go to state 121
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 70

    (37) statement -> WHILE expression . DO statements ENDWHILE
    (38) statement -> WHILE expression . statements ENDWHILE
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DO              shift and go to state 122
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statements                     shift and go to state 123
    statement                      shift and go to state 2

state 71

    (77) statement -> PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> PROCEDURE ID . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    LEFT_PAREN      shift and go to state 126
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 127
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 72

    (60) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_PAREN     shift and go to state 128
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 73

    (79) statement -> CALL ID . LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> CALL ID .

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    LEFT_PAREN      shift and go to state 129
    DELETE          reduce using rule 80 (statement -> CALL ID .)
    DECLARE         reduce using rule 80 (statement -> CALL ID .)
    CONSTANT        reduce using rule 80 (statement -> CALL ID .)
    ID              reduce using rule 80 (statement -> CALL ID .)
    INPUT           reduce using rule 80 (statement -> CALL ID .)
    OUTPUT          reduce using rule 80 (statement -> CALL ID .)
    IF              reduce using rule 80 (statement -> CALL ID .)
    CASE            reduce using rule 80 (statement -> CALL ID .)
    FOR             reduce using rule 80 (statement -> CALL ID .)
    REPEAT          reduce using rule 80 (statement -> CALL ID .)
    WHILE           reduce using rule 80 (statement -> CALL ID .)
    PROCEDURE       reduce using rule 80 (statement -> CALL ID .)
    CALL            reduce using rule 80 (statement -> CALL ID .)
    FUNCTION        reduce using rule 80 (statement -> CALL ID .)
    RETURN          reduce using rule 80 (statement -> CALL ID .)
    OPENFILE        reduce using rule 80 (statement -> CALL ID .)
    READFILE        reduce using rule 80 (statement -> CALL ID .)
    WRITEFILE       reduce using rule 80 (statement -> CALL ID .)
    CLOSEFILE       reduce using rule 80 (statement -> CALL ID .)
    SEEK            reduce using rule 80 (statement -> CALL ID .)
    TYPE            reduce using rule 80 (statement -> CALL ID .)
    PASS            reduce using rule 80 (statement -> CALL ID .)
    IMPORT          reduce using rule 80 (statement -> CALL ID .)
    PRIVATE         reduce using rule 80 (statement -> CALL ID .)
    PUBLIC          reduce using rule 80 (statement -> CALL ID .)
    NOT             reduce using rule 80 (statement -> CALL ID .)
    MINUS           reduce using rule 80 (statement -> CALL ID .)
    PLUS            reduce using rule 80 (statement -> CALL ID .)
    DATE            reduce using rule 80 (statement -> CALL ID .)
    BOOLEAN         reduce using rule 80 (statement -> CALL ID .)
    CHAR            reduce using rule 80 (statement -> CALL ID .)
    STRING          reduce using rule 80 (statement -> CALL ID .)
    REAL            reduce using rule 80 (statement -> CALL ID .)
    INTEGER         reduce using rule 80 (statement -> CALL ID .)
    $end            reduce using rule 80 (statement -> CALL ID .)
    UNTIL           reduce using rule 80 (statement -> CALL ID .)
    ENDWHILE        reduce using rule 80 (statement -> CALL ID .)
    ENDPROCEDURE    reduce using rule 80 (statement -> CALL ID .)
    ENDTYPE         reduce using rule 80 (statement -> CALL ID .)
    ELSE            reduce using rule 80 (statement -> CALL ID .)
    ENDIF           reduce using rule 80 (statement -> CALL ID .)
    ENDFUNCTION     reduce using rule 80 (statement -> CALL ID .)
    SEMICOLON       reduce using rule 80 (statement -> CALL ID .)
    NEXT            reduce using rule 80 (statement -> CALL ID .)

  ! LEFT_PAREN      [ reduce using rule 80 (statement -> CALL ID .) ]


state 74

    (81) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> FUNCTION ID . RETURNS ID statements ENDFUNCTION
    (84) statement -> FUNCTION ID . RETURNS ARRAY statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 130
    RETURNS         shift and go to state 131


state 75

    (87) statement -> RETURN expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 87 (statement -> RETURN expression .)
    DECLARE         reduce using rule 87 (statement -> RETURN expression .)
    CONSTANT        reduce using rule 87 (statement -> RETURN expression .)
    ID              reduce using rule 87 (statement -> RETURN expression .)
    INPUT           reduce using rule 87 (statement -> RETURN expression .)
    OUTPUT          reduce using rule 87 (statement -> RETURN expression .)
    IF              reduce using rule 87 (statement -> RETURN expression .)
    CASE            reduce using rule 87 (statement -> RETURN expression .)
    FOR             reduce using rule 87 (statement -> RETURN expression .)
    REPEAT          reduce using rule 87 (statement -> RETURN expression .)
    WHILE           reduce using rule 87 (statement -> RETURN expression .)
    PROCEDURE       reduce using rule 87 (statement -> RETURN expression .)
    CALL            reduce using rule 87 (statement -> RETURN expression .)
    FUNCTION        reduce using rule 87 (statement -> RETURN expression .)
    RETURN          reduce using rule 87 (statement -> RETURN expression .)
    OPENFILE        reduce using rule 87 (statement -> RETURN expression .)
    READFILE        reduce using rule 87 (statement -> RETURN expression .)
    WRITEFILE       reduce using rule 87 (statement -> RETURN expression .)
    CLOSEFILE       reduce using rule 87 (statement -> RETURN expression .)
    SEEK            reduce using rule 87 (statement -> RETURN expression .)
    TYPE            reduce using rule 87 (statement -> RETURN expression .)
    PASS            reduce using rule 87 (statement -> RETURN expression .)
    IMPORT          reduce using rule 87 (statement -> RETURN expression .)
    PRIVATE         reduce using rule 87 (statement -> RETURN expression .)
    PUBLIC          reduce using rule 87 (statement -> RETURN expression .)
    NOT             reduce using rule 87 (statement -> RETURN expression .)
    LEFT_PAREN      reduce using rule 87 (statement -> RETURN expression .)
    DATE            reduce using rule 87 (statement -> RETURN expression .)
    BOOLEAN         reduce using rule 87 (statement -> RETURN expression .)
    CHAR            reduce using rule 87 (statement -> RETURN expression .)
    STRING          reduce using rule 87 (statement -> RETURN expression .)
    REAL            reduce using rule 87 (statement -> RETURN expression .)
    INTEGER         reduce using rule 87 (statement -> RETURN expression .)
    $end            reduce using rule 87 (statement -> RETURN expression .)
    UNTIL           reduce using rule 87 (statement -> RETURN expression .)
    ENDWHILE        reduce using rule 87 (statement -> RETURN expression .)
    ENDPROCEDURE    reduce using rule 87 (statement -> RETURN expression .)
    ENDTYPE         reduce using rule 87 (statement -> RETURN expression .)
    ELSE            reduce using rule 87 (statement -> RETURN expression .)
    ENDIF           reduce using rule 87 (statement -> RETURN expression .)
    ENDFUNCTION     reduce using rule 87 (statement -> RETURN expression .)
    SEMICOLON       reduce using rule 87 (statement -> RETURN expression .)
    NEXT            reduce using rule 87 (statement -> RETURN expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 87 (statement -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 87 (statement -> RETURN expression .) ]


state 76

    (88) statement -> OPENFILE expression . FOR READ
    (89) statement -> OPENFILE expression . FOR WRITE
    (90) statement -> OPENFILE expression . FOR APPEND
    (91) statement -> OPENFILE expression . FOR RANDOM
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    FOR             shift and go to state 132
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 77

    (92) statement -> READFILE expression . COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> READFILE expression . COMMA ID
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    COMMA           shift and go to state 133
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 78

    (94) statement -> WRITEFILE expression . COMMA expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    COMMA           shift and go to state 134
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 79

    (95) statement -> CLOSEFILE expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 95 (statement -> CLOSEFILE expression .)
    DECLARE         reduce using rule 95 (statement -> CLOSEFILE expression .)
    CONSTANT        reduce using rule 95 (statement -> CLOSEFILE expression .)
    ID              reduce using rule 95 (statement -> CLOSEFILE expression .)
    INPUT           reduce using rule 95 (statement -> CLOSEFILE expression .)
    OUTPUT          reduce using rule 95 (statement -> CLOSEFILE expression .)
    IF              reduce using rule 95 (statement -> CLOSEFILE expression .)
    CASE            reduce using rule 95 (statement -> CLOSEFILE expression .)
    FOR             reduce using rule 95 (statement -> CLOSEFILE expression .)
    REPEAT          reduce using rule 95 (statement -> CLOSEFILE expression .)
    WHILE           reduce using rule 95 (statement -> CLOSEFILE expression .)
    PROCEDURE       reduce using rule 95 (statement -> CLOSEFILE expression .)
    CALL            reduce using rule 95 (statement -> CLOSEFILE expression .)
    FUNCTION        reduce using rule 95 (statement -> CLOSEFILE expression .)
    RETURN          reduce using rule 95 (statement -> CLOSEFILE expression .)
    OPENFILE        reduce using rule 95 (statement -> CLOSEFILE expression .)
    READFILE        reduce using rule 95 (statement -> CLOSEFILE expression .)
    WRITEFILE       reduce using rule 95 (statement -> CLOSEFILE expression .)
    CLOSEFILE       reduce using rule 95 (statement -> CLOSEFILE expression .)
    SEEK            reduce using rule 95 (statement -> CLOSEFILE expression .)
    TYPE            reduce using rule 95 (statement -> CLOSEFILE expression .)
    PASS            reduce using rule 95 (statement -> CLOSEFILE expression .)
    IMPORT          reduce using rule 95 (statement -> CLOSEFILE expression .)
    PRIVATE         reduce using rule 95 (statement -> CLOSEFILE expression .)
    PUBLIC          reduce using rule 95 (statement -> CLOSEFILE expression .)
    NOT             reduce using rule 95 (statement -> CLOSEFILE expression .)
    LEFT_PAREN      reduce using rule 95 (statement -> CLOSEFILE expression .)
    DATE            reduce using rule 95 (statement -> CLOSEFILE expression .)
    BOOLEAN         reduce using rule 95 (statement -> CLOSEFILE expression .)
    CHAR            reduce using rule 95 (statement -> CLOSEFILE expression .)
    STRING          reduce using rule 95 (statement -> CLOSEFILE expression .)
    REAL            reduce using rule 95 (statement -> CLOSEFILE expression .)
    INTEGER         reduce using rule 95 (statement -> CLOSEFILE expression .)
    $end            reduce using rule 95 (statement -> CLOSEFILE expression .)
    UNTIL           reduce using rule 95 (statement -> CLOSEFILE expression .)
    ENDWHILE        reduce using rule 95 (statement -> CLOSEFILE expression .)
    ENDPROCEDURE    reduce using rule 95 (statement -> CLOSEFILE expression .)
    ENDTYPE         reduce using rule 95 (statement -> CLOSEFILE expression .)
    ELSE            reduce using rule 95 (statement -> CLOSEFILE expression .)
    ENDIF           reduce using rule 95 (statement -> CLOSEFILE expression .)
    ENDFUNCTION     reduce using rule 95 (statement -> CLOSEFILE expression .)
    SEMICOLON       reduce using rule 95 (statement -> CLOSEFILE expression .)
    NEXT            reduce using rule 95 (statement -> CLOSEFILE expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 95 (statement -> CLOSEFILE expression .) ]
  ! PLUS            [ reduce using rule 95 (statement -> CLOSEFILE expression .) ]


state 80

    (96) statement -> SEEK expression . COMMA expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    COMMA           shift and go to state 135
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 81

    (97) statement -> TYPE ID . statements ENDTYPE
    (100) statement -> TYPE ID . EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> TYPE ID . EQUAL POINTER ID
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    EQUAL           shift and go to state 137
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 136
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 82

    (105) statement -> IMPORT expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 105 (statement -> IMPORT expression .)
    DECLARE         reduce using rule 105 (statement -> IMPORT expression .)
    CONSTANT        reduce using rule 105 (statement -> IMPORT expression .)
    ID              reduce using rule 105 (statement -> IMPORT expression .)
    INPUT           reduce using rule 105 (statement -> IMPORT expression .)
    OUTPUT          reduce using rule 105 (statement -> IMPORT expression .)
    IF              reduce using rule 105 (statement -> IMPORT expression .)
    CASE            reduce using rule 105 (statement -> IMPORT expression .)
    FOR             reduce using rule 105 (statement -> IMPORT expression .)
    REPEAT          reduce using rule 105 (statement -> IMPORT expression .)
    WHILE           reduce using rule 105 (statement -> IMPORT expression .)
    PROCEDURE       reduce using rule 105 (statement -> IMPORT expression .)
    CALL            reduce using rule 105 (statement -> IMPORT expression .)
    FUNCTION        reduce using rule 105 (statement -> IMPORT expression .)
    RETURN          reduce using rule 105 (statement -> IMPORT expression .)
    OPENFILE        reduce using rule 105 (statement -> IMPORT expression .)
    READFILE        reduce using rule 105 (statement -> IMPORT expression .)
    WRITEFILE       reduce using rule 105 (statement -> IMPORT expression .)
    CLOSEFILE       reduce using rule 105 (statement -> IMPORT expression .)
    SEEK            reduce using rule 105 (statement -> IMPORT expression .)
    TYPE            reduce using rule 105 (statement -> IMPORT expression .)
    PASS            reduce using rule 105 (statement -> IMPORT expression .)
    IMPORT          reduce using rule 105 (statement -> IMPORT expression .)
    PRIVATE         reduce using rule 105 (statement -> IMPORT expression .)
    PUBLIC          reduce using rule 105 (statement -> IMPORT expression .)
    NOT             reduce using rule 105 (statement -> IMPORT expression .)
    LEFT_PAREN      reduce using rule 105 (statement -> IMPORT expression .)
    DATE            reduce using rule 105 (statement -> IMPORT expression .)
    BOOLEAN         reduce using rule 105 (statement -> IMPORT expression .)
    CHAR            reduce using rule 105 (statement -> IMPORT expression .)
    STRING          reduce using rule 105 (statement -> IMPORT expression .)
    REAL            reduce using rule 105 (statement -> IMPORT expression .)
    INTEGER         reduce using rule 105 (statement -> IMPORT expression .)
    $end            reduce using rule 105 (statement -> IMPORT expression .)
    UNTIL           reduce using rule 105 (statement -> IMPORT expression .)
    ENDWHILE        reduce using rule 105 (statement -> IMPORT expression .)
    ENDPROCEDURE    reduce using rule 105 (statement -> IMPORT expression .)
    ENDTYPE         reduce using rule 105 (statement -> IMPORT expression .)
    ELSE            reduce using rule 105 (statement -> IMPORT expression .)
    ENDIF           reduce using rule 105 (statement -> IMPORT expression .)
    ENDFUNCTION     reduce using rule 105 (statement -> IMPORT expression .)
    SEMICOLON       reduce using rule 105 (statement -> IMPORT expression .)
    NEXT            reduce using rule 105 (statement -> IMPORT expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 105 (statement -> IMPORT expression .) ]
  ! PLUS            [ reduce using rule 105 (statement -> IMPORT expression .) ]


state 83

    (106) statement -> PRIVATE statement .

    DELETE          reduce using rule 106 (statement -> PRIVATE statement .)
    DECLARE         reduce using rule 106 (statement -> PRIVATE statement .)
    CONSTANT        reduce using rule 106 (statement -> PRIVATE statement .)
    ID              reduce using rule 106 (statement -> PRIVATE statement .)
    INPUT           reduce using rule 106 (statement -> PRIVATE statement .)
    OUTPUT          reduce using rule 106 (statement -> PRIVATE statement .)
    IF              reduce using rule 106 (statement -> PRIVATE statement .)
    CASE            reduce using rule 106 (statement -> PRIVATE statement .)
    FOR             reduce using rule 106 (statement -> PRIVATE statement .)
    REPEAT          reduce using rule 106 (statement -> PRIVATE statement .)
    WHILE           reduce using rule 106 (statement -> PRIVATE statement .)
    PROCEDURE       reduce using rule 106 (statement -> PRIVATE statement .)
    CALL            reduce using rule 106 (statement -> PRIVATE statement .)
    FUNCTION        reduce using rule 106 (statement -> PRIVATE statement .)
    RETURN          reduce using rule 106 (statement -> PRIVATE statement .)
    OPENFILE        reduce using rule 106 (statement -> PRIVATE statement .)
    READFILE        reduce using rule 106 (statement -> PRIVATE statement .)
    WRITEFILE       reduce using rule 106 (statement -> PRIVATE statement .)
    CLOSEFILE       reduce using rule 106 (statement -> PRIVATE statement .)
    SEEK            reduce using rule 106 (statement -> PRIVATE statement .)
    TYPE            reduce using rule 106 (statement -> PRIVATE statement .)
    PASS            reduce using rule 106 (statement -> PRIVATE statement .)
    IMPORT          reduce using rule 106 (statement -> PRIVATE statement .)
    PRIVATE         reduce using rule 106 (statement -> PRIVATE statement .)
    PUBLIC          reduce using rule 106 (statement -> PRIVATE statement .)
    NOT             reduce using rule 106 (statement -> PRIVATE statement .)
    MINUS           reduce using rule 106 (statement -> PRIVATE statement .)
    PLUS            reduce using rule 106 (statement -> PRIVATE statement .)
    LEFT_PAREN      reduce using rule 106 (statement -> PRIVATE statement .)
    DATE            reduce using rule 106 (statement -> PRIVATE statement .)
    BOOLEAN         reduce using rule 106 (statement -> PRIVATE statement .)
    CHAR            reduce using rule 106 (statement -> PRIVATE statement .)
    STRING          reduce using rule 106 (statement -> PRIVATE statement .)
    REAL            reduce using rule 106 (statement -> PRIVATE statement .)
    INTEGER         reduce using rule 106 (statement -> PRIVATE statement .)
    $end            reduce using rule 106 (statement -> PRIVATE statement .)
    UNTIL           reduce using rule 106 (statement -> PRIVATE statement .)
    ENDWHILE        reduce using rule 106 (statement -> PRIVATE statement .)
    ENDPROCEDURE    reduce using rule 106 (statement -> PRIVATE statement .)
    ENDTYPE         reduce using rule 106 (statement -> PRIVATE statement .)
    ELSE            reduce using rule 106 (statement -> PRIVATE statement .)
    ENDIF           reduce using rule 106 (statement -> PRIVATE statement .)
    ENDFUNCTION     reduce using rule 106 (statement -> PRIVATE statement .)
    SEMICOLON       reduce using rule 106 (statement -> PRIVATE statement .)
    NEXT            reduce using rule 106 (statement -> PRIVATE statement .)


state 84

    (107) statement -> PUBLIC statement .

    DELETE          reduce using rule 107 (statement -> PUBLIC statement .)
    DECLARE         reduce using rule 107 (statement -> PUBLIC statement .)
    CONSTANT        reduce using rule 107 (statement -> PUBLIC statement .)
    ID              reduce using rule 107 (statement -> PUBLIC statement .)
    INPUT           reduce using rule 107 (statement -> PUBLIC statement .)
    OUTPUT          reduce using rule 107 (statement -> PUBLIC statement .)
    IF              reduce using rule 107 (statement -> PUBLIC statement .)
    CASE            reduce using rule 107 (statement -> PUBLIC statement .)
    FOR             reduce using rule 107 (statement -> PUBLIC statement .)
    REPEAT          reduce using rule 107 (statement -> PUBLIC statement .)
    WHILE           reduce using rule 107 (statement -> PUBLIC statement .)
    PROCEDURE       reduce using rule 107 (statement -> PUBLIC statement .)
    CALL            reduce using rule 107 (statement -> PUBLIC statement .)
    FUNCTION        reduce using rule 107 (statement -> PUBLIC statement .)
    RETURN          reduce using rule 107 (statement -> PUBLIC statement .)
    OPENFILE        reduce using rule 107 (statement -> PUBLIC statement .)
    READFILE        reduce using rule 107 (statement -> PUBLIC statement .)
    WRITEFILE       reduce using rule 107 (statement -> PUBLIC statement .)
    CLOSEFILE       reduce using rule 107 (statement -> PUBLIC statement .)
    SEEK            reduce using rule 107 (statement -> PUBLIC statement .)
    TYPE            reduce using rule 107 (statement -> PUBLIC statement .)
    PASS            reduce using rule 107 (statement -> PUBLIC statement .)
    IMPORT          reduce using rule 107 (statement -> PUBLIC statement .)
    PRIVATE         reduce using rule 107 (statement -> PUBLIC statement .)
    PUBLIC          reduce using rule 107 (statement -> PUBLIC statement .)
    NOT             reduce using rule 107 (statement -> PUBLIC statement .)
    MINUS           reduce using rule 107 (statement -> PUBLIC statement .)
    PLUS            reduce using rule 107 (statement -> PUBLIC statement .)
    LEFT_PAREN      reduce using rule 107 (statement -> PUBLIC statement .)
    DATE            reduce using rule 107 (statement -> PUBLIC statement .)
    BOOLEAN         reduce using rule 107 (statement -> PUBLIC statement .)
    CHAR            reduce using rule 107 (statement -> PUBLIC statement .)
    STRING          reduce using rule 107 (statement -> PUBLIC statement .)
    REAL            reduce using rule 107 (statement -> PUBLIC statement .)
    INTEGER         reduce using rule 107 (statement -> PUBLIC statement .)
    $end            reduce using rule 107 (statement -> PUBLIC statement .)
    UNTIL           reduce using rule 107 (statement -> PUBLIC statement .)
    ENDWHILE        reduce using rule 107 (statement -> PUBLIC statement .)
    ENDPROCEDURE    reduce using rule 107 (statement -> PUBLIC statement .)
    ENDTYPE         reduce using rule 107 (statement -> PUBLIC statement .)
    ELSE            reduce using rule 107 (statement -> PUBLIC statement .)
    ENDIF           reduce using rule 107 (statement -> PUBLIC statement .)
    ENDFUNCTION     reduce using rule 107 (statement -> PUBLIC statement .)
    SEMICOLON       reduce using rule 107 (statement -> PUBLIC statement .)
    NEXT            reduce using rule 107 (statement -> PUBLIC statement .)


state 85

    (44) expression -> NOT expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 44 (expression -> NOT expression .)
    OR              reduce using rule 44 (expression -> NOT expression .)
    AND             reduce using rule 44 (expression -> NOT expression .)
    CONNECT         reduce using rule 44 (expression -> NOT expression .)
    DELETE          reduce using rule 44 (expression -> NOT expression .)
    DECLARE         reduce using rule 44 (expression -> NOT expression .)
    CONSTANT        reduce using rule 44 (expression -> NOT expression .)
    ID              reduce using rule 44 (expression -> NOT expression .)
    INPUT           reduce using rule 44 (expression -> NOT expression .)
    OUTPUT          reduce using rule 44 (expression -> NOT expression .)
    IF              reduce using rule 44 (expression -> NOT expression .)
    CASE            reduce using rule 44 (expression -> NOT expression .)
    FOR             reduce using rule 44 (expression -> NOT expression .)
    REPEAT          reduce using rule 44 (expression -> NOT expression .)
    WHILE           reduce using rule 44 (expression -> NOT expression .)
    PROCEDURE       reduce using rule 44 (expression -> NOT expression .)
    CALL            reduce using rule 44 (expression -> NOT expression .)
    FUNCTION        reduce using rule 44 (expression -> NOT expression .)
    RETURN          reduce using rule 44 (expression -> NOT expression .)
    OPENFILE        reduce using rule 44 (expression -> NOT expression .)
    READFILE        reduce using rule 44 (expression -> NOT expression .)
    WRITEFILE       reduce using rule 44 (expression -> NOT expression .)
    CLOSEFILE       reduce using rule 44 (expression -> NOT expression .)
    SEEK            reduce using rule 44 (expression -> NOT expression .)
    TYPE            reduce using rule 44 (expression -> NOT expression .)
    PASS            reduce using rule 44 (expression -> NOT expression .)
    IMPORT          reduce using rule 44 (expression -> NOT expression .)
    PRIVATE         reduce using rule 44 (expression -> NOT expression .)
    PUBLIC          reduce using rule 44 (expression -> NOT expression .)
    NOT             reduce using rule 44 (expression -> NOT expression .)
    LEFT_PAREN      reduce using rule 44 (expression -> NOT expression .)
    DATE            reduce using rule 44 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 44 (expression -> NOT expression .)
    CHAR            reduce using rule 44 (expression -> NOT expression .)
    STRING          reduce using rule 44 (expression -> NOT expression .)
    REAL            reduce using rule 44 (expression -> NOT expression .)
    INTEGER         reduce using rule 44 (expression -> NOT expression .)
    $end            reduce using rule 44 (expression -> NOT expression .)
    COMMA           reduce using rule 44 (expression -> NOT expression .)
    UNTIL           reduce using rule 44 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 44 (expression -> NOT expression .)
    ENDPROCEDURE    reduce using rule 44 (expression -> NOT expression .)
    ENDTYPE         reduce using rule 44 (expression -> NOT expression .)
    ELSE            reduce using rule 44 (expression -> NOT expression .)
    ENDIF           reduce using rule 44 (expression -> NOT expression .)
    ENDFUNCTION     reduce using rule 44 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 44 (expression -> NOT expression .)
    NEXT            reduce using rule 44 (expression -> NOT expression .)
    THEN            reduce using rule 44 (expression -> NOT expression .)
    DO              reduce using rule 44 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 44 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 44 (expression -> NOT expression .)
    TO              reduce using rule 44 (expression -> NOT expression .)
    COLON           reduce using rule 44 (expression -> NOT expression .)
    STEP            reduce using rule 44 (expression -> NOT expression .)
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! EQUAL           [ reduce using rule 44 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 44 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 44 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 44 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 44 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 44 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> NOT expression .) ]
  ! MUL             [ reduce using rule 44 (expression -> NOT expression .) ]
  ! N_DIV           [ reduce using rule 44 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 86

    (55) expression -> MINUS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 55 (expression -> MINUS expression .)
    OR              reduce using rule 55 (expression -> MINUS expression .)
    AND             reduce using rule 55 (expression -> MINUS expression .)
    EQUAL           reduce using rule 55 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 55 (expression -> MINUS expression .)
    LESS            reduce using rule 55 (expression -> MINUS expression .)
    GREATER         reduce using rule 55 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 55 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 55 (expression -> MINUS expression .)
    MOD             reduce using rule 55 (expression -> MINUS expression .)
    DIV             reduce using rule 55 (expression -> MINUS expression .)
    MUL             reduce using rule 55 (expression -> MINUS expression .)
    N_DIV           reduce using rule 55 (expression -> MINUS expression .)
    PLUS            reduce using rule 55 (expression -> MINUS expression .)
    MINUS           reduce using rule 55 (expression -> MINUS expression .)
    CONNECT         reduce using rule 55 (expression -> MINUS expression .)
    DELETE          reduce using rule 55 (expression -> MINUS expression .)
    DECLARE         reduce using rule 55 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 55 (expression -> MINUS expression .)
    ID              reduce using rule 55 (expression -> MINUS expression .)
    INPUT           reduce using rule 55 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 55 (expression -> MINUS expression .)
    IF              reduce using rule 55 (expression -> MINUS expression .)
    CASE            reduce using rule 55 (expression -> MINUS expression .)
    FOR             reduce using rule 55 (expression -> MINUS expression .)
    REPEAT          reduce using rule 55 (expression -> MINUS expression .)
    WHILE           reduce using rule 55 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 55 (expression -> MINUS expression .)
    CALL            reduce using rule 55 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 55 (expression -> MINUS expression .)
    RETURN          reduce using rule 55 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 55 (expression -> MINUS expression .)
    READFILE        reduce using rule 55 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 55 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 55 (expression -> MINUS expression .)
    SEEK            reduce using rule 55 (expression -> MINUS expression .)
    TYPE            reduce using rule 55 (expression -> MINUS expression .)
    PASS            reduce using rule 55 (expression -> MINUS expression .)
    IMPORT          reduce using rule 55 (expression -> MINUS expression .)
    PRIVATE         reduce using rule 55 (expression -> MINUS expression .)
    PUBLIC          reduce using rule 55 (expression -> MINUS expression .)
    NOT             reduce using rule 55 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 55 (expression -> MINUS expression .)
    DATE            reduce using rule 55 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 55 (expression -> MINUS expression .)
    CHAR            reduce using rule 55 (expression -> MINUS expression .)
    STRING          reduce using rule 55 (expression -> MINUS expression .)
    REAL            reduce using rule 55 (expression -> MINUS expression .)
    INTEGER         reduce using rule 55 (expression -> MINUS expression .)
    $end            reduce using rule 55 (expression -> MINUS expression .)
    COMMA           reduce using rule 55 (expression -> MINUS expression .)
    UNTIL           reduce using rule 55 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 55 (expression -> MINUS expression .)
    ENDPROCEDURE    reduce using rule 55 (expression -> MINUS expression .)
    ENDTYPE         reduce using rule 55 (expression -> MINUS expression .)
    ELSE            reduce using rule 55 (expression -> MINUS expression .)
    ENDIF           reduce using rule 55 (expression -> MINUS expression .)
    ENDFUNCTION     reduce using rule 55 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 55 (expression -> MINUS expression .)
    NEXT            reduce using rule 55 (expression -> MINUS expression .)
    THEN            reduce using rule 55 (expression -> MINUS expression .)
    DO              reduce using rule 55 (expression -> MINUS expression .)
    RIGHT_PAREN     reduce using rule 55 (expression -> MINUS expression .)
    RIGHT_SQUARE    reduce using rule 55 (expression -> MINUS expression .)
    TO              reduce using rule 55 (expression -> MINUS expression .)
    COLON           reduce using rule 55 (expression -> MINUS expression .)
    STEP            reduce using rule 55 (expression -> MINUS expression .)

  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 87

    (56) expression -> PLUS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 56 (expression -> PLUS expression .)
    OR              reduce using rule 56 (expression -> PLUS expression .)
    AND             reduce using rule 56 (expression -> PLUS expression .)
    EQUAL           reduce using rule 56 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 56 (expression -> PLUS expression .)
    LESS            reduce using rule 56 (expression -> PLUS expression .)
    GREATER         reduce using rule 56 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 56 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 56 (expression -> PLUS expression .)
    MOD             reduce using rule 56 (expression -> PLUS expression .)
    DIV             reduce using rule 56 (expression -> PLUS expression .)
    MUL             reduce using rule 56 (expression -> PLUS expression .)
    N_DIV           reduce using rule 56 (expression -> PLUS expression .)
    PLUS            reduce using rule 56 (expression -> PLUS expression .)
    MINUS           reduce using rule 56 (expression -> PLUS expression .)
    CONNECT         reduce using rule 56 (expression -> PLUS expression .)
    DELETE          reduce using rule 56 (expression -> PLUS expression .)
    DECLARE         reduce using rule 56 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 56 (expression -> PLUS expression .)
    ID              reduce using rule 56 (expression -> PLUS expression .)
    INPUT           reduce using rule 56 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 56 (expression -> PLUS expression .)
    IF              reduce using rule 56 (expression -> PLUS expression .)
    CASE            reduce using rule 56 (expression -> PLUS expression .)
    FOR             reduce using rule 56 (expression -> PLUS expression .)
    REPEAT          reduce using rule 56 (expression -> PLUS expression .)
    WHILE           reduce using rule 56 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 56 (expression -> PLUS expression .)
    CALL            reduce using rule 56 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 56 (expression -> PLUS expression .)
    RETURN          reduce using rule 56 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 56 (expression -> PLUS expression .)
    READFILE        reduce using rule 56 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 56 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 56 (expression -> PLUS expression .)
    SEEK            reduce using rule 56 (expression -> PLUS expression .)
    TYPE            reduce using rule 56 (expression -> PLUS expression .)
    PASS            reduce using rule 56 (expression -> PLUS expression .)
    IMPORT          reduce using rule 56 (expression -> PLUS expression .)
    PRIVATE         reduce using rule 56 (expression -> PLUS expression .)
    PUBLIC          reduce using rule 56 (expression -> PLUS expression .)
    NOT             reduce using rule 56 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 56 (expression -> PLUS expression .)
    DATE            reduce using rule 56 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 56 (expression -> PLUS expression .)
    CHAR            reduce using rule 56 (expression -> PLUS expression .)
    STRING          reduce using rule 56 (expression -> PLUS expression .)
    REAL            reduce using rule 56 (expression -> PLUS expression .)
    INTEGER         reduce using rule 56 (expression -> PLUS expression .)
    $end            reduce using rule 56 (expression -> PLUS expression .)
    COMMA           reduce using rule 56 (expression -> PLUS expression .)
    UNTIL           reduce using rule 56 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 56 (expression -> PLUS expression .)
    ENDPROCEDURE    reduce using rule 56 (expression -> PLUS expression .)
    ENDTYPE         reduce using rule 56 (expression -> PLUS expression .)
    ELSE            reduce using rule 56 (expression -> PLUS expression .)
    ENDIF           reduce using rule 56 (expression -> PLUS expression .)
    ENDFUNCTION     reduce using rule 56 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 56 (expression -> PLUS expression .)
    NEXT            reduce using rule 56 (expression -> PLUS expression .)
    THEN            reduce using rule 56 (expression -> PLUS expression .)
    DO              reduce using rule 56 (expression -> PLUS expression .)
    RIGHT_PAREN     reduce using rule 56 (expression -> PLUS expression .)
    RIGHT_SQUARE    reduce using rule 56 (expression -> PLUS expression .)
    TO              reduce using rule 56 (expression -> PLUS expression .)
    COLON           reduce using rule 56 (expression -> PLUS expression .)
    STEP            reduce using rule 56 (expression -> PLUS expression .)

  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 88

    (10) statement -> ID ASSIGN expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 10 (statement -> ID ASSIGN expression .)
    DECLARE         reduce using rule 10 (statement -> ID ASSIGN expression .)
    CONSTANT        reduce using rule 10 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 10 (statement -> ID ASSIGN expression .)
    INPUT           reduce using rule 10 (statement -> ID ASSIGN expression .)
    OUTPUT          reduce using rule 10 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 10 (statement -> ID ASSIGN expression .)
    CASE            reduce using rule 10 (statement -> ID ASSIGN expression .)
    FOR             reduce using rule 10 (statement -> ID ASSIGN expression .)
    REPEAT          reduce using rule 10 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 10 (statement -> ID ASSIGN expression .)
    PROCEDURE       reduce using rule 10 (statement -> ID ASSIGN expression .)
    CALL            reduce using rule 10 (statement -> ID ASSIGN expression .)
    FUNCTION        reduce using rule 10 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 10 (statement -> ID ASSIGN expression .)
    OPENFILE        reduce using rule 10 (statement -> ID ASSIGN expression .)
    READFILE        reduce using rule 10 (statement -> ID ASSIGN expression .)
    WRITEFILE       reduce using rule 10 (statement -> ID ASSIGN expression .)
    CLOSEFILE       reduce using rule 10 (statement -> ID ASSIGN expression .)
    SEEK            reduce using rule 10 (statement -> ID ASSIGN expression .)
    TYPE            reduce using rule 10 (statement -> ID ASSIGN expression .)
    PASS            reduce using rule 10 (statement -> ID ASSIGN expression .)
    IMPORT          reduce using rule 10 (statement -> ID ASSIGN expression .)
    PRIVATE         reduce using rule 10 (statement -> ID ASSIGN expression .)
    PUBLIC          reduce using rule 10 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 10 (statement -> ID ASSIGN expression .)
    LEFT_PAREN      reduce using rule 10 (statement -> ID ASSIGN expression .)
    DATE            reduce using rule 10 (statement -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 10 (statement -> ID ASSIGN expression .)
    CHAR            reduce using rule 10 (statement -> ID ASSIGN expression .)
    STRING          reduce using rule 10 (statement -> ID ASSIGN expression .)
    REAL            reduce using rule 10 (statement -> ID ASSIGN expression .)
    INTEGER         reduce using rule 10 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 10 (statement -> ID ASSIGN expression .)
    UNTIL           reduce using rule 10 (statement -> ID ASSIGN expression .)
    ENDWHILE        reduce using rule 10 (statement -> ID ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 10 (statement -> ID ASSIGN expression .)
    ENDTYPE         reduce using rule 10 (statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 10 (statement -> ID ASSIGN expression .)
    ENDIF           reduce using rule 10 (statement -> ID ASSIGN expression .)
    ENDFUNCTION     reduce using rule 10 (statement -> ID ASSIGN expression .)
    SEMICOLON       reduce using rule 10 (statement -> ID ASSIGN expression .)
    NEXT            reduce using rule 10 (statement -> ID ASSIGN expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 10 (statement -> ID ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 10 (statement -> ID ASSIGN expression .) ]


state 89

    (12) statement -> ID ASSIGN LEFT_SQUARE . array_items RIGHT_SQUARE
    (14) array_items -> . array_items COMMA expression
    (15) array_items -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    array_items                    shift and go to state 138
    expression                     shift and go to state 139

state 90

    (11) statement -> ID LEFT_SQUARE indexes . RIGHT_SQUARE ASSIGN expression
    (13) statement -> ID LEFT_SQUARE indexes . RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (41) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (16) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 140
    COMMA           shift and go to state 141


state 91

    (17) indexes -> expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 17 (indexes -> expression .)
    COMMA           reduce using rule 17 (indexes -> expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 92

    (85) expression -> ID LEFT_PAREN parameters . RIGHT_PAREN
    (75) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 142
    COMMA           shift and go to state 143


state 93

    (86) expression -> ID LEFT_PAREN RIGHT_PAREN .

    DOT             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OR              reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    AND             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    EQUAL           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MOD             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DIV             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MUL             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    N_DIV           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PLUS            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MINUS           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONNECT         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DELETE          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DECLARE         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONSTANT        reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ID              reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INPUT           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OUTPUT          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IF              reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CASE            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FOR             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REPEAT          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WHILE           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PROCEDURE       reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CALL            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FUNCTION        reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RETURN          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OPENFILE        reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    READFILE        reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WRITEFILE       reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEEK            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TYPE            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PASS            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IMPORT          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PRIVATE         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PUBLIC          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT             reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DATE            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    BOOLEAN         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CHAR            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STRING          reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REAL            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INTEGER         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    $end            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    UNTIL           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDWHILE        reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDTYPE         reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ELSE            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDIF           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEXT            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    THEN            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DO              reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TO              reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COLON           reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STEP            reduce using rule 86 (expression -> ID LEFT_PAREN RIGHT_PAREN .)


state 94

    (76) parameters -> expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_PAREN     reduce using rule 76 (parameters -> expression .)
    COMMA           reduce using rule 76 (parameters -> expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 95

    (4) statement -> DECLARE ID COLON . ID
    (6) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 144
    ARRAY           shift and go to state 145


state 96

    (5) statement -> CONSTANT ID EQUAL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 146

state 97

    (98) expression -> expression DOT expression .
    (39) statement -> expression .
    (99) statement -> expression . DOT statement
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! reduce/reduce conflict for DELETE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ID resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for CASE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for CALL resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for PASS resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for NOT resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for DATE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for REAL resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for UNTIL resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ENDWHILE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ENDPROCEDURE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ENDTYPE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ENDIF resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for ENDFUNCTION resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 39 (statement -> expression .)
  ! reduce/reduce conflict for NEXT resolved using rule 39 (statement -> expression .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
    DELETE          reduce using rule 39 (statement -> expression .)
    DECLARE         reduce using rule 39 (statement -> expression .)
    CONSTANT        reduce using rule 39 (statement -> expression .)
    ID              reduce using rule 39 (statement -> expression .)
    INPUT           reduce using rule 39 (statement -> expression .)
    OUTPUT          reduce using rule 39 (statement -> expression .)
    IF              reduce using rule 39 (statement -> expression .)
    CASE            reduce using rule 39 (statement -> expression .)
    FOR             reduce using rule 39 (statement -> expression .)
    REPEAT          reduce using rule 39 (statement -> expression .)
    WHILE           reduce using rule 39 (statement -> expression .)
    PROCEDURE       reduce using rule 39 (statement -> expression .)
    CALL            reduce using rule 39 (statement -> expression .)
    FUNCTION        reduce using rule 39 (statement -> expression .)
    RETURN          reduce using rule 39 (statement -> expression .)
    OPENFILE        reduce using rule 39 (statement -> expression .)
    READFILE        reduce using rule 39 (statement -> expression .)
    WRITEFILE       reduce using rule 39 (statement -> expression .)
    CLOSEFILE       reduce using rule 39 (statement -> expression .)
    SEEK            reduce using rule 39 (statement -> expression .)
    TYPE            reduce using rule 39 (statement -> expression .)
    PASS            reduce using rule 39 (statement -> expression .)
    IMPORT          reduce using rule 39 (statement -> expression .)
    PRIVATE         reduce using rule 39 (statement -> expression .)
    PUBLIC          reduce using rule 39 (statement -> expression .)
    NOT             reduce using rule 39 (statement -> expression .)
    LEFT_PAREN      reduce using rule 39 (statement -> expression .)
    DATE            reduce using rule 39 (statement -> expression .)
    BOOLEAN         reduce using rule 39 (statement -> expression .)
    CHAR            reduce using rule 39 (statement -> expression .)
    STRING          reduce using rule 39 (statement -> expression .)
    REAL            reduce using rule 39 (statement -> expression .)
    INTEGER         reduce using rule 39 (statement -> expression .)
    $end            reduce using rule 39 (statement -> expression .)
    UNTIL           reduce using rule 39 (statement -> expression .)
    ENDWHILE        reduce using rule 39 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 39 (statement -> expression .)
    ENDTYPE         reduce using rule 39 (statement -> expression .)
    ELSE            reduce using rule 39 (statement -> expression .)
    ENDIF           reduce using rule 39 (statement -> expression .)
    ENDFUNCTION     reduce using rule 39 (statement -> expression .)
    SEMICOLON       reduce using rule 39 (statement -> expression .)
    NEXT            reduce using rule 39 (statement -> expression .)
    DOT             shift and go to state 46
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61

  ! DOT             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! OR              [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! AND             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! EQUAL           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! LESS            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! GREATER         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MOD             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! DIV             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MUL             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! N_DIV           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! PLUS            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CONNECT         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! DELETE          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! DECLARE         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CONSTANT        [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ID              [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! INPUT           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! OUTPUT          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! IF              [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CASE            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! FOR             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! REPEAT          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! WHILE           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! PROCEDURE       [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CALL            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! FUNCTION        [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! RETURN          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! OPENFILE        [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! READFILE        [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! WRITEFILE       [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CLOSEFILE       [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! SEEK            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! TYPE            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! PASS            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! IMPORT          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! PRIVATE         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! PUBLIC          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! NOT             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! LEFT_PAREN      [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! DATE            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! BOOLEAN         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CHAR            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! STRING          [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! REAL            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! INTEGER         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! $end            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! UNTIL           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ENDWHILE        [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ENDPROCEDURE    [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ENDTYPE         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ELSE            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ENDIF           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! ENDFUNCTION     [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! SEMICOLON       [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! NEXT            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 39 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 39 (statement -> expression .) ]


state 98

    (99) statement -> expression DOT statement .

    DELETE          reduce using rule 99 (statement -> expression DOT statement .)
    DECLARE         reduce using rule 99 (statement -> expression DOT statement .)
    CONSTANT        reduce using rule 99 (statement -> expression DOT statement .)
    ID              reduce using rule 99 (statement -> expression DOT statement .)
    INPUT           reduce using rule 99 (statement -> expression DOT statement .)
    OUTPUT          reduce using rule 99 (statement -> expression DOT statement .)
    IF              reduce using rule 99 (statement -> expression DOT statement .)
    CASE            reduce using rule 99 (statement -> expression DOT statement .)
    FOR             reduce using rule 99 (statement -> expression DOT statement .)
    REPEAT          reduce using rule 99 (statement -> expression DOT statement .)
    WHILE           reduce using rule 99 (statement -> expression DOT statement .)
    PROCEDURE       reduce using rule 99 (statement -> expression DOT statement .)
    CALL            reduce using rule 99 (statement -> expression DOT statement .)
    FUNCTION        reduce using rule 99 (statement -> expression DOT statement .)
    RETURN          reduce using rule 99 (statement -> expression DOT statement .)
    OPENFILE        reduce using rule 99 (statement -> expression DOT statement .)
    READFILE        reduce using rule 99 (statement -> expression DOT statement .)
    WRITEFILE       reduce using rule 99 (statement -> expression DOT statement .)
    CLOSEFILE       reduce using rule 99 (statement -> expression DOT statement .)
    SEEK            reduce using rule 99 (statement -> expression DOT statement .)
    TYPE            reduce using rule 99 (statement -> expression DOT statement .)
    PASS            reduce using rule 99 (statement -> expression DOT statement .)
    IMPORT          reduce using rule 99 (statement -> expression DOT statement .)
    PRIVATE         reduce using rule 99 (statement -> expression DOT statement .)
    PUBLIC          reduce using rule 99 (statement -> expression DOT statement .)
    NOT             reduce using rule 99 (statement -> expression DOT statement .)
    MINUS           reduce using rule 99 (statement -> expression DOT statement .)
    PLUS            reduce using rule 99 (statement -> expression DOT statement .)
    LEFT_PAREN      reduce using rule 99 (statement -> expression DOT statement .)
    DATE            reduce using rule 99 (statement -> expression DOT statement .)
    BOOLEAN         reduce using rule 99 (statement -> expression DOT statement .)
    CHAR            reduce using rule 99 (statement -> expression DOT statement .)
    STRING          reduce using rule 99 (statement -> expression DOT statement .)
    REAL            reduce using rule 99 (statement -> expression DOT statement .)
    INTEGER         reduce using rule 99 (statement -> expression DOT statement .)
    $end            reduce using rule 99 (statement -> expression DOT statement .)
    UNTIL           reduce using rule 99 (statement -> expression DOT statement .)
    ENDWHILE        reduce using rule 99 (statement -> expression DOT statement .)
    ENDPROCEDURE    reduce using rule 99 (statement -> expression DOT statement .)
    ENDTYPE         reduce using rule 99 (statement -> expression DOT statement .)
    ELSE            reduce using rule 99 (statement -> expression DOT statement .)
    ENDIF           reduce using rule 99 (statement -> expression DOT statement .)
    ENDFUNCTION     reduce using rule 99 (statement -> expression DOT statement .)
    SEMICOLON       reduce using rule 99 (statement -> expression DOT statement .)
    NEXT            reduce using rule 99 (statement -> expression DOT statement .)


state 99

    (42) expression -> expression OR expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 42 (expression -> expression OR expression .)
    OR              reduce using rule 42 (expression -> expression OR expression .)
    AND             reduce using rule 42 (expression -> expression OR expression .)
    CONNECT         reduce using rule 42 (expression -> expression OR expression .)
    DELETE          reduce using rule 42 (expression -> expression OR expression .)
    DECLARE         reduce using rule 42 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 42 (expression -> expression OR expression .)
    ID              reduce using rule 42 (expression -> expression OR expression .)
    INPUT           reduce using rule 42 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 42 (expression -> expression OR expression .)
    IF              reduce using rule 42 (expression -> expression OR expression .)
    CASE            reduce using rule 42 (expression -> expression OR expression .)
    FOR             reduce using rule 42 (expression -> expression OR expression .)
    REPEAT          reduce using rule 42 (expression -> expression OR expression .)
    WHILE           reduce using rule 42 (expression -> expression OR expression .)
    PROCEDURE       reduce using rule 42 (expression -> expression OR expression .)
    CALL            reduce using rule 42 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 42 (expression -> expression OR expression .)
    RETURN          reduce using rule 42 (expression -> expression OR expression .)
    OPENFILE        reduce using rule 42 (expression -> expression OR expression .)
    READFILE        reduce using rule 42 (expression -> expression OR expression .)
    WRITEFILE       reduce using rule 42 (expression -> expression OR expression .)
    CLOSEFILE       reduce using rule 42 (expression -> expression OR expression .)
    SEEK            reduce using rule 42 (expression -> expression OR expression .)
    TYPE            reduce using rule 42 (expression -> expression OR expression .)
    PASS            reduce using rule 42 (expression -> expression OR expression .)
    IMPORT          reduce using rule 42 (expression -> expression OR expression .)
    PRIVATE         reduce using rule 42 (expression -> expression OR expression .)
    PUBLIC          reduce using rule 42 (expression -> expression OR expression .)
    NOT             reduce using rule 42 (expression -> expression OR expression .)
    LEFT_PAREN      reduce using rule 42 (expression -> expression OR expression .)
    DATE            reduce using rule 42 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 42 (expression -> expression OR expression .)
    CHAR            reduce using rule 42 (expression -> expression OR expression .)
    STRING          reduce using rule 42 (expression -> expression OR expression .)
    REAL            reduce using rule 42 (expression -> expression OR expression .)
    INTEGER         reduce using rule 42 (expression -> expression OR expression .)
    $end            reduce using rule 42 (expression -> expression OR expression .)
    COMMA           reduce using rule 42 (expression -> expression OR expression .)
    UNTIL           reduce using rule 42 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 42 (expression -> expression OR expression .)
    ENDPROCEDURE    reduce using rule 42 (expression -> expression OR expression .)
    ENDTYPE         reduce using rule 42 (expression -> expression OR expression .)
    ELSE            reduce using rule 42 (expression -> expression OR expression .)
    ENDIF           reduce using rule 42 (expression -> expression OR expression .)
    ENDFUNCTION     reduce using rule 42 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression OR expression .)
    NEXT            reduce using rule 42 (expression -> expression OR expression .)
    THEN            reduce using rule 42 (expression -> expression OR expression .)
    DO              reduce using rule 42 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 42 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 42 (expression -> expression OR expression .)
    TO              reduce using rule 42 (expression -> expression OR expression .)
    COLON           reduce using rule 42 (expression -> expression OR expression .)
    STEP            reduce using rule 42 (expression -> expression OR expression .)
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! EQUAL           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! N_DIV           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 100

    (43) expression -> expression AND expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 43 (expression -> expression AND expression .)
    AND             reduce using rule 43 (expression -> expression AND expression .)
    CONNECT         reduce using rule 43 (expression -> expression AND expression .)
    DELETE          reduce using rule 43 (expression -> expression AND expression .)
    DECLARE         reduce using rule 43 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 43 (expression -> expression AND expression .)
    ID              reduce using rule 43 (expression -> expression AND expression .)
    INPUT           reduce using rule 43 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 43 (expression -> expression AND expression .)
    IF              reduce using rule 43 (expression -> expression AND expression .)
    CASE            reduce using rule 43 (expression -> expression AND expression .)
    FOR             reduce using rule 43 (expression -> expression AND expression .)
    REPEAT          reduce using rule 43 (expression -> expression AND expression .)
    WHILE           reduce using rule 43 (expression -> expression AND expression .)
    PROCEDURE       reduce using rule 43 (expression -> expression AND expression .)
    CALL            reduce using rule 43 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 43 (expression -> expression AND expression .)
    RETURN          reduce using rule 43 (expression -> expression AND expression .)
    OPENFILE        reduce using rule 43 (expression -> expression AND expression .)
    READFILE        reduce using rule 43 (expression -> expression AND expression .)
    WRITEFILE       reduce using rule 43 (expression -> expression AND expression .)
    CLOSEFILE       reduce using rule 43 (expression -> expression AND expression .)
    SEEK            reduce using rule 43 (expression -> expression AND expression .)
    TYPE            reduce using rule 43 (expression -> expression AND expression .)
    PASS            reduce using rule 43 (expression -> expression AND expression .)
    IMPORT          reduce using rule 43 (expression -> expression AND expression .)
    PRIVATE         reduce using rule 43 (expression -> expression AND expression .)
    PUBLIC          reduce using rule 43 (expression -> expression AND expression .)
    NOT             reduce using rule 43 (expression -> expression AND expression .)
    LEFT_PAREN      reduce using rule 43 (expression -> expression AND expression .)
    DATE            reduce using rule 43 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 43 (expression -> expression AND expression .)
    CHAR            reduce using rule 43 (expression -> expression AND expression .)
    STRING          reduce using rule 43 (expression -> expression AND expression .)
    REAL            reduce using rule 43 (expression -> expression AND expression .)
    INTEGER         reduce using rule 43 (expression -> expression AND expression .)
    $end            reduce using rule 43 (expression -> expression AND expression .)
    COMMA           reduce using rule 43 (expression -> expression AND expression .)
    UNTIL           reduce using rule 43 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 43 (expression -> expression AND expression .)
    ENDPROCEDURE    reduce using rule 43 (expression -> expression AND expression .)
    ENDTYPE         reduce using rule 43 (expression -> expression AND expression .)
    ELSE            reduce using rule 43 (expression -> expression AND expression .)
    ENDIF           reduce using rule 43 (expression -> expression AND expression .)
    ENDFUNCTION     reduce using rule 43 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression AND expression .)
    NEXT            reduce using rule 43 (expression -> expression AND expression .)
    THEN            reduce using rule 43 (expression -> expression AND expression .)
    DO              reduce using rule 43 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 43 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 43 (expression -> expression AND expression .)
    TO              reduce using rule 43 (expression -> expression AND expression .)
    COLON           reduce using rule 43 (expression -> expression AND expression .)
    STEP            reduce using rule 43 (expression -> expression AND expression .)
    OR              shift and go to state 47
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! OR              [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! N_DIV           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 48 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 101

    (45) expression -> expression EQUAL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 45 (expression -> expression EQUAL expression .)
    OR              reduce using rule 45 (expression -> expression EQUAL expression .)
    AND             reduce using rule 45 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 45 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 45 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 45 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 45 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 45 (expression -> expression EQUAL expression .)
    CONNECT         reduce using rule 45 (expression -> expression EQUAL expression .)
    DELETE          reduce using rule 45 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 45 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 45 (expression -> expression EQUAL expression .)
    ID              reduce using rule 45 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 45 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 45 (expression -> expression EQUAL expression .)
    IF              reduce using rule 45 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 45 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 45 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 45 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 45 (expression -> expression EQUAL expression .)
    PROCEDURE       reduce using rule 45 (expression -> expression EQUAL expression .)
    CALL            reduce using rule 45 (expression -> expression EQUAL expression .)
    FUNCTION        reduce using rule 45 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 45 (expression -> expression EQUAL expression .)
    OPENFILE        reduce using rule 45 (expression -> expression EQUAL expression .)
    READFILE        reduce using rule 45 (expression -> expression EQUAL expression .)
    WRITEFILE       reduce using rule 45 (expression -> expression EQUAL expression .)
    CLOSEFILE       reduce using rule 45 (expression -> expression EQUAL expression .)
    SEEK            reduce using rule 45 (expression -> expression EQUAL expression .)
    TYPE            reduce using rule 45 (expression -> expression EQUAL expression .)
    PASS            reduce using rule 45 (expression -> expression EQUAL expression .)
    IMPORT          reduce using rule 45 (expression -> expression EQUAL expression .)
    PRIVATE         reduce using rule 45 (expression -> expression EQUAL expression .)
    PUBLIC          reduce using rule 45 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 45 (expression -> expression EQUAL expression .)
    LEFT_PAREN      reduce using rule 45 (expression -> expression EQUAL expression .)
    DATE            reduce using rule 45 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 45 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 45 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 45 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 45 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 45 (expression -> expression EQUAL expression .)
    $end            reduce using rule 45 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 45 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 45 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 45 (expression -> expression EQUAL expression .)
    ENDPROCEDURE    reduce using rule 45 (expression -> expression EQUAL expression .)
    ENDTYPE         reduce using rule 45 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 45 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 45 (expression -> expression EQUAL expression .)
    ENDFUNCTION     reduce using rule 45 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 45 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 45 (expression -> expression EQUAL expression .)
    DO              reduce using rule 45 (expression -> expression EQUAL expression .)
    RIGHT_PAREN     reduce using rule 45 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 45 (expression -> expression EQUAL expression .)
    TO              reduce using rule 45 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 45 (expression -> expression EQUAL expression .)
    STEP            reduce using rule 45 (expression -> expression EQUAL expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! MOD             [ reduce using rule 45 (expression -> expression EQUAL expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression EQUAL expression .) ]
  ! MUL             [ reduce using rule 45 (expression -> expression EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 45 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression EQUAL expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 102

    (46) expression -> expression NOT_EQUAL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    CONNECT         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    DELETE          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    PROCEDURE       reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    CALL            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    FUNCTION        reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    RETURN          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    OPENFILE        reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    READFILE        reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    WRITEFILE       reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    CLOSEFILE       reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    SEEK            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    TYPE            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    PASS            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    IMPORT          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    PRIVATE         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    PUBLIC          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    LEFT_PAREN      reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    DATE            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ENDTYPE         reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    ENDFUNCTION     reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    DO              reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    STEP            reduce using rule 46 (expression -> expression NOT_EQUAL expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! MOD             [ reduce using rule 46 (expression -> expression NOT_EQUAL expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression NOT_EQUAL expression .) ]
  ! MUL             [ reduce using rule 46 (expression -> expression NOT_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 46 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 103

    (47) expression -> expression LESS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 47 (expression -> expression LESS expression .)
    OR              reduce using rule 47 (expression -> expression LESS expression .)
    AND             reduce using rule 47 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 47 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> expression LESS expression .)
    LESS            reduce using rule 47 (expression -> expression LESS expression .)
    GREATER         reduce using rule 47 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 47 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 47 (expression -> expression LESS expression .)
    CONNECT         reduce using rule 47 (expression -> expression LESS expression .)
    DELETE          reduce using rule 47 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 47 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 47 (expression -> expression LESS expression .)
    ID              reduce using rule 47 (expression -> expression LESS expression .)
    INPUT           reduce using rule 47 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 47 (expression -> expression LESS expression .)
    IF              reduce using rule 47 (expression -> expression LESS expression .)
    CASE            reduce using rule 47 (expression -> expression LESS expression .)
    FOR             reduce using rule 47 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 47 (expression -> expression LESS expression .)
    WHILE           reduce using rule 47 (expression -> expression LESS expression .)
    PROCEDURE       reduce using rule 47 (expression -> expression LESS expression .)
    CALL            reduce using rule 47 (expression -> expression LESS expression .)
    FUNCTION        reduce using rule 47 (expression -> expression LESS expression .)
    RETURN          reduce using rule 47 (expression -> expression LESS expression .)
    OPENFILE        reduce using rule 47 (expression -> expression LESS expression .)
    READFILE        reduce using rule 47 (expression -> expression LESS expression .)
    WRITEFILE       reduce using rule 47 (expression -> expression LESS expression .)
    CLOSEFILE       reduce using rule 47 (expression -> expression LESS expression .)
    SEEK            reduce using rule 47 (expression -> expression LESS expression .)
    TYPE            reduce using rule 47 (expression -> expression LESS expression .)
    PASS            reduce using rule 47 (expression -> expression LESS expression .)
    IMPORT          reduce using rule 47 (expression -> expression LESS expression .)
    PRIVATE         reduce using rule 47 (expression -> expression LESS expression .)
    PUBLIC          reduce using rule 47 (expression -> expression LESS expression .)
    NOT             reduce using rule 47 (expression -> expression LESS expression .)
    LEFT_PAREN      reduce using rule 47 (expression -> expression LESS expression .)
    DATE            reduce using rule 47 (expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 47 (expression -> expression LESS expression .)
    CHAR            reduce using rule 47 (expression -> expression LESS expression .)
    STRING          reduce using rule 47 (expression -> expression LESS expression .)
    REAL            reduce using rule 47 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 47 (expression -> expression LESS expression .)
    $end            reduce using rule 47 (expression -> expression LESS expression .)
    COMMA           reduce using rule 47 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 47 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 47 (expression -> expression LESS expression .)
    ENDPROCEDURE    reduce using rule 47 (expression -> expression LESS expression .)
    ENDTYPE         reduce using rule 47 (expression -> expression LESS expression .)
    ELSE            reduce using rule 47 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 47 (expression -> expression LESS expression .)
    ENDFUNCTION     reduce using rule 47 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression LESS expression .)
    NEXT            reduce using rule 47 (expression -> expression LESS expression .)
    THEN            reduce using rule 47 (expression -> expression LESS expression .)
    DO              reduce using rule 47 (expression -> expression LESS expression .)
    RIGHT_PAREN     reduce using rule 47 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 47 (expression -> expression LESS expression .)
    TO              reduce using rule 47 (expression -> expression LESS expression .)
    COLON           reduce using rule 47 (expression -> expression LESS expression .)
    STEP            reduce using rule 47 (expression -> expression LESS expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! MOD             [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! MUL             [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! N_DIV           [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 104

    (48) expression -> expression GREATER expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 48 (expression -> expression GREATER expression .)
    OR              reduce using rule 48 (expression -> expression GREATER expression .)
    AND             reduce using rule 48 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 48 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> expression GREATER expression .)
    LESS            reduce using rule 48 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 48 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 48 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 48 (expression -> expression GREATER expression .)
    CONNECT         reduce using rule 48 (expression -> expression GREATER expression .)
    DELETE          reduce using rule 48 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 48 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 48 (expression -> expression GREATER expression .)
    ID              reduce using rule 48 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 48 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 48 (expression -> expression GREATER expression .)
    IF              reduce using rule 48 (expression -> expression GREATER expression .)
    CASE            reduce using rule 48 (expression -> expression GREATER expression .)
    FOR             reduce using rule 48 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 48 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 48 (expression -> expression GREATER expression .)
    PROCEDURE       reduce using rule 48 (expression -> expression GREATER expression .)
    CALL            reduce using rule 48 (expression -> expression GREATER expression .)
    FUNCTION        reduce using rule 48 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 48 (expression -> expression GREATER expression .)
    OPENFILE        reduce using rule 48 (expression -> expression GREATER expression .)
    READFILE        reduce using rule 48 (expression -> expression GREATER expression .)
    WRITEFILE       reduce using rule 48 (expression -> expression GREATER expression .)
    CLOSEFILE       reduce using rule 48 (expression -> expression GREATER expression .)
    SEEK            reduce using rule 48 (expression -> expression GREATER expression .)
    TYPE            reduce using rule 48 (expression -> expression GREATER expression .)
    PASS            reduce using rule 48 (expression -> expression GREATER expression .)
    IMPORT          reduce using rule 48 (expression -> expression GREATER expression .)
    PRIVATE         reduce using rule 48 (expression -> expression GREATER expression .)
    PUBLIC          reduce using rule 48 (expression -> expression GREATER expression .)
    NOT             reduce using rule 48 (expression -> expression GREATER expression .)
    LEFT_PAREN      reduce using rule 48 (expression -> expression GREATER expression .)
    DATE            reduce using rule 48 (expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 48 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 48 (expression -> expression GREATER expression .)
    STRING          reduce using rule 48 (expression -> expression GREATER expression .)
    REAL            reduce using rule 48 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 48 (expression -> expression GREATER expression .)
    $end            reduce using rule 48 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 48 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 48 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 48 (expression -> expression GREATER expression .)
    ENDPROCEDURE    reduce using rule 48 (expression -> expression GREATER expression .)
    ENDTYPE         reduce using rule 48 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 48 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 48 (expression -> expression GREATER expression .)
    ENDFUNCTION     reduce using rule 48 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 48 (expression -> expression GREATER expression .)
    THEN            reduce using rule 48 (expression -> expression GREATER expression .)
    DO              reduce using rule 48 (expression -> expression GREATER expression .)
    RIGHT_PAREN     reduce using rule 48 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 48 (expression -> expression GREATER expression .)
    TO              reduce using rule 48 (expression -> expression GREATER expression .)
    COLON           reduce using rule 48 (expression -> expression GREATER expression .)
    STEP            reduce using rule 48 (expression -> expression GREATER expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! MOD             [ reduce using rule 48 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression GREATER expression .) ]
  ! MUL             [ reduce using rule 48 (expression -> expression GREATER expression .) ]
  ! N_DIV           [ reduce using rule 48 (expression -> expression GREATER expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 105

    (49) expression -> expression LESS_EQUAL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    CONNECT         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    DELETE          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    PROCEDURE       reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    CALL            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    FUNCTION        reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    OPENFILE        reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    READFILE        reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    WRITEFILE       reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    CLOSEFILE       reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    SEEK            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    TYPE            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    PASS            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    IMPORT          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    PRIVATE         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    PUBLIC          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    LEFT_PAREN      reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    DATE            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ENDTYPE         reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    ENDFUNCTION     reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    DO              reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    STEP            reduce using rule 49 (expression -> expression LESS_EQUAL expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! MOD             [ reduce using rule 49 (expression -> expression LESS_EQUAL expression .) ]
  ! DIV             [ reduce using rule 49 (expression -> expression LESS_EQUAL expression .) ]
  ! MUL             [ reduce using rule 49 (expression -> expression LESS_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 49 (expression -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression LESS_EQUAL expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 106

    (50) expression -> expression GREATER_EQUAL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    CONNECT         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    DELETE          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    PROCEDURE       reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    CALL            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    FUNCTION        reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    OPENFILE        reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    READFILE        reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    WRITEFILE       reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    CLOSEFILE       reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    SEEK            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    TYPE            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    PASS            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    IMPORT          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    PRIVATE         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    PUBLIC          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PAREN      reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    DATE            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ENDTYPE         reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    ENDFUNCTION     reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    DO              reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    STEP            reduce using rule 50 (expression -> expression GREATER_EQUAL expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60

  ! MOD             [ reduce using rule 50 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression GREATER_EQUAL expression .) ]
  ! MUL             [ reduce using rule 50 (expression -> expression GREATER_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 50 (expression -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression GREATER_EQUAL expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 107

    (51) expression -> expression MOD expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 51 (expression -> expression MOD expression .)
    OR              reduce using rule 51 (expression -> expression MOD expression .)
    AND             reduce using rule 51 (expression -> expression MOD expression .)
    EQUAL           reduce using rule 51 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 51 (expression -> expression MOD expression .)
    LESS            reduce using rule 51 (expression -> expression MOD expression .)
    GREATER         reduce using rule 51 (expression -> expression MOD expression .)
    LESS_EQUAL      reduce using rule 51 (expression -> expression MOD expression .)
    GREATER_EQUAL   reduce using rule 51 (expression -> expression MOD expression .)
    MOD             reduce using rule 51 (expression -> expression MOD expression .)
    DIV             reduce using rule 51 (expression -> expression MOD expression .)
    MUL             reduce using rule 51 (expression -> expression MOD expression .)
    N_DIV           reduce using rule 51 (expression -> expression MOD expression .)
    PLUS            reduce using rule 51 (expression -> expression MOD expression .)
    MINUS           reduce using rule 51 (expression -> expression MOD expression .)
    CONNECT         reduce using rule 51 (expression -> expression MOD expression .)
    DELETE          reduce using rule 51 (expression -> expression MOD expression .)
    DECLARE         reduce using rule 51 (expression -> expression MOD expression .)
    CONSTANT        reduce using rule 51 (expression -> expression MOD expression .)
    ID              reduce using rule 51 (expression -> expression MOD expression .)
    INPUT           reduce using rule 51 (expression -> expression MOD expression .)
    OUTPUT          reduce using rule 51 (expression -> expression MOD expression .)
    IF              reduce using rule 51 (expression -> expression MOD expression .)
    CASE            reduce using rule 51 (expression -> expression MOD expression .)
    FOR             reduce using rule 51 (expression -> expression MOD expression .)
    REPEAT          reduce using rule 51 (expression -> expression MOD expression .)
    WHILE           reduce using rule 51 (expression -> expression MOD expression .)
    PROCEDURE       reduce using rule 51 (expression -> expression MOD expression .)
    CALL            reduce using rule 51 (expression -> expression MOD expression .)
    FUNCTION        reduce using rule 51 (expression -> expression MOD expression .)
    RETURN          reduce using rule 51 (expression -> expression MOD expression .)
    OPENFILE        reduce using rule 51 (expression -> expression MOD expression .)
    READFILE        reduce using rule 51 (expression -> expression MOD expression .)
    WRITEFILE       reduce using rule 51 (expression -> expression MOD expression .)
    CLOSEFILE       reduce using rule 51 (expression -> expression MOD expression .)
    SEEK            reduce using rule 51 (expression -> expression MOD expression .)
    TYPE            reduce using rule 51 (expression -> expression MOD expression .)
    PASS            reduce using rule 51 (expression -> expression MOD expression .)
    IMPORT          reduce using rule 51 (expression -> expression MOD expression .)
    PRIVATE         reduce using rule 51 (expression -> expression MOD expression .)
    PUBLIC          reduce using rule 51 (expression -> expression MOD expression .)
    NOT             reduce using rule 51 (expression -> expression MOD expression .)
    LEFT_PAREN      reduce using rule 51 (expression -> expression MOD expression .)
    DATE            reduce using rule 51 (expression -> expression MOD expression .)
    BOOLEAN         reduce using rule 51 (expression -> expression MOD expression .)
    CHAR            reduce using rule 51 (expression -> expression MOD expression .)
    STRING          reduce using rule 51 (expression -> expression MOD expression .)
    REAL            reduce using rule 51 (expression -> expression MOD expression .)
    INTEGER         reduce using rule 51 (expression -> expression MOD expression .)
    $end            reduce using rule 51 (expression -> expression MOD expression .)
    COMMA           reduce using rule 51 (expression -> expression MOD expression .)
    UNTIL           reduce using rule 51 (expression -> expression MOD expression .)
    ENDWHILE        reduce using rule 51 (expression -> expression MOD expression .)
    ENDPROCEDURE    reduce using rule 51 (expression -> expression MOD expression .)
    ENDTYPE         reduce using rule 51 (expression -> expression MOD expression .)
    ELSE            reduce using rule 51 (expression -> expression MOD expression .)
    ENDIF           reduce using rule 51 (expression -> expression MOD expression .)
    ENDFUNCTION     reduce using rule 51 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression MOD expression .)
    NEXT            reduce using rule 51 (expression -> expression MOD expression .)
    THEN            reduce using rule 51 (expression -> expression MOD expression .)
    DO              reduce using rule 51 (expression -> expression MOD expression .)
    RIGHT_PAREN     reduce using rule 51 (expression -> expression MOD expression .)
    RIGHT_SQUARE    reduce using rule 51 (expression -> expression MOD expression .)
    TO              reduce using rule 51 (expression -> expression MOD expression .)
    COLON           reduce using rule 51 (expression -> expression MOD expression .)
    STEP            reduce using rule 51 (expression -> expression MOD expression .)

  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 108

    (52) expression -> expression DIV expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 52 (expression -> expression DIV expression .)
    OR              reduce using rule 52 (expression -> expression DIV expression .)
    AND             reduce using rule 52 (expression -> expression DIV expression .)
    EQUAL           reduce using rule 52 (expression -> expression DIV expression .)
    NOT_EQUAL       reduce using rule 52 (expression -> expression DIV expression .)
    LESS            reduce using rule 52 (expression -> expression DIV expression .)
    GREATER         reduce using rule 52 (expression -> expression DIV expression .)
    LESS_EQUAL      reduce using rule 52 (expression -> expression DIV expression .)
    GREATER_EQUAL   reduce using rule 52 (expression -> expression DIV expression .)
    MOD             reduce using rule 52 (expression -> expression DIV expression .)
    DIV             reduce using rule 52 (expression -> expression DIV expression .)
    MUL             reduce using rule 52 (expression -> expression DIV expression .)
    N_DIV           reduce using rule 52 (expression -> expression DIV expression .)
    PLUS            reduce using rule 52 (expression -> expression DIV expression .)
    MINUS           reduce using rule 52 (expression -> expression DIV expression .)
    CONNECT         reduce using rule 52 (expression -> expression DIV expression .)
    DELETE          reduce using rule 52 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 52 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 52 (expression -> expression DIV expression .)
    ID              reduce using rule 52 (expression -> expression DIV expression .)
    INPUT           reduce using rule 52 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 52 (expression -> expression DIV expression .)
    IF              reduce using rule 52 (expression -> expression DIV expression .)
    CASE            reduce using rule 52 (expression -> expression DIV expression .)
    FOR             reduce using rule 52 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 52 (expression -> expression DIV expression .)
    WHILE           reduce using rule 52 (expression -> expression DIV expression .)
    PROCEDURE       reduce using rule 52 (expression -> expression DIV expression .)
    CALL            reduce using rule 52 (expression -> expression DIV expression .)
    FUNCTION        reduce using rule 52 (expression -> expression DIV expression .)
    RETURN          reduce using rule 52 (expression -> expression DIV expression .)
    OPENFILE        reduce using rule 52 (expression -> expression DIV expression .)
    READFILE        reduce using rule 52 (expression -> expression DIV expression .)
    WRITEFILE       reduce using rule 52 (expression -> expression DIV expression .)
    CLOSEFILE       reduce using rule 52 (expression -> expression DIV expression .)
    SEEK            reduce using rule 52 (expression -> expression DIV expression .)
    TYPE            reduce using rule 52 (expression -> expression DIV expression .)
    PASS            reduce using rule 52 (expression -> expression DIV expression .)
    IMPORT          reduce using rule 52 (expression -> expression DIV expression .)
    PRIVATE         reduce using rule 52 (expression -> expression DIV expression .)
    PUBLIC          reduce using rule 52 (expression -> expression DIV expression .)
    NOT             reduce using rule 52 (expression -> expression DIV expression .)
    LEFT_PAREN      reduce using rule 52 (expression -> expression DIV expression .)
    DATE            reduce using rule 52 (expression -> expression DIV expression .)
    BOOLEAN         reduce using rule 52 (expression -> expression DIV expression .)
    CHAR            reduce using rule 52 (expression -> expression DIV expression .)
    STRING          reduce using rule 52 (expression -> expression DIV expression .)
    REAL            reduce using rule 52 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 52 (expression -> expression DIV expression .)
    $end            reduce using rule 52 (expression -> expression DIV expression .)
    COMMA           reduce using rule 52 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 52 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 52 (expression -> expression DIV expression .)
    ENDPROCEDURE    reduce using rule 52 (expression -> expression DIV expression .)
    ENDTYPE         reduce using rule 52 (expression -> expression DIV expression .)
    ELSE            reduce using rule 52 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 52 (expression -> expression DIV expression .)
    ENDFUNCTION     reduce using rule 52 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression DIV expression .)
    NEXT            reduce using rule 52 (expression -> expression DIV expression .)
    THEN            reduce using rule 52 (expression -> expression DIV expression .)
    DO              reduce using rule 52 (expression -> expression DIV expression .)
    RIGHT_PAREN     reduce using rule 52 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 52 (expression -> expression DIV expression .)
    TO              reduce using rule 52 (expression -> expression DIV expression .)
    COLON           reduce using rule 52 (expression -> expression DIV expression .)
    STEP            reduce using rule 52 (expression -> expression DIV expression .)

  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 109

    (53) expression -> expression MUL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 53 (expression -> expression MUL expression .)
    OR              reduce using rule 53 (expression -> expression MUL expression .)
    AND             reduce using rule 53 (expression -> expression MUL expression .)
    EQUAL           reduce using rule 53 (expression -> expression MUL expression .)
    NOT_EQUAL       reduce using rule 53 (expression -> expression MUL expression .)
    LESS            reduce using rule 53 (expression -> expression MUL expression .)
    GREATER         reduce using rule 53 (expression -> expression MUL expression .)
    LESS_EQUAL      reduce using rule 53 (expression -> expression MUL expression .)
    GREATER_EQUAL   reduce using rule 53 (expression -> expression MUL expression .)
    MOD             reduce using rule 53 (expression -> expression MUL expression .)
    DIV             reduce using rule 53 (expression -> expression MUL expression .)
    MUL             reduce using rule 53 (expression -> expression MUL expression .)
    N_DIV           reduce using rule 53 (expression -> expression MUL expression .)
    PLUS            reduce using rule 53 (expression -> expression MUL expression .)
    MINUS           reduce using rule 53 (expression -> expression MUL expression .)
    CONNECT         reduce using rule 53 (expression -> expression MUL expression .)
    DELETE          reduce using rule 53 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 53 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 53 (expression -> expression MUL expression .)
    ID              reduce using rule 53 (expression -> expression MUL expression .)
    INPUT           reduce using rule 53 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 53 (expression -> expression MUL expression .)
    IF              reduce using rule 53 (expression -> expression MUL expression .)
    CASE            reduce using rule 53 (expression -> expression MUL expression .)
    FOR             reduce using rule 53 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 53 (expression -> expression MUL expression .)
    WHILE           reduce using rule 53 (expression -> expression MUL expression .)
    PROCEDURE       reduce using rule 53 (expression -> expression MUL expression .)
    CALL            reduce using rule 53 (expression -> expression MUL expression .)
    FUNCTION        reduce using rule 53 (expression -> expression MUL expression .)
    RETURN          reduce using rule 53 (expression -> expression MUL expression .)
    OPENFILE        reduce using rule 53 (expression -> expression MUL expression .)
    READFILE        reduce using rule 53 (expression -> expression MUL expression .)
    WRITEFILE       reduce using rule 53 (expression -> expression MUL expression .)
    CLOSEFILE       reduce using rule 53 (expression -> expression MUL expression .)
    SEEK            reduce using rule 53 (expression -> expression MUL expression .)
    TYPE            reduce using rule 53 (expression -> expression MUL expression .)
    PASS            reduce using rule 53 (expression -> expression MUL expression .)
    IMPORT          reduce using rule 53 (expression -> expression MUL expression .)
    PRIVATE         reduce using rule 53 (expression -> expression MUL expression .)
    PUBLIC          reduce using rule 53 (expression -> expression MUL expression .)
    NOT             reduce using rule 53 (expression -> expression MUL expression .)
    LEFT_PAREN      reduce using rule 53 (expression -> expression MUL expression .)
    DATE            reduce using rule 53 (expression -> expression MUL expression .)
    BOOLEAN         reduce using rule 53 (expression -> expression MUL expression .)
    CHAR            reduce using rule 53 (expression -> expression MUL expression .)
    STRING          reduce using rule 53 (expression -> expression MUL expression .)
    REAL            reduce using rule 53 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 53 (expression -> expression MUL expression .)
    $end            reduce using rule 53 (expression -> expression MUL expression .)
    COMMA           reduce using rule 53 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 53 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 53 (expression -> expression MUL expression .)
    ENDPROCEDURE    reduce using rule 53 (expression -> expression MUL expression .)
    ENDTYPE         reduce using rule 53 (expression -> expression MUL expression .)
    ELSE            reduce using rule 53 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 53 (expression -> expression MUL expression .)
    ENDFUNCTION     reduce using rule 53 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression MUL expression .)
    NEXT            reduce using rule 53 (expression -> expression MUL expression .)
    THEN            reduce using rule 53 (expression -> expression MUL expression .)
    DO              reduce using rule 53 (expression -> expression MUL expression .)
    RIGHT_PAREN     reduce using rule 53 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 53 (expression -> expression MUL expression .)
    TO              reduce using rule 53 (expression -> expression MUL expression .)
    COLON           reduce using rule 53 (expression -> expression MUL expression .)
    STEP            reduce using rule 53 (expression -> expression MUL expression .)

  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 110

    (54) expression -> expression N_DIV expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 54 (expression -> expression N_DIV expression .)
    OR              reduce using rule 54 (expression -> expression N_DIV expression .)
    AND             reduce using rule 54 (expression -> expression N_DIV expression .)
    EQUAL           reduce using rule 54 (expression -> expression N_DIV expression .)
    NOT_EQUAL       reduce using rule 54 (expression -> expression N_DIV expression .)
    LESS            reduce using rule 54 (expression -> expression N_DIV expression .)
    GREATER         reduce using rule 54 (expression -> expression N_DIV expression .)
    LESS_EQUAL      reduce using rule 54 (expression -> expression N_DIV expression .)
    GREATER_EQUAL   reduce using rule 54 (expression -> expression N_DIV expression .)
    MOD             reduce using rule 54 (expression -> expression N_DIV expression .)
    DIV             reduce using rule 54 (expression -> expression N_DIV expression .)
    MUL             reduce using rule 54 (expression -> expression N_DIV expression .)
    N_DIV           reduce using rule 54 (expression -> expression N_DIV expression .)
    PLUS            reduce using rule 54 (expression -> expression N_DIV expression .)
    MINUS           reduce using rule 54 (expression -> expression N_DIV expression .)
    CONNECT         reduce using rule 54 (expression -> expression N_DIV expression .)
    DELETE          reduce using rule 54 (expression -> expression N_DIV expression .)
    DECLARE         reduce using rule 54 (expression -> expression N_DIV expression .)
    CONSTANT        reduce using rule 54 (expression -> expression N_DIV expression .)
    ID              reduce using rule 54 (expression -> expression N_DIV expression .)
    INPUT           reduce using rule 54 (expression -> expression N_DIV expression .)
    OUTPUT          reduce using rule 54 (expression -> expression N_DIV expression .)
    IF              reduce using rule 54 (expression -> expression N_DIV expression .)
    CASE            reduce using rule 54 (expression -> expression N_DIV expression .)
    FOR             reduce using rule 54 (expression -> expression N_DIV expression .)
    REPEAT          reduce using rule 54 (expression -> expression N_DIV expression .)
    WHILE           reduce using rule 54 (expression -> expression N_DIV expression .)
    PROCEDURE       reduce using rule 54 (expression -> expression N_DIV expression .)
    CALL            reduce using rule 54 (expression -> expression N_DIV expression .)
    FUNCTION        reduce using rule 54 (expression -> expression N_DIV expression .)
    RETURN          reduce using rule 54 (expression -> expression N_DIV expression .)
    OPENFILE        reduce using rule 54 (expression -> expression N_DIV expression .)
    READFILE        reduce using rule 54 (expression -> expression N_DIV expression .)
    WRITEFILE       reduce using rule 54 (expression -> expression N_DIV expression .)
    CLOSEFILE       reduce using rule 54 (expression -> expression N_DIV expression .)
    SEEK            reduce using rule 54 (expression -> expression N_DIV expression .)
    TYPE            reduce using rule 54 (expression -> expression N_DIV expression .)
    PASS            reduce using rule 54 (expression -> expression N_DIV expression .)
    IMPORT          reduce using rule 54 (expression -> expression N_DIV expression .)
    PRIVATE         reduce using rule 54 (expression -> expression N_DIV expression .)
    PUBLIC          reduce using rule 54 (expression -> expression N_DIV expression .)
    NOT             reduce using rule 54 (expression -> expression N_DIV expression .)
    LEFT_PAREN      reduce using rule 54 (expression -> expression N_DIV expression .)
    DATE            reduce using rule 54 (expression -> expression N_DIV expression .)
    BOOLEAN         reduce using rule 54 (expression -> expression N_DIV expression .)
    CHAR            reduce using rule 54 (expression -> expression N_DIV expression .)
    STRING          reduce using rule 54 (expression -> expression N_DIV expression .)
    REAL            reduce using rule 54 (expression -> expression N_DIV expression .)
    INTEGER         reduce using rule 54 (expression -> expression N_DIV expression .)
    $end            reduce using rule 54 (expression -> expression N_DIV expression .)
    COMMA           reduce using rule 54 (expression -> expression N_DIV expression .)
    UNTIL           reduce using rule 54 (expression -> expression N_DIV expression .)
    ENDWHILE        reduce using rule 54 (expression -> expression N_DIV expression .)
    ENDPROCEDURE    reduce using rule 54 (expression -> expression N_DIV expression .)
    ENDTYPE         reduce using rule 54 (expression -> expression N_DIV expression .)
    ELSE            reduce using rule 54 (expression -> expression N_DIV expression .)
    ENDIF           reduce using rule 54 (expression -> expression N_DIV expression .)
    ENDFUNCTION     reduce using rule 54 (expression -> expression N_DIV expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression N_DIV expression .)
    NEXT            reduce using rule 54 (expression -> expression N_DIV expression .)
    THEN            reduce using rule 54 (expression -> expression N_DIV expression .)
    DO              reduce using rule 54 (expression -> expression N_DIV expression .)
    RIGHT_PAREN     reduce using rule 54 (expression -> expression N_DIV expression .)
    RIGHT_SQUARE    reduce using rule 54 (expression -> expression N_DIV expression .)
    TO              reduce using rule 54 (expression -> expression N_DIV expression .)
    COLON           reduce using rule 54 (expression -> expression N_DIV expression .)
    STEP            reduce using rule 54 (expression -> expression N_DIV expression .)

  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 111

    (57) expression -> expression PLUS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 57 (expression -> expression PLUS expression .)
    OR              reduce using rule 57 (expression -> expression PLUS expression .)
    AND             reduce using rule 57 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 57 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 57 (expression -> expression PLUS expression .)
    LESS            reduce using rule 57 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 57 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 57 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 57 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 57 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 57 (expression -> expression PLUS expression .)
    CONNECT         reduce using rule 57 (expression -> expression PLUS expression .)
    DELETE          reduce using rule 57 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 57 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 57 (expression -> expression PLUS expression .)
    ID              reduce using rule 57 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 57 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 57 (expression -> expression PLUS expression .)
    IF              reduce using rule 57 (expression -> expression PLUS expression .)
    CASE            reduce using rule 57 (expression -> expression PLUS expression .)
    FOR             reduce using rule 57 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 57 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 57 (expression -> expression PLUS expression .)
    PROCEDURE       reduce using rule 57 (expression -> expression PLUS expression .)
    CALL            reduce using rule 57 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 57 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 57 (expression -> expression PLUS expression .)
    OPENFILE        reduce using rule 57 (expression -> expression PLUS expression .)
    READFILE        reduce using rule 57 (expression -> expression PLUS expression .)
    WRITEFILE       reduce using rule 57 (expression -> expression PLUS expression .)
    CLOSEFILE       reduce using rule 57 (expression -> expression PLUS expression .)
    SEEK            reduce using rule 57 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 57 (expression -> expression PLUS expression .)
    PASS            reduce using rule 57 (expression -> expression PLUS expression .)
    IMPORT          reduce using rule 57 (expression -> expression PLUS expression .)
    PRIVATE         reduce using rule 57 (expression -> expression PLUS expression .)
    PUBLIC          reduce using rule 57 (expression -> expression PLUS expression .)
    NOT             reduce using rule 57 (expression -> expression PLUS expression .)
    LEFT_PAREN      reduce using rule 57 (expression -> expression PLUS expression .)
    DATE            reduce using rule 57 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 57 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 57 (expression -> expression PLUS expression .)
    STRING          reduce using rule 57 (expression -> expression PLUS expression .)
    REAL            reduce using rule 57 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 57 (expression -> expression PLUS expression .)
    $end            reduce using rule 57 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 57 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 57 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 57 (expression -> expression PLUS expression .)
    ENDPROCEDURE    reduce using rule 57 (expression -> expression PLUS expression .)
    ENDTYPE         reduce using rule 57 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 57 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 57 (expression -> expression PLUS expression .)
    ENDFUNCTION     reduce using rule 57 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 57 (expression -> expression PLUS expression .)
    THEN            reduce using rule 57 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 57 (expression -> expression PLUS expression .)
    DO              reduce using rule 57 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 57 (expression -> expression PLUS expression .)
    TO              reduce using rule 57 (expression -> expression PLUS expression .)
    COLON           reduce using rule 57 (expression -> expression PLUS expression .)
    STEP            reduce using rule 57 (expression -> expression PLUS expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58

  ! MOD             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! N_DIV           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 112

    (58) expression -> expression MINUS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DOT             reduce using rule 58 (expression -> expression MINUS expression .)
    OR              reduce using rule 58 (expression -> expression MINUS expression .)
    AND             reduce using rule 58 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 58 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 58 (expression -> expression MINUS expression .)
    LESS            reduce using rule 58 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 58 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 58 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 58 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 58 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 58 (expression -> expression MINUS expression .)
    CONNECT         reduce using rule 58 (expression -> expression MINUS expression .)
    DELETE          reduce using rule 58 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 58 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 58 (expression -> expression MINUS expression .)
    ID              reduce using rule 58 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 58 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 58 (expression -> expression MINUS expression .)
    IF              reduce using rule 58 (expression -> expression MINUS expression .)
    CASE            reduce using rule 58 (expression -> expression MINUS expression .)
    FOR             reduce using rule 58 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 58 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 58 (expression -> expression MINUS expression .)
    PROCEDURE       reduce using rule 58 (expression -> expression MINUS expression .)
    CALL            reduce using rule 58 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 58 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 58 (expression -> expression MINUS expression .)
    OPENFILE        reduce using rule 58 (expression -> expression MINUS expression .)
    READFILE        reduce using rule 58 (expression -> expression MINUS expression .)
    WRITEFILE       reduce using rule 58 (expression -> expression MINUS expression .)
    CLOSEFILE       reduce using rule 58 (expression -> expression MINUS expression .)
    SEEK            reduce using rule 58 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 58 (expression -> expression MINUS expression .)
    PASS            reduce using rule 58 (expression -> expression MINUS expression .)
    IMPORT          reduce using rule 58 (expression -> expression MINUS expression .)
    PRIVATE         reduce using rule 58 (expression -> expression MINUS expression .)
    PUBLIC          reduce using rule 58 (expression -> expression MINUS expression .)
    NOT             reduce using rule 58 (expression -> expression MINUS expression .)
    LEFT_PAREN      reduce using rule 58 (expression -> expression MINUS expression .)
    DATE            reduce using rule 58 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 58 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 58 (expression -> expression MINUS expression .)
    STRING          reduce using rule 58 (expression -> expression MINUS expression .)
    REAL            reduce using rule 58 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 58 (expression -> expression MINUS expression .)
    $end            reduce using rule 58 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 58 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 58 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 58 (expression -> expression MINUS expression .)
    ENDPROCEDURE    reduce using rule 58 (expression -> expression MINUS expression .)
    ENDTYPE         reduce using rule 58 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 58 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 58 (expression -> expression MINUS expression .)
    ENDFUNCTION     reduce using rule 58 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 58 (expression -> expression MINUS expression .)
    THEN            reduce using rule 58 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 58 (expression -> expression MINUS expression .)
    DO              reduce using rule 58 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 58 (expression -> expression MINUS expression .)
    TO              reduce using rule 58 (expression -> expression MINUS expression .)
    COLON           reduce using rule 58 (expression -> expression MINUS expression .)
    STEP            reduce using rule 58 (expression -> expression MINUS expression .)
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58

  ! MOD             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! N_DIV           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 113

    (59) expression -> expression CONNECT expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    DELETE          reduce using rule 59 (expression -> expression CONNECT expression .)
    DECLARE         reduce using rule 59 (expression -> expression CONNECT expression .)
    CONSTANT        reduce using rule 59 (expression -> expression CONNECT expression .)
    ID              reduce using rule 59 (expression -> expression CONNECT expression .)
    INPUT           reduce using rule 59 (expression -> expression CONNECT expression .)
    OUTPUT          reduce using rule 59 (expression -> expression CONNECT expression .)
    IF              reduce using rule 59 (expression -> expression CONNECT expression .)
    CASE            reduce using rule 59 (expression -> expression CONNECT expression .)
    FOR             reduce using rule 59 (expression -> expression CONNECT expression .)
    REPEAT          reduce using rule 59 (expression -> expression CONNECT expression .)
    WHILE           reduce using rule 59 (expression -> expression CONNECT expression .)
    PROCEDURE       reduce using rule 59 (expression -> expression CONNECT expression .)
    CALL            reduce using rule 59 (expression -> expression CONNECT expression .)
    FUNCTION        reduce using rule 59 (expression -> expression CONNECT expression .)
    RETURN          reduce using rule 59 (expression -> expression CONNECT expression .)
    OPENFILE        reduce using rule 59 (expression -> expression CONNECT expression .)
    READFILE        reduce using rule 59 (expression -> expression CONNECT expression .)
    WRITEFILE       reduce using rule 59 (expression -> expression CONNECT expression .)
    CLOSEFILE       reduce using rule 59 (expression -> expression CONNECT expression .)
    SEEK            reduce using rule 59 (expression -> expression CONNECT expression .)
    TYPE            reduce using rule 59 (expression -> expression CONNECT expression .)
    PASS            reduce using rule 59 (expression -> expression CONNECT expression .)
    IMPORT          reduce using rule 59 (expression -> expression CONNECT expression .)
    PRIVATE         reduce using rule 59 (expression -> expression CONNECT expression .)
    PUBLIC          reduce using rule 59 (expression -> expression CONNECT expression .)
    NOT             reduce using rule 59 (expression -> expression CONNECT expression .)
    LEFT_PAREN      reduce using rule 59 (expression -> expression CONNECT expression .)
    DATE            reduce using rule 59 (expression -> expression CONNECT expression .)
    BOOLEAN         reduce using rule 59 (expression -> expression CONNECT expression .)
    CHAR            reduce using rule 59 (expression -> expression CONNECT expression .)
    STRING          reduce using rule 59 (expression -> expression CONNECT expression .)
    REAL            reduce using rule 59 (expression -> expression CONNECT expression .)
    INTEGER         reduce using rule 59 (expression -> expression CONNECT expression .)
    $end            reduce using rule 59 (expression -> expression CONNECT expression .)
    COMMA           reduce using rule 59 (expression -> expression CONNECT expression .)
    UNTIL           reduce using rule 59 (expression -> expression CONNECT expression .)
    ENDWHILE        reduce using rule 59 (expression -> expression CONNECT expression .)
    ENDPROCEDURE    reduce using rule 59 (expression -> expression CONNECT expression .)
    ENDTYPE         reduce using rule 59 (expression -> expression CONNECT expression .)
    ELSE            reduce using rule 59 (expression -> expression CONNECT expression .)
    ENDIF           reduce using rule 59 (expression -> expression CONNECT expression .)
    ENDFUNCTION     reduce using rule 59 (expression -> expression CONNECT expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression CONNECT expression .)
    NEXT            reduce using rule 59 (expression -> expression CONNECT expression .)
    THEN            reduce using rule 59 (expression -> expression CONNECT expression .)
    DO              reduce using rule 59 (expression -> expression CONNECT expression .)
    RIGHT_PAREN     reduce using rule 59 (expression -> expression CONNECT expression .)
    RIGHT_SQUARE    reduce using rule 59 (expression -> expression CONNECT expression .)
    TO              reduce using rule 59 (expression -> expression CONNECT expression .)
    COLON           reduce using rule 59 (expression -> expression CONNECT expression .)
    STEP            reduce using rule 59 (expression -> expression CONNECT expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! DOT             [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! EQUAL           [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! LESS            [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! GREATER         [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! MUL             [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! N_DIV           [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression CONNECT expression .) ]
  ! CONNECT         [ reduce using rule 59 (expression -> expression CONNECT expression .) ]


state 114

    (19) statement -> INPUT ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (16) indexes -> . indexes COMMA expression
    (17) indexes -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    indexes                        shift and go to state 147
    expression                     shift and go to state 91

state 115

    (21) output_expression -> output_expression COMMA . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 148

state 116

    (98) expression -> expression DOT . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 149

state 117

    (41) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (16) indexes -> . indexes COMMA expression
    (17) indexes -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    indexes                        shift and go to state 150
    expression                     shift and go to state 91

state 118

    (23) statement -> IF expression THEN . statements ELSE statements ENDIF
    (24) statement -> IF expression THEN . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statements                     shift and go to state 151
    statement                      shift and go to state 2

state 119

    (25) statement -> CASE OF ID . cases ENDCASE
    (26) statement -> CASE OF ID . LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (27) cases -> . cases case
    (28) cases -> . case
    (29) case -> . case_expression COLON statements SEMICOLON
    (30) case -> . otherwise_statement SEMICOLON
    (31) case_expression -> . expression TO expression
    (32) case_expression -> . expression
    (33) otherwise_statement -> . OTHERWISE COLON statements
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    LEFT_SQUARE     shift and go to state 153
    OTHERWISE       shift and go to state 158
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    cases                          shift and go to state 152
    case                           shift and go to state 154
    case_expression                shift and go to state 155
    otherwise_statement            shift and go to state 156
    expression                     shift and go to state 157

state 120

    (34) statement -> FOR ID ASSIGN . expression TO expression STEP expression statements NEXT ID
    (35) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 159

state 121

    (36) statement -> REPEAT statements UNTIL . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 160

state 122

    (37) statement -> WHILE expression DO . statements ENDWHILE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statements                     shift and go to state 161
    statement                      shift and go to state 2

state 123

    (38) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDWHILE        shift and go to state 162
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 124

    (57) expression -> expression PLUS . expression
    (56) expression -> PLUS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 163

state 125

    (58) expression -> expression MINUS . expression
    (55) expression -> MINUS . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 164

state 126

    (77) statement -> PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (60) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (67) declare_parameters -> . declare_parameters COMMA declare_parameter
    (68) declare_parameters -> . declare_parameter
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression
    (69) declare_parameter -> . ID COLON ID
    (70) declare_parameter -> . ID COLON ARRAY
    (71) declare_parameter -> . BYREF ID COLON ID
    (72) declare_parameter -> . BYREF ID COLON ARRAY
    (73) declare_parameter -> . BYVAL ID COLON ID
    (74) declare_parameter -> . BYVAL ID COLON ARRAY

    ID              shift and go to state 165
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38
    BYREF           shift and go to state 168
    BYVAL           shift and go to state 169

    declare_parameters             shift and go to state 166
    expression                     shift and go to state 72
    declare_parameter              shift and go to state 167

state 127

    (78) statement -> PROCEDURE ID statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDPROCEDURE    shift and go to state 170
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 128

    (60) expression -> LEFT_PAREN expression RIGHT_PAREN .

    DOT             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OR              reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUAL           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MOD             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIV             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MUL             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    N_DIV           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONNECT         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DELETE          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DECLARE         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANT        reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ID              reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INPUT           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OUTPUT          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CASE            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REPEAT          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PROCEDURE       reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CALL            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FUNCTION        reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RETURN          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OPENFILE        reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    READFILE        reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WRITEFILE       reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEEK            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TYPE            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PASS            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IMPORT          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PRIVATE         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PUBLIC          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT             reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DATE            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    BOOLEAN         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CHAR            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING          reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REAL            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INTEGER         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    UNTIL           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDWHILE        reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDTYPE         reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDIF           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEXT            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEN            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DO              reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TO              reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COLON           reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STEP            reduce using rule 60 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 129

    (79) statement -> CALL ID LEFT_PAREN . parameters RIGHT_PAREN
    (75) parameters -> . parameters COMMA expression
    (76) parameters -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    parameters                     shift and go to state 171
    expression                     shift and go to state 94

state 130

    (81) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (67) declare_parameters -> . declare_parameters COMMA declare_parameter
    (68) declare_parameters -> . declare_parameter
    (69) declare_parameter -> . ID COLON ID
    (70) declare_parameter -> . ID COLON ARRAY
    (71) declare_parameter -> . BYREF ID COLON ID
    (72) declare_parameter -> . BYREF ID COLON ARRAY
    (73) declare_parameter -> . BYVAL ID COLON ID
    (74) declare_parameter -> . BYVAL ID COLON ARRAY

    ID              shift and go to state 172
    BYREF           shift and go to state 168
    BYVAL           shift and go to state 169

    declare_parameters             shift and go to state 173
    declare_parameter              shift and go to state 167

state 131

    (83) statement -> FUNCTION ID RETURNS . ID statements ENDFUNCTION
    (84) statement -> FUNCTION ID RETURNS . ARRAY statements ENDFUNCTION

    ID              shift and go to state 174
    ARRAY           shift and go to state 175


state 132

    (88) statement -> OPENFILE expression FOR . READ
    (89) statement -> OPENFILE expression FOR . WRITE
    (90) statement -> OPENFILE expression FOR . APPEND
    (91) statement -> OPENFILE expression FOR . RANDOM

    READ            shift and go to state 176
    WRITE           shift and go to state 177
    APPEND          shift and go to state 178
    RANDOM          shift and go to state 179


state 133

    (92) statement -> READFILE expression COMMA . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> READFILE expression COMMA . ID

    ID              shift and go to state 180


state 134

    (94) statement -> WRITEFILE expression COMMA . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 181

state 135

    (96) statement -> SEEK expression COMMA . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 182

state 136

    (97) statement -> TYPE ID statements . ENDTYPE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDTYPE         shift and go to state 183
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 137

    (100) statement -> TYPE ID EQUAL . LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> TYPE ID EQUAL . POINTER ID

    LEFT_PAREN      shift and go to state 184
    POINTER         shift and go to state 185


state 138

    (12) statement -> ID ASSIGN LEFT_SQUARE array_items . RIGHT_SQUARE
    (14) array_items -> array_items . COMMA expression

    RIGHT_SQUARE    shift and go to state 186
    COMMA           shift and go to state 187


state 139

    (15) array_items -> expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 15 (array_items -> expression .)
    COMMA           reduce using rule 15 (array_items -> expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 140

    (11) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE . ASSIGN expression
    (13) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE . ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (41) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    ASSIGN          shift and go to state 188
    DOT             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OR              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MOD             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    N_DIV           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DELETE          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PRIVATE         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PUBLIC          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 141

    (16) indexes -> indexes COMMA . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 189

state 142

    (85) expression -> ID LEFT_PAREN parameters RIGHT_PAREN .

    DOT             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 85 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)


state 143

    (75) parameters -> parameters COMMA . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 190

state 144

    (4) statement -> DECLARE ID COLON ID .

    DELETE          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DECLARE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PROCEDURE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CALL            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    FUNCTION        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    RETURN          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    OPENFILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    READFILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    WRITEFILE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CLOSEFILE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    SEEK            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    TYPE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PASS            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    IMPORT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PRIVATE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PUBLIC          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    MINUS           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PLUS            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    LEFT_PAREN      reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DATE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    BOOLEAN         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDPROCEDURE    reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDTYPE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDFUNCTION     reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    SEMICOLON       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 4 (statement -> DECLARE ID COLON ID .)


state 145

    (6) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 191


state 146

    (5) statement -> CONSTANT ID EQUAL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    DELETE          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    DECLARE         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    PROCEDURE       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CALL            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    FUNCTION        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    RETURN          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    OPENFILE        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    READFILE        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    WRITEFILE       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CLOSEFILE       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    SEEK            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    TYPE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    PASS            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    IMPORT          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    PRIVATE         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    PUBLIC          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_PAREN      reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    DATE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    BOOLEAN         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDPROCEDURE    reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDTYPE         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDFUNCTION     reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    SEMICOLON       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .) ]
  ! PLUS            [ reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .) ]


state 147

    (19) statement -> INPUT ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (16) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 192
    COMMA           shift and go to state 141


state 148

    (21) output_expression -> output_expression COMMA expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    DELETE          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    DECLARE         reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    CONSTANT        reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ID              reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    INPUT           reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    OUTPUT          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    IF              reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    CASE            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    FOR             reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    REPEAT          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    WHILE           reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    PROCEDURE       reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    CALL            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    FUNCTION        reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    RETURN          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    OPENFILE        reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    READFILE        reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    WRITEFILE       reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    CLOSEFILE       reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    SEEK            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    TYPE            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    PASS            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    IMPORT          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    PRIVATE         reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    PUBLIC          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    NOT             reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    LEFT_PAREN      reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    DATE            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    BOOLEAN         reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    CHAR            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    STRING          reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    REAL            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    INTEGER         reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    $end            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    UNTIL           reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ENDWHILE        reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ENDTYPE         reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ELSE            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ENDIF           reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    ENDFUNCTION     reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    SEMICOLON       reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    NEXT            reduce using rule 21 (output_expression -> output_expression COMMA expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 21 (output_expression -> output_expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 21 (output_expression -> output_expression COMMA expression .) ]


state 149

    (98) expression -> expression DOT expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COMMA           reduce using rule 98 (expression -> expression DOT expression .)
    DELETE          reduce using rule 98 (expression -> expression DOT expression .)
    DECLARE         reduce using rule 98 (expression -> expression DOT expression .)
    CONSTANT        reduce using rule 98 (expression -> expression DOT expression .)
    ID              reduce using rule 98 (expression -> expression DOT expression .)
    INPUT           reduce using rule 98 (expression -> expression DOT expression .)
    OUTPUT          reduce using rule 98 (expression -> expression DOT expression .)
    IF              reduce using rule 98 (expression -> expression DOT expression .)
    CASE            reduce using rule 98 (expression -> expression DOT expression .)
    FOR             reduce using rule 98 (expression -> expression DOT expression .)
    REPEAT          reduce using rule 98 (expression -> expression DOT expression .)
    WHILE           reduce using rule 98 (expression -> expression DOT expression .)
    PROCEDURE       reduce using rule 98 (expression -> expression DOT expression .)
    CALL            reduce using rule 98 (expression -> expression DOT expression .)
    FUNCTION        reduce using rule 98 (expression -> expression DOT expression .)
    RETURN          reduce using rule 98 (expression -> expression DOT expression .)
    OPENFILE        reduce using rule 98 (expression -> expression DOT expression .)
    READFILE        reduce using rule 98 (expression -> expression DOT expression .)
    WRITEFILE       reduce using rule 98 (expression -> expression DOT expression .)
    CLOSEFILE       reduce using rule 98 (expression -> expression DOT expression .)
    SEEK            reduce using rule 98 (expression -> expression DOT expression .)
    TYPE            reduce using rule 98 (expression -> expression DOT expression .)
    PASS            reduce using rule 98 (expression -> expression DOT expression .)
    IMPORT          reduce using rule 98 (expression -> expression DOT expression .)
    PRIVATE         reduce using rule 98 (expression -> expression DOT expression .)
    PUBLIC          reduce using rule 98 (expression -> expression DOT expression .)
    NOT             reduce using rule 98 (expression -> expression DOT expression .)
    LEFT_PAREN      reduce using rule 98 (expression -> expression DOT expression .)
    DATE            reduce using rule 98 (expression -> expression DOT expression .)
    BOOLEAN         reduce using rule 98 (expression -> expression DOT expression .)
    CHAR            reduce using rule 98 (expression -> expression DOT expression .)
    STRING          reduce using rule 98 (expression -> expression DOT expression .)
    REAL            reduce using rule 98 (expression -> expression DOT expression .)
    INTEGER         reduce using rule 98 (expression -> expression DOT expression .)
    $end            reduce using rule 98 (expression -> expression DOT expression .)
    UNTIL           reduce using rule 98 (expression -> expression DOT expression .)
    ENDWHILE        reduce using rule 98 (expression -> expression DOT expression .)
    ENDPROCEDURE    reduce using rule 98 (expression -> expression DOT expression .)
    ENDTYPE         reduce using rule 98 (expression -> expression DOT expression .)
    ELSE            reduce using rule 98 (expression -> expression DOT expression .)
    ENDIF           reduce using rule 98 (expression -> expression DOT expression .)
    ENDFUNCTION     reduce using rule 98 (expression -> expression DOT expression .)
    SEMICOLON       reduce using rule 98 (expression -> expression DOT expression .)
    NEXT            reduce using rule 98 (expression -> expression DOT expression .)
    THEN            reduce using rule 98 (expression -> expression DOT expression .)
    DO              reduce using rule 98 (expression -> expression DOT expression .)
    RIGHT_PAREN     reduce using rule 98 (expression -> expression DOT expression .)
    RIGHT_SQUARE    reduce using rule 98 (expression -> expression DOT expression .)
    TO              reduce using rule 98 (expression -> expression DOT expression .)
    COLON           reduce using rule 98 (expression -> expression DOT expression .)
    STEP            reduce using rule 98 (expression -> expression DOT expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! OR              [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! AND             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! EQUAL           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! LESS            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! GREATER         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MOD             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! DIV             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MUL             [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! N_DIV           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! PLUS            [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! CONNECT         [ reduce using rule 98 (expression -> expression DOT expression .) ]
  ! DOT             [ reduce using rule 98 (expression -> expression DOT expression .) ]


state 150

    (41) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (16) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 193
    COMMA           shift and go to state 141


state 151

    (23) statement -> IF expression THEN statements . ELSE statements ENDIF
    (24) statement -> IF expression THEN statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ELSE            shift and go to state 194
    ENDIF           shift and go to state 195
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 152

    (25) statement -> CASE OF ID cases . ENDCASE
    (27) cases -> cases . case
    (29) case -> . case_expression COLON statements SEMICOLON
    (30) case -> . otherwise_statement SEMICOLON
    (31) case_expression -> . expression TO expression
    (32) case_expression -> . expression
    (33) otherwise_statement -> . OTHERWISE COLON statements
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDCASE         shift and go to state 196
    OTHERWISE       shift and go to state 158
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    case                           shift and go to state 197
    case_expression                shift and go to state 155
    otherwise_statement            shift and go to state 156
    expression                     shift and go to state 157

state 153

    (26) statement -> CASE OF ID LEFT_SQUARE . indexes RIGHT_SQUARE cases ENDCASE
    (16) indexes -> . indexes COMMA expression
    (17) indexes -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    indexes                        shift and go to state 198
    expression                     shift and go to state 91

state 154

    (28) cases -> case .

    ENDCASE         reduce using rule 28 (cases -> case .)
    OTHERWISE       reduce using rule 28 (cases -> case .)
    ID              reduce using rule 28 (cases -> case .)
    NOT             reduce using rule 28 (cases -> case .)
    MINUS           reduce using rule 28 (cases -> case .)
    PLUS            reduce using rule 28 (cases -> case .)
    LEFT_PAREN      reduce using rule 28 (cases -> case .)
    DATE            reduce using rule 28 (cases -> case .)
    BOOLEAN         reduce using rule 28 (cases -> case .)
    CHAR            reduce using rule 28 (cases -> case .)
    STRING          reduce using rule 28 (cases -> case .)
    REAL            reduce using rule 28 (cases -> case .)
    INTEGER         reduce using rule 28 (cases -> case .)


state 155

    (29) case -> case_expression . COLON statements SEMICOLON

    COLON           shift and go to state 199


state 156

    (30) case -> otherwise_statement . SEMICOLON

    SEMICOLON       shift and go to state 200


state 157

    (31) case_expression -> expression . TO expression
    (32) case_expression -> expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    TO              shift and go to state 201
    COLON           reduce using rule 32 (case_expression -> expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 158

    (33) otherwise_statement -> OTHERWISE . COLON statements

    COLON           shift and go to state 202


state 159

    (34) statement -> FOR ID ASSIGN expression . TO expression STEP expression statements NEXT ID
    (35) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    TO              shift and go to state 203
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 160

    (36) statement -> REPEAT statements UNTIL expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    DECLARE         reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    PROCEDURE       reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    CALL            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    FUNCTION        reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    RETURN          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    OPENFILE        reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    READFILE        reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    WRITEFILE       reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    CLOSEFILE       reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    SEEK            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    TYPE            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    PASS            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    IMPORT          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    PRIVATE         reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    PUBLIC          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    LEFT_PAREN      reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    DATE            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    BOOLEAN         reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ENDPROCEDURE    reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ENDTYPE         reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    ENDFUNCTION     reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    SEMICOLON       reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 36 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 36 (statement -> REPEAT statements UNTIL expression .) ]
  ! PLUS            [ reduce using rule 36 (statement -> REPEAT statements UNTIL expression .) ]


state 161

    (37) statement -> WHILE expression DO statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDWHILE        shift and go to state 204
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 162

    (38) statement -> WHILE expression statements ENDWHILE .

    DELETE          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    DECLARE         reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    PROCEDURE       reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    CALL            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    FUNCTION        reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    RETURN          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    OPENFILE        reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    READFILE        reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    WRITEFILE       reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    CLOSEFILE       reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    SEEK            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    TYPE            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    PASS            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    IMPORT          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    PRIVATE         reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    PUBLIC          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    MINUS           reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    PLUS            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    DATE            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    BOOLEAN         reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ENDTYPE         reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    SEMICOLON       reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 38 (statement -> WHILE expression statements ENDWHILE .)


state 163

    (57) expression -> expression PLUS expression .
    (56) expression -> PLUS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! reduce/reduce conflict for DOT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OR resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for N_DIV resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DELETE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PASS resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DATE resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 56 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 56 (expression -> PLUS expression .)
    DO              reduce using rule 57 (expression -> expression PLUS expression .)
    STEP            reduce using rule 57 (expression -> expression PLUS expression .)
    DOT             reduce using rule 56 (expression -> PLUS expression .)
    OR              reduce using rule 56 (expression -> PLUS expression .)
    AND             reduce using rule 56 (expression -> PLUS expression .)
    EQUAL           reduce using rule 56 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 56 (expression -> PLUS expression .)
    LESS            reduce using rule 56 (expression -> PLUS expression .)
    GREATER         reduce using rule 56 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 56 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 56 (expression -> PLUS expression .)
    MOD             reduce using rule 56 (expression -> PLUS expression .)
    DIV             reduce using rule 56 (expression -> PLUS expression .)
    MUL             reduce using rule 56 (expression -> PLUS expression .)
    N_DIV           reduce using rule 56 (expression -> PLUS expression .)
    PLUS            reduce using rule 56 (expression -> PLUS expression .)
    MINUS           reduce using rule 56 (expression -> PLUS expression .)
    CONNECT         reduce using rule 56 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 56 (expression -> PLUS expression .)
    DELETE          reduce using rule 56 (expression -> PLUS expression .)
    DECLARE         reduce using rule 56 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 56 (expression -> PLUS expression .)
    ID              reduce using rule 56 (expression -> PLUS expression .)
    INPUT           reduce using rule 56 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 56 (expression -> PLUS expression .)
    IF              reduce using rule 56 (expression -> PLUS expression .)
    CASE            reduce using rule 56 (expression -> PLUS expression .)
    FOR             reduce using rule 56 (expression -> PLUS expression .)
    REPEAT          reduce using rule 56 (expression -> PLUS expression .)
    WHILE           reduce using rule 56 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 56 (expression -> PLUS expression .)
    CALL            reduce using rule 56 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 56 (expression -> PLUS expression .)
    RETURN          reduce using rule 56 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 56 (expression -> PLUS expression .)
    READFILE        reduce using rule 56 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 56 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 56 (expression -> PLUS expression .)
    SEEK            reduce using rule 56 (expression -> PLUS expression .)
    TYPE            reduce using rule 56 (expression -> PLUS expression .)
    PASS            reduce using rule 56 (expression -> PLUS expression .)
    IMPORT          reduce using rule 56 (expression -> PLUS expression .)
    PRIVATE         reduce using rule 56 (expression -> PLUS expression .)
    PUBLIC          reduce using rule 56 (expression -> PLUS expression .)
    NOT             reduce using rule 56 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 56 (expression -> PLUS expression .)
    DATE            reduce using rule 56 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 56 (expression -> PLUS expression .)
    CHAR            reduce using rule 56 (expression -> PLUS expression .)
    STRING          reduce using rule 56 (expression -> PLUS expression .)
    REAL            reduce using rule 56 (expression -> PLUS expression .)
    INTEGER         reduce using rule 56 (expression -> PLUS expression .)
    NEXT            reduce using rule 56 (expression -> PLUS expression .)

  ! OR              [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! N_DIV           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! CONNECT         [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DELETE          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DECLARE         [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! CONSTANT        [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! ID              [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! INPUT           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! OUTPUT          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! IF              [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! CASE            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! FOR             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! REPEAT          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! WHILE           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! PROCEDURE       [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! CALL            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! FUNCTION        [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! RETURN          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! OPENFILE        [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! READFILE        [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! WRITEFILE       [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! SEEK            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! TYPE            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! PASS            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! IMPORT          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! PRIVATE         [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! PUBLIC          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DATE            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! BOOLEAN         [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! CHAR            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! STRING          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! REAL            [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! INTEGER         [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 164

    (58) expression -> expression MINUS expression .
    (55) expression -> MINUS expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! reduce/reduce conflict for DOT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OR resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for N_DIV resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DELETE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PASS resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DATE resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 55 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 55 (expression -> MINUS expression .)
    DO              reduce using rule 58 (expression -> expression MINUS expression .)
    STEP            reduce using rule 58 (expression -> expression MINUS expression .)
    DOT             reduce using rule 55 (expression -> MINUS expression .)
    OR              reduce using rule 55 (expression -> MINUS expression .)
    AND             reduce using rule 55 (expression -> MINUS expression .)
    EQUAL           reduce using rule 55 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 55 (expression -> MINUS expression .)
    LESS            reduce using rule 55 (expression -> MINUS expression .)
    GREATER         reduce using rule 55 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 55 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 55 (expression -> MINUS expression .)
    MOD             reduce using rule 55 (expression -> MINUS expression .)
    DIV             reduce using rule 55 (expression -> MINUS expression .)
    MUL             reduce using rule 55 (expression -> MINUS expression .)
    N_DIV           reduce using rule 55 (expression -> MINUS expression .)
    PLUS            reduce using rule 55 (expression -> MINUS expression .)
    MINUS           reduce using rule 55 (expression -> MINUS expression .)
    CONNECT         reduce using rule 55 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 55 (expression -> MINUS expression .)
    DELETE          reduce using rule 55 (expression -> MINUS expression .)
    DECLARE         reduce using rule 55 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 55 (expression -> MINUS expression .)
    ID              reduce using rule 55 (expression -> MINUS expression .)
    INPUT           reduce using rule 55 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 55 (expression -> MINUS expression .)
    IF              reduce using rule 55 (expression -> MINUS expression .)
    CASE            reduce using rule 55 (expression -> MINUS expression .)
    FOR             reduce using rule 55 (expression -> MINUS expression .)
    REPEAT          reduce using rule 55 (expression -> MINUS expression .)
    WHILE           reduce using rule 55 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 55 (expression -> MINUS expression .)
    CALL            reduce using rule 55 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 55 (expression -> MINUS expression .)
    RETURN          reduce using rule 55 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 55 (expression -> MINUS expression .)
    READFILE        reduce using rule 55 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 55 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 55 (expression -> MINUS expression .)
    SEEK            reduce using rule 55 (expression -> MINUS expression .)
    TYPE            reduce using rule 55 (expression -> MINUS expression .)
    PASS            reduce using rule 55 (expression -> MINUS expression .)
    IMPORT          reduce using rule 55 (expression -> MINUS expression .)
    PRIVATE         reduce using rule 55 (expression -> MINUS expression .)
    PUBLIC          reduce using rule 55 (expression -> MINUS expression .)
    NOT             reduce using rule 55 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 55 (expression -> MINUS expression .)
    DATE            reduce using rule 55 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 55 (expression -> MINUS expression .)
    CHAR            reduce using rule 55 (expression -> MINUS expression .)
    STRING          reduce using rule 55 (expression -> MINUS expression .)
    REAL            reduce using rule 55 (expression -> MINUS expression .)
    INTEGER         reduce using rule 55 (expression -> MINUS expression .)
    NEXT            reduce using rule 55 (expression -> MINUS expression .)

  ! OR              [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! N_DIV           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! CONNECT         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DELETE          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DECLARE         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! CONSTANT        [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! ID              [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! INPUT           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! OUTPUT          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! IF              [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! CASE            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! FOR             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! REPEAT          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! WHILE           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PROCEDURE       [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! CALL            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! FUNCTION        [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! RETURN          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! OPENFILE        [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! READFILE        [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! WRITEFILE       [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! SEEK            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! TYPE            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PASS            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! IMPORT          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PRIVATE         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PUBLIC          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DATE            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! BOOLEAN         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! CHAR            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! REAL            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! EQUAL           [ shift and go to state 49 ]
  ! NOT_EQUAL       [ shift and go to state 50 ]
  ! LESS            [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS_EQUAL      [ shift and go to state 53 ]
  ! GREATER_EQUAL   [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! N_DIV           [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! CONNECT         [ shift and go to state 61 ]
  ! DOT             [ shift and go to state 116 ]


state 165

    (40) expression -> ID .
    (41) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (85) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> ID . LEFT_PAREN RIGHT_PAREN
    (69) declare_parameter -> ID . COLON ID
    (70) declare_parameter -> ID . COLON ARRAY

    RIGHT_PAREN     reduce using rule 40 (expression -> ID .)
    OR              reduce using rule 40 (expression -> ID .)
    AND             reduce using rule 40 (expression -> ID .)
    EQUAL           reduce using rule 40 (expression -> ID .)
    NOT_EQUAL       reduce using rule 40 (expression -> ID .)
    LESS            reduce using rule 40 (expression -> ID .)
    GREATER         reduce using rule 40 (expression -> ID .)
    LESS_EQUAL      reduce using rule 40 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 40 (expression -> ID .)
    MOD             reduce using rule 40 (expression -> ID .)
    DIV             reduce using rule 40 (expression -> ID .)
    MUL             reduce using rule 40 (expression -> ID .)
    N_DIV           reduce using rule 40 (expression -> ID .)
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    CONNECT         reduce using rule 40 (expression -> ID .)
    DOT             reduce using rule 40 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 117
    LEFT_PAREN      shift and go to state 43
    COLON           shift and go to state 205


state 166

    (77) statement -> PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (67) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 206
    COMMA           shift and go to state 207


state 167

    (68) declare_parameters -> declare_parameter .

    RIGHT_PAREN     reduce using rule 68 (declare_parameters -> declare_parameter .)
    COMMA           reduce using rule 68 (declare_parameters -> declare_parameter .)


state 168

    (71) declare_parameter -> BYREF . ID COLON ID
    (72) declare_parameter -> BYREF . ID COLON ARRAY

    ID              shift and go to state 208


state 169

    (73) declare_parameter -> BYVAL . ID COLON ID
    (74) declare_parameter -> BYVAL . ID COLON ARRAY

    ID              shift and go to state 209


state 170

    (78) statement -> PROCEDURE ID statements ENDPROCEDURE .

    DELETE          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    DECLARE         reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ID              reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INPUT           reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    IF              reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CASE            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FOR             reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REPEAT          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WHILE           reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CALL            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    RETURN          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    READFILE        reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEEK            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    TYPE            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PASS            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    IMPORT          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NOT             reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    MINUS           reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PLUS            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    DATE            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CHAR            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    STRING          reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REAL            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INTEGER         reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    $end            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    UNTIL           reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ELSE            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDIF           reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NEXT            reduce using rule 78 (statement -> PROCEDURE ID statements ENDPROCEDURE .)


state 171

    (79) statement -> CALL ID LEFT_PAREN parameters . RIGHT_PAREN
    (75) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 210
    COMMA           shift and go to state 143


state 172

    (69) declare_parameter -> ID . COLON ID
    (70) declare_parameter -> ID . COLON ARRAY

    COLON           shift and go to state 205


state 173

    (81) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (67) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 211
    COMMA           shift and go to state 207


state 174

    (83) statement -> FUNCTION ID RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 212
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 175

    (84) statement -> FUNCTION ID RETURNS ARRAY . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 213
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 176

    (88) statement -> OPENFILE expression FOR READ .

    DELETE          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    DECLARE         reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    CONSTANT        reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ID              reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    INPUT           reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    OUTPUT          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    IF              reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    CASE            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    FOR             reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    REPEAT          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    WHILE           reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    PROCEDURE       reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    CALL            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    FUNCTION        reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    RETURN          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    OPENFILE        reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    READFILE        reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    WRITEFILE       reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    CLOSEFILE       reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    SEEK            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    TYPE            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    PASS            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    IMPORT          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    PRIVATE         reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    PUBLIC          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    NOT             reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    MINUS           reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    PLUS            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    LEFT_PAREN      reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    DATE            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    BOOLEAN         reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    CHAR            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    STRING          reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    REAL            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    INTEGER         reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    $end            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    UNTIL           reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ENDWHILE        reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ENDPROCEDURE    reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ENDTYPE         reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ELSE            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ENDIF           reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    ENDFUNCTION     reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    SEMICOLON       reduce using rule 88 (statement -> OPENFILE expression FOR READ .)
    NEXT            reduce using rule 88 (statement -> OPENFILE expression FOR READ .)


state 177

    (89) statement -> OPENFILE expression FOR WRITE .

    DELETE          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    DECLARE         reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    CONSTANT        reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ID              reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    INPUT           reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    OUTPUT          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    IF              reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    CASE            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    FOR             reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    REPEAT          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    WHILE           reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    PROCEDURE       reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    CALL            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    FUNCTION        reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    RETURN          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    OPENFILE        reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    READFILE        reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    WRITEFILE       reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    CLOSEFILE       reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    SEEK            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    TYPE            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    PASS            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    IMPORT          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    PRIVATE         reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    PUBLIC          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    NOT             reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    MINUS           reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    PLUS            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    LEFT_PAREN      reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    DATE            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    BOOLEAN         reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    CHAR            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    STRING          reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    REAL            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    INTEGER         reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    $end            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    UNTIL           reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ENDWHILE        reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ENDPROCEDURE    reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ENDTYPE         reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ELSE            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ENDIF           reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    ENDFUNCTION     reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    SEMICOLON       reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)
    NEXT            reduce using rule 89 (statement -> OPENFILE expression FOR WRITE .)


state 178

    (90) statement -> OPENFILE expression FOR APPEND .

    DELETE          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    DECLARE         reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    CONSTANT        reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ID              reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    INPUT           reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    OUTPUT          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    IF              reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    CASE            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    FOR             reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    REPEAT          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    WHILE           reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    PROCEDURE       reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    CALL            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    FUNCTION        reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    RETURN          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    OPENFILE        reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    READFILE        reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    WRITEFILE       reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    CLOSEFILE       reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    SEEK            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    TYPE            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    PASS            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    IMPORT          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    PRIVATE         reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    PUBLIC          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    NOT             reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    MINUS           reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    PLUS            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    LEFT_PAREN      reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    DATE            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    BOOLEAN         reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    CHAR            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    STRING          reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    REAL            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    INTEGER         reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    $end            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    UNTIL           reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ENDWHILE        reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ENDPROCEDURE    reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ENDTYPE         reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ELSE            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ENDIF           reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    ENDFUNCTION     reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    SEMICOLON       reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)
    NEXT            reduce using rule 90 (statement -> OPENFILE expression FOR APPEND .)


state 179

    (91) statement -> OPENFILE expression FOR RANDOM .

    DELETE          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    DECLARE         reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    CONSTANT        reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ID              reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    INPUT           reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    OUTPUT          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    IF              reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    CASE            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    FOR             reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    REPEAT          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    WHILE           reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    PROCEDURE       reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    CALL            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    FUNCTION        reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    RETURN          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    OPENFILE        reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    READFILE        reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    WRITEFILE       reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    CLOSEFILE       reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    SEEK            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    TYPE            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    PASS            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    IMPORT          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    PRIVATE         reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    PUBLIC          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    NOT             reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    MINUS           reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    PLUS            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    LEFT_PAREN      reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    DATE            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    BOOLEAN         reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    CHAR            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    STRING          reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    REAL            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    INTEGER         reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    $end            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    UNTIL           reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ENDWHILE        reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ENDPROCEDURE    reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ENDTYPE         reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ELSE            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ENDIF           reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    ENDFUNCTION     reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    SEMICOLON       reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)
    NEXT            reduce using rule 91 (statement -> OPENFILE expression FOR RANDOM .)


state 180

    (92) statement -> READFILE expression COMMA ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> READFILE expression COMMA ID .

    LEFT_SQUARE     shift and go to state 214
    DELETE          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    DECLARE         reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    CONSTANT        reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ID              reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    INPUT           reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    OUTPUT          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    IF              reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    CASE            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    FOR             reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    REPEAT          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    WHILE           reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    PROCEDURE       reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    CALL            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    FUNCTION        reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    RETURN          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    OPENFILE        reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    READFILE        reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    WRITEFILE       reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    CLOSEFILE       reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    SEEK            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    TYPE            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    PASS            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    IMPORT          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    PRIVATE         reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    PUBLIC          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    NOT             reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    MINUS           reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    PLUS            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    LEFT_PAREN      reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    DATE            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    BOOLEAN         reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    CHAR            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    STRING          reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    REAL            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    INTEGER         reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    $end            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    UNTIL           reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ENDWHILE        reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ENDPROCEDURE    reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ENDTYPE         reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ELSE            reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ENDIF           reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    ENDFUNCTION     reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    SEMICOLON       reduce using rule 93 (statement -> READFILE expression COMMA ID .)
    NEXT            reduce using rule 93 (statement -> READFILE expression COMMA ID .)


state 181

    (94) statement -> WRITEFILE expression COMMA expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    DECLARE         reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    CONSTANT        reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ID              reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    INPUT           reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    OUTPUT          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    IF              reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    CASE            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    FOR             reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    REPEAT          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    WHILE           reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    PROCEDURE       reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    CALL            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    FUNCTION        reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    RETURN          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    OPENFILE        reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    READFILE        reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    WRITEFILE       reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    CLOSEFILE       reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    SEEK            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    TYPE            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    PASS            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    IMPORT          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    PRIVATE         reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    PUBLIC          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    NOT             reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    LEFT_PAREN      reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    DATE            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    BOOLEAN         reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    CHAR            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    STRING          reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    REAL            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    INTEGER         reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    $end            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    UNTIL           reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ENDWHILE        reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ENDTYPE         reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ELSE            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ENDIF           reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    ENDFUNCTION     reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    SEMICOLON       reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    NEXT            reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 94 (statement -> WRITEFILE expression COMMA expression .) ]


state 182

    (96) statement -> SEEK expression COMMA expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    DECLARE         reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    CONSTANT        reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ID              reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    INPUT           reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    OUTPUT          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    IF              reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    CASE            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    FOR             reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    REPEAT          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    WHILE           reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    PROCEDURE       reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    CALL            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    FUNCTION        reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    RETURN          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    OPENFILE        reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    READFILE        reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    WRITEFILE       reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    CLOSEFILE       reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    SEEK            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    TYPE            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    PASS            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    IMPORT          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    PRIVATE         reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    PUBLIC          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    NOT             reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    LEFT_PAREN      reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    DATE            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    BOOLEAN         reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    CHAR            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    STRING          reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    REAL            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    INTEGER         reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    $end            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    UNTIL           reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ENDWHILE        reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ENDTYPE         reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ELSE            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ENDIF           reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    ENDFUNCTION     reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    SEMICOLON       reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    NEXT            reduce using rule 96 (statement -> SEEK expression COMMA expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 96 (statement -> SEEK expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 96 (statement -> SEEK expression COMMA expression .) ]


state 183

    (97) statement -> TYPE ID statements ENDTYPE .

    DELETE          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    DECLARE         reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    CONSTANT        reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ID              reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    INPUT           reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    OUTPUT          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    IF              reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    CASE            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    FOR             reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    REPEAT          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    WHILE           reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    PROCEDURE       reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    CALL            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    FUNCTION        reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    RETURN          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    OPENFILE        reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    READFILE        reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    WRITEFILE       reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    CLOSEFILE       reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    SEEK            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    TYPE            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    PASS            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    IMPORT          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    PRIVATE         reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    PUBLIC          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    NOT             reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    MINUS           reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    PLUS            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    LEFT_PAREN      reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    DATE            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    BOOLEAN         reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    CHAR            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    STRING          reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    REAL            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    INTEGER         reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    $end            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    UNTIL           reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ENDWHILE        reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ENDPROCEDURE    reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ENDTYPE         reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ELSE            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ENDIF           reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    ENDFUNCTION     reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    SEMICOLON       reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)
    NEXT            reduce using rule 97 (statement -> TYPE ID statements ENDTYPE .)


state 184

    (100) statement -> TYPE ID EQUAL LEFT_PAREN . enumerate_items RIGHT_PAREN
    (101) enumerate_items -> . enumerate_items COMMA ID
    (102) enumerate_items -> . ID

    ID              shift and go to state 215

    enumerate_items                shift and go to state 216

state 185

    (103) statement -> TYPE ID EQUAL POINTER . ID

    ID              shift and go to state 217


state 186

    (12) statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .

    DELETE          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    DECLARE         reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CONSTANT        reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ID              reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    INPUT           reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    OUTPUT          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    IF              reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CASE            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    FOR             reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    REPEAT          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    WHILE           reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CALL            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    FUNCTION        reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    RETURN          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    OPENFILE        reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    READFILE        reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEEK            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    TYPE            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PASS            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    IMPORT          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PRIVATE         reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PUBLIC          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    NOT             reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    MINUS           reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PLUS            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    DATE            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CHAR            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    STRING          reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    REAL            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    INTEGER         reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    $end            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    UNTIL           reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ELSE            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDIF           reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    NEXT            reduce using rule 12 (statement -> ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)


state 187

    (14) array_items -> array_items COMMA . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 218

state 188

    (11) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN . expression
    (13) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN . LEFT_SQUARE array_items RIGHT_SQUARE
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    LEFT_SQUARE     shift and go to state 219
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 220

state 189

    (16) indexes -> indexes COMMA expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 16 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 16 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 190

    (75) parameters -> parameters COMMA expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_PAREN     reduce using rule 75 (parameters -> parameters COMMA expression .)
    COMMA           reduce using rule 75 (parameters -> parameters COMMA expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 191

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (7) dimensions -> . dimensions COMMA dimension
    (8) dimensions -> . dimension
    (9) dimension -> . expression COLON expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    dimensions                     shift and go to state 221
    dimension                      shift and go to state 222
    expression                     shift and go to state 223

state 192

    (19) statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DELETE          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PRIVATE         reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PUBLIC          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 19 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 193

    (41) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    OR              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MOD             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    N_DIV           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DOT             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COMMA           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DELETE          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PRIVATE         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PUBLIC          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    THEN            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DO              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TO              reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COLON           reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STEP            reduce using rule 41 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 194

    (23) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statements                     shift and go to state 224
    statement                      shift and go to state 2

state 195

    (24) statement -> IF expression THEN statements ENDIF .

    DELETE          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    DECLARE         reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    PROCEDURE       reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    CALL            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    FUNCTION        reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    RETURN          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    OPENFILE        reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    READFILE        reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    WRITEFILE       reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    CLOSEFILE       reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    SEEK            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    TYPE            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    PASS            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    IMPORT          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    PRIVATE         reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    PUBLIC          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    MINUS           reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    PLUS            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    LEFT_PAREN      reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    DATE            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    BOOLEAN         reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ENDPROCEDURE    reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ENDTYPE         reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    ENDFUNCTION     reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    SEMICOLON       reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 24 (statement -> IF expression THEN statements ENDIF .)


state 196

    (25) statement -> CASE OF ID cases ENDCASE .

    DELETE          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    DECLARE         reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    CONSTANT        reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ID              reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    INPUT           reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    OUTPUT          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    IF              reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    CASE            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    FOR             reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    REPEAT          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    WHILE           reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    PROCEDURE       reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    CALL            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    FUNCTION        reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    RETURN          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    OPENFILE        reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    READFILE        reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    WRITEFILE       reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    CLOSEFILE       reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    SEEK            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    TYPE            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    PASS            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    IMPORT          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    PRIVATE         reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    PUBLIC          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    NOT             reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    MINUS           reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    PLUS            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    LEFT_PAREN      reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    DATE            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    BOOLEAN         reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    CHAR            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    STRING          reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    REAL            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    INTEGER         reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    $end            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    UNTIL           reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ENDWHILE        reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ENDTYPE         reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ELSE            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ENDIF           reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    ENDFUNCTION     reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    SEMICOLON       reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)
    NEXT            reduce using rule 25 (statement -> CASE OF ID cases ENDCASE .)


state 197

    (27) cases -> cases case .

    ENDCASE         reduce using rule 27 (cases -> cases case .)
    OTHERWISE       reduce using rule 27 (cases -> cases case .)
    ID              reduce using rule 27 (cases -> cases case .)
    NOT             reduce using rule 27 (cases -> cases case .)
    MINUS           reduce using rule 27 (cases -> cases case .)
    PLUS            reduce using rule 27 (cases -> cases case .)
    LEFT_PAREN      reduce using rule 27 (cases -> cases case .)
    DATE            reduce using rule 27 (cases -> cases case .)
    BOOLEAN         reduce using rule 27 (cases -> cases case .)
    CHAR            reduce using rule 27 (cases -> cases case .)
    STRING          reduce using rule 27 (cases -> cases case .)
    REAL            reduce using rule 27 (cases -> cases case .)
    INTEGER         reduce using rule 27 (cases -> cases case .)


state 198

    (26) statement -> CASE OF ID LEFT_SQUARE indexes . RIGHT_SQUARE cases ENDCASE
    (16) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 225
    COMMA           shift and go to state 141


state 199

    (29) case -> case_expression COLON . statements SEMICOLON
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 226
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 200

    (30) case -> otherwise_statement SEMICOLON .

    ENDCASE         reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    OTHERWISE       reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    ID              reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    NOT             reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    MINUS           reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    PLUS            reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    LEFT_PAREN      reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    DATE            reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    BOOLEAN         reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    CHAR            reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    STRING          reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    REAL            reduce using rule 30 (case -> otherwise_statement SEMICOLON .)
    INTEGER         reduce using rule 30 (case -> otherwise_statement SEMICOLON .)


state 201

    (31) case_expression -> expression TO . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 227

state 202

    (33) otherwise_statement -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 228
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 203

    (34) statement -> FOR ID ASSIGN expression TO . expression STEP expression statements NEXT ID
    (35) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 229

state 204

    (37) statement -> WHILE expression DO statements ENDWHILE .

    DELETE          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    DECLARE         reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    CONSTANT        reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ID              reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    INPUT           reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    OUTPUT          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    IF              reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    CASE            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    FOR             reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    REPEAT          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    WHILE           reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    PROCEDURE       reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    CALL            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    FUNCTION        reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    RETURN          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    OPENFILE        reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    READFILE        reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    WRITEFILE       reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    CLOSEFILE       reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    SEEK            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    TYPE            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    PASS            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    IMPORT          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    PRIVATE         reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    PUBLIC          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    NOT             reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    MINUS           reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    PLUS            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    DATE            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    BOOLEAN         reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    CHAR            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    STRING          reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    REAL            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    INTEGER         reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    $end            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    UNTIL           reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDWHILE        reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDTYPE         reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ELSE            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDIF           reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    SEMICOLON       reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)
    NEXT            reduce using rule 37 (statement -> WHILE expression DO statements ENDWHILE .)


state 205

    (69) declare_parameter -> ID COLON . ID
    (70) declare_parameter -> ID COLON . ARRAY

    ID              shift and go to state 230
    ARRAY           shift and go to state 231


state 206

    (77) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 232
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 207

    (67) declare_parameters -> declare_parameters COMMA . declare_parameter
    (69) declare_parameter -> . ID COLON ID
    (70) declare_parameter -> . ID COLON ARRAY
    (71) declare_parameter -> . BYREF ID COLON ID
    (72) declare_parameter -> . BYREF ID COLON ARRAY
    (73) declare_parameter -> . BYVAL ID COLON ID
    (74) declare_parameter -> . BYVAL ID COLON ARRAY

    ID              shift and go to state 172
    BYREF           shift and go to state 168
    BYVAL           shift and go to state 169

    declare_parameter              shift and go to state 233

state 208

    (71) declare_parameter -> BYREF ID . COLON ID
    (72) declare_parameter -> BYREF ID . COLON ARRAY

    COLON           shift and go to state 234


state 209

    (73) declare_parameter -> BYVAL ID . COLON ID
    (74) declare_parameter -> BYVAL ID . COLON ARRAY

    COLON           shift and go to state 235


state 210

    (79) statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .

    DELETE          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 79 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)


state 211

    (81) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (82) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION

    RETURNS         shift and go to state 236


state 212

    (83) statement -> FUNCTION ID RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 237
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 213

    (84) statement -> FUNCTION ID RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 238
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 214

    (92) statement -> READFILE expression COMMA ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (16) indexes -> . indexes COMMA expression
    (17) indexes -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 91
    indexes                        shift and go to state 239

state 215

    (102) enumerate_items -> ID .

    RIGHT_PAREN     reduce using rule 102 (enumerate_items -> ID .)
    COMMA           reduce using rule 102 (enumerate_items -> ID .)


state 216

    (100) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items . RIGHT_PAREN
    (101) enumerate_items -> enumerate_items . COMMA ID

    RIGHT_PAREN     shift and go to state 240
    COMMA           shift and go to state 241


state 217

    (103) statement -> TYPE ID EQUAL POINTER ID .

    DELETE          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    DECLARE         reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    CONSTANT        reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ID              reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    INPUT           reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    OUTPUT          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    IF              reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    CASE            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    FOR             reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    REPEAT          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    WHILE           reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    PROCEDURE       reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    CALL            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    FUNCTION        reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    RETURN          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    OPENFILE        reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    READFILE        reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    WRITEFILE       reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    CLOSEFILE       reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    SEEK            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    TYPE            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    PASS            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    IMPORT          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    PRIVATE         reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    PUBLIC          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    NOT             reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    MINUS           reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    PLUS            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    LEFT_PAREN      reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    DATE            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    BOOLEAN         reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    CHAR            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    STRING          reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    REAL            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    INTEGER         reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    $end            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    UNTIL           reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDWHILE        reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDPROCEDURE    reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDTYPE         reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ELSE            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDIF           reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDFUNCTION     reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    SEMICOLON       reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)
    NEXT            reduce using rule 103 (statement -> TYPE ID EQUAL POINTER ID .)


state 218

    (14) array_items -> array_items COMMA expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 14 (array_items -> array_items COMMA expression .)
    COMMA           reduce using rule 14 (array_items -> array_items COMMA expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 219

    (13) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE . array_items RIGHT_SQUARE
    (14) array_items -> . array_items COMMA expression
    (15) array_items -> . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    array_items                    shift and go to state 242
    expression                     shift and go to state 139

state 220

    (11) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    DECLARE         reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CONSTANT        reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ID              reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INPUT           reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OUTPUT          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    IF              reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CASE            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FOR             reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REPEAT          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WHILE           reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    PROCEDURE       reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CALL            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FUNCTION        reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    RETURN          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OPENFILE        reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    READFILE        reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WRITEFILE       reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CLOSEFILE       reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    SEEK            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    TYPE            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    PASS            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    IMPORT          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    PRIVATE         reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    PUBLIC          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NOT             reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    LEFT_PAREN      reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    DATE            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    BOOLEAN         reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CHAR            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    STRING          reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REAL            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INTEGER         reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    $end            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    UNTIL           reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDWHILE        reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDTYPE         reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ELSE            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDIF           reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDFUNCTION     reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    SEMICOLON       reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NEXT            reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116

  ! MINUS           [ reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 11 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .) ]


state 221

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (7) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 243
    COMMA           shift and go to state 244


state 222

    (8) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 8 (dimensions -> dimension .)
    COMMA           reduce using rule 8 (dimensions -> dimension .)


state 223

    (9) dimension -> expression . COLON expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    COLON           shift and go to state 245
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 224

    (23) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDIF           shift and go to state 246
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 225

    (26) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE . cases ENDCASE
    (27) cases -> . cases case
    (28) cases -> . case
    (29) case -> . case_expression COLON statements SEMICOLON
    (30) case -> . otherwise_statement SEMICOLON
    (31) case_expression -> . expression TO expression
    (32) case_expression -> . expression
    (33) otherwise_statement -> . OTHERWISE COLON statements
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    OTHERWISE       shift and go to state 158
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    cases                          shift and go to state 247
    case                           shift and go to state 154
    case_expression                shift and go to state 155
    otherwise_statement            shift and go to state 156
    expression                     shift and go to state 157

state 226

    (29) case -> case_expression COLON statements . SEMICOLON
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    SEMICOLON       shift and go to state 248
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 227

    (31) case_expression -> expression TO expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    COLON           reduce using rule 31 (case_expression -> expression TO expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 228

    (33) otherwise_statement -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    SEMICOLON       reduce using rule 33 (otherwise_statement -> OTHERWISE COLON statements .)
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 229

    (34) statement -> FOR ID ASSIGN expression TO expression . STEP expression statements NEXT ID
    (35) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    STEP            shift and go to state 249
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statements                     shift and go to state 250
    statement                      shift and go to state 2

state 230

    (69) declare_parameter -> ID COLON ID .

    RIGHT_PAREN     reduce using rule 69 (declare_parameter -> ID COLON ID .)
    COMMA           reduce using rule 69 (declare_parameter -> ID COLON ID .)


state 231

    (70) declare_parameter -> ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 70 (declare_parameter -> ID COLON ARRAY .)
    COMMA           reduce using rule 70 (declare_parameter -> ID COLON ARRAY .)


state 232

    (77) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDPROCEDURE    shift and go to state 251
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 233

    (67) declare_parameters -> declare_parameters COMMA declare_parameter .

    RIGHT_PAREN     reduce using rule 67 (declare_parameters -> declare_parameters COMMA declare_parameter .)
    COMMA           reduce using rule 67 (declare_parameters -> declare_parameters COMMA declare_parameter .)


state 234

    (71) declare_parameter -> BYREF ID COLON . ID
    (72) declare_parameter -> BYREF ID COLON . ARRAY

    ID              shift and go to state 252
    ARRAY           shift and go to state 253


state 235

    (73) declare_parameter -> BYVAL ID COLON . ID
    (74) declare_parameter -> BYVAL ID COLON . ARRAY

    ID              shift and go to state 254
    ARRAY           shift and go to state 255


state 236

    (81) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (82) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION

    ID              shift and go to state 256
    ARRAY           shift and go to state 257


state 237

    (83) statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 83 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)


state 238

    (84) statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 84 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)


state 239

    (92) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (16) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 258
    COMMA           shift and go to state 141


state 240

    (100) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .

    DELETE          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DECLARE         reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CONSTANT        reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ID              reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INPUT           reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OUTPUT          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IF              reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CASE            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FOR             reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REPEAT          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WHILE           reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PROCEDURE       reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CALL            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FUNCTION        reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    RETURN          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OPENFILE        reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    READFILE        reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WRITEFILE       reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEEK            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    TYPE            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PASS            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IMPORT          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PRIVATE         reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PUBLIC          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NOT             reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    MINUS           reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PLUS            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DATE            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    BOOLEAN         reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CHAR            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    STRING          reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REAL            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INTEGER         reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    $end            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    UNTIL           reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDWHILE        reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDTYPE         reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ELSE            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDIF           reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEMICOLON       reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NEXT            reduce using rule 100 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)


state 241

    (101) enumerate_items -> enumerate_items COMMA . ID

    ID              shift and go to state 259


state 242

    (13) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items . RIGHT_SQUARE
    (14) array_items -> array_items . COMMA expression

    RIGHT_SQUARE    shift and go to state 260
    COMMA           shift and go to state 187


state 243

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 261


state 244

    (7) dimensions -> dimensions COMMA . dimension
    (9) dimension -> . expression COLON expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    dimension                      shift and go to state 262
    expression                     shift and go to state 223

state 245

    (9) dimension -> expression COLON . expression
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 263

state 246

    (23) statement -> IF expression THEN statements ELSE statements ENDIF .

    DELETE          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DECLARE         reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PROCEDURE       reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CALL            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FUNCTION        reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    RETURN          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OPENFILE        reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    READFILE        reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WRITEFILE       reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CLOSEFILE       reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEEK            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    TYPE            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PASS            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IMPORT          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PRIVATE         reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PUBLIC          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    MINUS           reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PLUS            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_PAREN      reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DATE            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    BOOLEAN         reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDPROCEDURE    reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDTYPE         reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDFUNCTION     reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEMICOLON       reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 23 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 247

    (26) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases . ENDCASE
    (27) cases -> cases . case
    (29) case -> . case_expression COLON statements SEMICOLON
    (30) case -> . otherwise_statement SEMICOLON
    (31) case_expression -> . expression TO expression
    (32) case_expression -> . expression
    (33) otherwise_statement -> . OTHERWISE COLON statements
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDCASE         shift and go to state 264
    OTHERWISE       shift and go to state 158
    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    case                           shift and go to state 197
    case_expression                shift and go to state 155
    otherwise_statement            shift and go to state 156
    expression                     shift and go to state 157

state 248

    (29) case -> case_expression COLON statements SEMICOLON .

    ENDCASE         reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    OTHERWISE       reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    ID              reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    NOT             reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    MINUS           reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    PLUS            reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_PAREN      reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    DATE            reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    BOOLEAN         reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    CHAR            reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    STRING          reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    REAL            reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)
    INTEGER         reduce using rule 29 (case -> case_expression COLON statements SEMICOLON .)


state 249

    (34) statement -> FOR ID ASSIGN expression TO expression STEP . expression statements NEXT ID
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ID              shift and go to state 65
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 265

state 250

    (35) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    NEXT            shift and go to state 266
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 251

    (77) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 77 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 252

    (71) declare_parameter -> BYREF ID COLON ID .

    RIGHT_PAREN     reduce using rule 71 (declare_parameter -> BYREF ID COLON ID .)
    COMMA           reduce using rule 71 (declare_parameter -> BYREF ID COLON ID .)


state 253

    (72) declare_parameter -> BYREF ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 72 (declare_parameter -> BYREF ID COLON ARRAY .)
    COMMA           reduce using rule 72 (declare_parameter -> BYREF ID COLON ARRAY .)


state 254

    (73) declare_parameter -> BYVAL ID COLON ID .

    RIGHT_PAREN     reduce using rule 73 (declare_parameter -> BYVAL ID COLON ID .)
    COMMA           reduce using rule 73 (declare_parameter -> BYVAL ID COLON ID .)


state 255

    (74) declare_parameter -> BYVAL ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 74 (declare_parameter -> BYVAL ID COLON ARRAY .)
    COMMA           reduce using rule 74 (declare_parameter -> BYVAL ID COLON ARRAY .)


state 256

    (81) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 267
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 257

    (82) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statements                     shift and go to state 268
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 258

    (92) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DELETE          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PRIVATE         reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PUBLIC          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 92 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 259

    (101) enumerate_items -> enumerate_items COMMA ID .

    RIGHT_PAREN     reduce using rule 101 (enumerate_items -> enumerate_items COMMA ID .)
    COMMA           reduce using rule 101 (enumerate_items -> enumerate_items COMMA ID .)


state 260

    (13) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .

    DELETE          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    DECLARE         reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CONSTANT        reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ID              reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    INPUT           reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    OUTPUT          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    IF              reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CASE            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    FOR             reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    REPEAT          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    WHILE           reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CALL            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    FUNCTION        reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    RETURN          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    OPENFILE        reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    READFILE        reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEEK            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    TYPE            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PASS            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    IMPORT          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PRIVATE         reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PUBLIC          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    NOT             reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    MINUS           reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    PLUS            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    DATE            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    CHAR            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    STRING          reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    REAL            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    INTEGER         reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    $end            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    UNTIL           reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ELSE            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDIF           reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)
    NEXT            reduce using rule 13 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE .)


state 261

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 269


state 262

    (7) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 7 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 7 (dimensions -> dimensions COMMA dimension .)


state 263

    (9) dimension -> expression COLON expression .
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 9 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 9 (dimension -> expression COLON expression .)
    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116


state 264

    (26) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .

    DELETE          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    DECLARE         reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CONSTANT        reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ID              reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    INPUT           reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    OUTPUT          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    IF              reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CASE            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    FOR             reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    REPEAT          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    WHILE           reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PROCEDURE       reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CALL            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    FUNCTION        reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    RETURN          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    OPENFILE        reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    READFILE        reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    WRITEFILE       reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CLOSEFILE       reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    SEEK            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    TYPE            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PASS            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    IMPORT          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PRIVATE         reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PUBLIC          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NOT             reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    MINUS           reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PLUS            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    LEFT_PAREN      reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    DATE            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    BOOLEAN         reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CHAR            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    STRING          reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    REAL            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    INTEGER         reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    $end            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    UNTIL           reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDWHILE        reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDTYPE         reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ELSE            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDIF           reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDFUNCTION     reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    SEMICOLON       reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NEXT            reduce using rule 26 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)


state 265

    (34) statement -> FOR ID ASSIGN expression TO expression STEP expression . statements NEXT ID
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (45) expression -> expression . EQUAL expression
    (46) expression -> expression . NOT_EQUAL expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . GREATER expression
    (49) expression -> expression . LESS_EQUAL expression
    (50) expression -> expression . GREATER_EQUAL expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV expression
    (53) expression -> expression . MUL expression
    (54) expression -> expression . N_DIV expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . CONNECT expression
    (98) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    OR              shift and go to state 47
    AND             shift and go to state 48
    EQUAL           shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    LESS            shift and go to state 51
    GREATER         shift and go to state 52
    LESS_EQUAL      shift and go to state 53
    GREATER_EQUAL   shift and go to state 54
    MOD             shift and go to state 55
    DIV             shift and go to state 56
    MUL             shift and go to state 57
    N_DIV           shift and go to state 58
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CONNECT         shift and go to state 61
    DOT             shift and go to state 116
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statements                     shift and go to state 270
    statement                      shift and go to state 2

state 266

    (35) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 271


state 267

    (81) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 272
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 268

    (82) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 273
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 7

state 269

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DELETE          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DECLARE         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OPENFILE        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    READFILE        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WRITEFILE       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLOSEFILE       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEEK            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    TYPE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PASS            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IMPORT          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PRIVATE         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PUBLIC          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DATE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDTYPE         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 270

    (34) statement -> FOR ID ASSIGN expression TO expression STEP expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (10) statement -> . ID ASSIGN expression
    (11) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (12) statement -> . ID ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (13) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN LEFT_SQUARE array_items RIGHT_SQUARE
    (18) statement -> . INPUT ID
    (19) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (20) statement -> . OUTPUT output_expression
    (23) statement -> . IF expression THEN statements ELSE statements ENDIF
    (24) statement -> . IF expression THEN statements ENDIF
    (25) statement -> . CASE OF ID cases ENDCASE
    (26) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (34) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (35) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (36) statement -> . REPEAT statements UNTIL expression
    (37) statement -> . WHILE expression DO statements ENDWHILE
    (38) statement -> . WHILE expression statements ENDWHILE
    (39) statement -> . expression
    (77) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (78) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (79) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (80) statement -> . CALL ID
    (81) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (82) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (83) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (84) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (87) statement -> . RETURN expression
    (88) statement -> . OPENFILE expression FOR READ
    (89) statement -> . OPENFILE expression FOR WRITE
    (90) statement -> . OPENFILE expression FOR APPEND
    (91) statement -> . OPENFILE expression FOR RANDOM
    (92) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (93) statement -> . READFILE expression COMMA ID
    (94) statement -> . WRITEFILE expression COMMA expression
    (95) statement -> . CLOSEFILE expression
    (96) statement -> . SEEK expression COMMA expression
    (97) statement -> . TYPE ID statements ENDTYPE
    (99) statement -> . expression DOT statement
    (100) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (103) statement -> . TYPE ID EQUAL POINTER ID
    (104) statement -> . PASS
    (105) statement -> . IMPORT expression
    (106) statement -> . PRIVATE statement
    (107) statement -> . PUBLIC statement
    (40) expression -> . ID
    (41) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . NOT expression
    (45) expression -> . expression EQUAL expression
    (46) expression -> . expression NOT_EQUAL expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression GREATER expression
    (49) expression -> . expression LESS_EQUAL expression
    (50) expression -> . expression GREATER_EQUAL expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV expression
    (53) expression -> . expression MUL expression
    (54) expression -> . expression N_DIV expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression CONNECT expression
    (60) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) expression -> . DATE
    (62) expression -> . BOOLEAN
    (63) expression -> . CHAR
    (64) expression -> . STRING
    (65) expression -> . REAL
    (66) expression -> . INTEGER
    (85) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (86) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (98) expression -> . expression DOT expression

    NEXT            shift and go to state 274
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    ID              shift and go to state 4
    INPUT           shift and go to state 8
    OUTPUT          shift and go to state 9
    IF              shift and go to state 10
    CASE            shift and go to state 11
    FOR             shift and go to state 12
    REPEAT          shift and go to state 13
    WHILE           shift and go to state 14
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    OPENFILE        shift and go to state 20
    READFILE        shift and go to state 21
    WRITEFILE       shift and go to state 22
    CLOSEFILE       shift and go to state 23
    SEEK            shift and go to state 24
    TYPE            shift and go to state 25
    PASS            shift and go to state 26
    IMPORT          shift and go to state 27
    PRIVATE         shift and go to state 28
    PUBLIC          shift and go to state 29
    NOT             shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32
    LEFT_PAREN      shift and go to state 16
    DATE            shift and go to state 33
    BOOLEAN         shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    REAL            shift and go to state 37
    INTEGER         shift and go to state 38

    expression                     shift and go to state 7
    statement                      shift and go to state 39

state 271

    (35) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DELETE          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DECLARE         reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PROCEDURE       reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CALL            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FUNCTION        reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    RETURN          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OPENFILE        reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    READFILE        reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WRITEFILE       reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEEK            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    TYPE            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PASS            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IMPORT          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PRIVATE         reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PUBLIC          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    MINUS           reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PLUS            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DATE            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    BOOLEAN         reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDTYPE         reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEMICOLON       reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 35 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)


state 272

    (81) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 81 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 273

    (82) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 82 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 274

    (34) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT . ID

    ID              shift and go to state 275


state 275

    (34) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .

    DELETE          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DECLARE         reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CONSTANT        reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ID              reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INPUT           reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OUTPUT          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IF              reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CASE            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FOR             reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REPEAT          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WHILE           reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PROCEDURE       reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CALL            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FUNCTION        reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    RETURN          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OPENFILE        reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    READFILE        reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WRITEFILE       reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEEK            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    TYPE            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PASS            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IMPORT          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PRIVATE         reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PUBLIC          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NOT             reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    MINUS           reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PLUS            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DATE            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    BOOLEAN         reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CHAR            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    STRING          reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REAL            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INTEGER         reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    $end            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    UNTIL           reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDWHILE        reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDTYPE         reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ELSE            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDIF           reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEMICOLON       reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NEXT            reduce using rule 34 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_PAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 7 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 7 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 65 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for DOT in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 97 resolved as shift
